function getFormData(e,n){for(var t=e.getElementsByTagName("input"),i={},a=0;a<t.length;a++){var s=t[a];"password"!==s.type&&"password"!==s.name&&(i[s.name]=n[s.name].$modelValue)}return i}function sendData(e,n){var t,i=new XMLHttpRequest,a="",s=[];for(t in e)s.push(encodeURIComponent(t)+"="+encodeURIComponent(e[t]));a=s.join("&").replace(/%20/g,"+"),i.addEventListener("load",function(){}),i.addEventListener("error",function(){}),i.open("POST",n.value),i.setRequestHeader("Content-Type","application/x-www-form-urlencoded"),i.send(a)}angular.bootstrap().invoke(["$http","$q",function(e,n){n.all([e.get("locales/languages.json"),e.get("/dashboard-api/session-info")]).then(function(n){function t(n){window.currentLang=n,e.get("locales/text_"+n+".json").then(function(e){window.localization=e.data,window.ionic.Platform.ready(function(){angular.bootstrap(document.body,["bitpay"])})})}function i(){var e=Object.keys(l),n={};return e.forEach(function(e){var t=e.split("_")[0];n[t]||(n[t]=e)}),n}function a(e,n){var t,a,s,r=e.split("-"),o=r[0].toLowerCase(),c=o;if(2===r.length&&(c+="_"+r[1].toUpperCase()),t=l[c])return c.replace("_","-");if(1===r.length){if(t=l[o+"_"+o.toUpperCase()])return o+"-"+o.toUpperCase();if(n&&(a=i(),s=a[c]))return s.replace("_","-")}else if(n&&2===r.length){if(t=l[o])return o.replace("_","-");if(a=i(),t=a[o])return t.replace("_","-")}return null}function s(){var e,n;for(n in d.languages)if(e=a(d.languages[n],!1))break;if(!e)for(n in d.languages)if(e=a(d.languages[n],!0))break;t(e?e:c)}function r(e){var n=a(e,!0);t(n?n:c)}window.sessionInfo=n[1].data;try{window.loadAnalyticsJS()}catch(o){}var l=n[0].data,c="en-US",d=window.navigator,p=d.language||d.userLanguage||d.browserLanguage||d.systemLanguage;d.globalization?d.globalization.getPreferredLanguage(function(e){r(e.value)},function(){t(c)}):d.languages?s():p?r(p):t(c)})}]),angular.module("bpAppConfig",[]).factory("bpApiConfig",function(){return{server:""}}),angular.module("bitpay",["ionic","bpAppConfig","angular-md5","angular-ladda","720kb.datepicker","angular-loading-bar","ab-base64","ui.mask","mm.iban","gridshore.c3js.chart","ngTagsInput"]).run(["$ionicPlatform","$rootScope","$state","userDataService","$ionicModal","$q","$timeout","$log","bitpayApiService","bpHistory","$window","bpFacadeService",function(e,n,t,i,a,s,r,o,l,c,d,p){window.cordova&&window.cordova.plugins.Keyboard&&window.cordova.plugins.Keyboard.hideKeyboardAccessoryBar(!0),window.StatusBar&&window.StatusBar.styleDefault();var u,m,b=a.fromTemplateUrl("components/redirect/redirect.html");n.$on("$stateChangeStart",function(e,n,a,r){function o(){if(m)return void(m=!1);if(n.meta&&n.meta.bpFacades){e.preventDefault();var i=angular.copy(n.meta.bpFacades);p.doesUserHaveAccess(i).then(function(e){e?(m=!0,t.go(n,a)):l.hasFacade(["merchantFinance","merchantIntegration"]).then(function(e){t.go(e?"menu.overview":"menu.payments")})})}}var c,d=/(^verify-email$)|(^redirect$)|(^accept-invite$)|(^accept-invite-form$)/;if(window.sessionInfo.isAuthenticated&&(o(),u=i.getUser(),u.then(function(e){l.switchOrg(e.data.numericId)})),!d.test(n.name))if(0===n.name.indexOf("menu")){if(!window.sessionInfo.isAuthenticated){if(e.preventDefault(),window.sessionInfo.twoFactorPending)return void t.go("twoFactor",{redirect:btoa(JSON.stringify({toStateName:n.name,toParams:a}))});t.go("login",{redirect:btoa(JSON.stringify({toStateName:n.name,toParams:a}))})}}else window.sessionInfo.isAuthenticated&&(r.abstract||e.preventDefault(),c=b.then(function(e){return e.show()}),s.all([b,c,u]).then(function(e){var n=e[0];n.hide().then(function(){var n=e[2].data,a=i.onboardingChecklistComplete(n);t.go(a?n.createdInvoice?"menu.overview":"menu.setup":"menu.getstarted")})}))}),n.$on("$stateChangeSuccess",function(e,n,t,i,a){o.info("State has changed to %c%s(%s) %cfrom %c%s(%s).","color: blue",n.name,JSON.stringify(t),"color: auto","color: blue",i.name,JSON.stringify(a)),i&&!i.abstract&&c.incrementHistoryCount(),window.appBootstrapped=!0}),window.onRecaptchaLoad=function(){n.$broadcast("recaptchaLoaded")}}]).config(["$stateProvider","$urlRouterProvider","$locationProvider","$httpProvider","$ionicConfigProvider","$sceDelegateProvider","tagsInputConfigProvider","$compileProvider",function(e,n,t,i,a,s,r,o){t.html5Mode(!window.device),a.scrolling.jsScrolling(!1),a.views.transition("none"),a.views.maxCache(0),o.aHrefSanitizationWhitelist(/^\s*(https?|tel|ftp|mailto|file|ghttps?|ms-appx|x-wmapp0|data):/),n.otherwise("/"),i.interceptors.push(["$q","$location","$timeout",function(e,n,t){return{request:function(e){return e.headers["x-csrf-token"]=window.sessionInfo.csrfToken,e},requestError:function(n){return e.reject(n)},response:function(e){return e},responseError:function(i){return 401===i.status&&"/dashboard-api/authenticate"!==i.config.url&&"/dashboard-api/verify-two-factor-code"!==i.config.url&&(window.sessionInfo.isAuthenticated=!1,t(function(){n.url("/login/")})),e.reject(i)}}}]),s.resourceUrlWhitelist(["self","https://bitpay.com"]),r.setDefaults("tagsInput",{placeholder:""});var l=function(e,n){var t=n.defer();return e.getUser().then(function(e){t.resolve(e.data)},function(e){t.resolve(e.data)}),t.promise};l.$inject=["userDataService","$q"];var c=function(e){return e.request({facades:["merchantFinance"],method:"getSettlementSettings"})};c.$inject=["bitpayApiService"],e.state("landing",{url:"/?oid",templateUrl:"components/landing/landing.html",controller:"LandingCtrl",reloadOnSearch:!1}).state("login",{url:"/login/:redirect",templateUrl:"components/login/login.html",controller:"LoginCtrl"}).state("twoFactor",{url:"/two-step-verification/:redirect",templateUrl:"components/login/two-factor.html",controller:"TwoFactorCtrl"}).state("forgotPassword",{url:"/forgot-password",templateUrl:"components/password/forgot.html",controller:"ForgotPasswordCtrl"}).state("reset-password",{url:"/reset-password?resetkey",template:"<div></div>",controller:"ResetPasswordLoadCtrl"}).state("reset-password-form",{url:"/reset-password-form",templateUrl:"components/password/reset.html",controller:"ResetPasswordCtrl"}).state("password-reset-disable",{url:"/password-reset-disable",templateUrl:"components/password/cancelReset.html",controller:"CancelResetPasswordCtrl",reloadOnSearch:!1}).state("accept-invite",{url:"/accept-invite",template:"<div></div>",controller:"AcceptInviteLoadCtrl"}).state("accept-invite-form",{url:"/accept-invite-form",templateUrl:"components/accept-invite/accept-invite.html",controller:"AcceptInviteCtrl"}).state("onboard-user-verify",{url:"/onboard-user-verify/:code?orgId",templateUrl:"components/verify-email/verify-email.html",controller:"OnboardUserVerifyCtrl"}).state("onboard-user",{url:"/onboard-user/:userId?orgId",templateUrl:"components/signup/signup.html",controller:"OnboardUserCtrl"}).state("signup",{url:"/signup?oid",templateUrl:"components/signup/signup.html",controller:"SignupCtrl",reloadOnSearch:!1}).state("menu",{url:"","abstract":!0,templateUrl:"components/menu/menu.html",controller:"MenuCtrl",resolve:{userData:l}}).state("menu.getstarted",{url:"/getstarted",views:{menuContent:{templateUrl:"components/getstarted/getstarted.html",controller:"GetStartedCtrl"}},resolve:{userData:l}}).state("menu.verify-email",{url:"/verify-email/:code",views:{menuContent:{templateUrl:"components/verify-email/verify-email.html",controller:"VerifyEmailCtrl"}}}).state("menu.overview",{url:"/overview",views:{menuContent:{templateUrl:"components/overview/overview.html",controller:"OverviewCtrl"}},resolve:{userData:l},meta:{bpFacades:["orgAdmin","merchantFinance","merchantIntegration"]}}).state("menu.setup",{url:"/setup",views:{menuContent:{templateUrl:"components/setup/setup.html",controller:"SetupCtrl"}},resolve:{userData:l}}).state("menu.verification",{url:"/verification",views:{menuContent:{templateUrl:"components/verification/verification.html",controller:"VerificationCtrl"}},resolve:{userData:l},meta:{bpFacades:["orgAdmin"]}}).state("menu.verification0",{url:"/verification/0",views:{menuContent:{templateUrl:"components/verification/verification-0.html",controller:"Verification0Ctrl"}},resolve:{userData:l},meta:{bpFacades:["orgAdmin"]}}).state("menu.verification1",{url:"/verification/1",views:{menuContent:{templateUrl:"components/verification/verification-1.html",controller:"Verification1Ctrl"}},resolve:{userData:l},meta:{bpFacades:["orgAdmin"]}}).state("menu.verification2",{url:"/verification/2",views:{menuContent:{templateUrl:"components/verification/verification-2.html",controller:"Verification2Ctrl"}},resolve:{userData:l},meta:{bpFacades:["orgAdmin"]}}).state("menu.verification3",{url:"/verification/3",views:{menuContent:{templateUrl:"components/verification/verification-3.html",controller:"Verification3Ctrl"}},resolve:{userData:l},meta:{bpFacades:["orgAdmin"]}}).state("menu.updateEmailAddress",{url:"/update-email-address",views:{menuContent:{templateUrl:"components/update-email/update-email.html",controller:"UpdateEmailCtrl"}},resolve:{userData:l}}).state("removeAccount",{url:"/remove-unauthorized-account/:code",templateUrl:"components/remove-account/remove-account.html",controller:"RemoveAccountCtrl"}).state("menu.dashboard",{url:"/merchant/:page?params",views:{menuContent:{templateUrl:"components/dashboard/dashboard.html",controller:"DashboardCtrl"}},resolve:{userData:l}}).state("menu.processSettlementSettingsChanges",{url:"/process-settlement-settings-changes?code",views:{menuContent:{templateUrl:"components/process-settlement-settings-changes/process-settlement-settings-changes.html",controller:"ProcessSettlementSettingsChangesCtrl"}},meta:{bpFacades:["orgAdmin","merchantFinance"]}}).state("menu.changePassword",{url:"/user-settings/change-password",views:{menuContent:{templateUrl:"components/password/change.html",controller:"ChangePasswordCtrl"}}}).state("menu.paymentButtons",{url:"/payment-tools/payment-buttons",views:{menuContent:{templateUrl:"components/payment-buttons/payment-buttons.html",controller:"PaymentButtonsCtrl"}},meta:{bpFacades:["merchantIntegration"]}}).state("menu.bills",{url:"/payment-tools/bills",views:{menuContent:{templateUrl:"components/bills/bills.html",controller:"BillsCtrl"}},meta:{bpFacades:["merchantFinance","merchantIntegration","merchantSupport"]}}).state("menu.billDetails",{url:"/payment-tools/bills/:id",views:{menuContent:{templateUrl:"components/bills/details.html",controller:"components.bills.Details"}},resolve:{userData:l},meta:{bpFacades:["merchantFinance","merchantIntegration","merchantSupport"]}}).state("menu.newBill",{url:"/payment-tools/new-bill",views:{menuContent:{templateUrl:"components/bills/details.html",controller:"components.bills.Details"}},resolve:{userData:l},meta:{bpFacades:["merchantFinance","merchantIntegration","merchantSupport"]}}).state("menu.payments",{url:"/payments?filter&search&startDate&endDate&preset",views:{menuContent:{templateUrl:"components/payments/payments.html",controller:"PaymentsCtrl"}},meta:{bpFacades:["merchantFinance","merchantSupport","merchantIntegration"]}}).state("menu.paymentDetails",{url:"/payments/:id",views:{menuContent:{templateUrl:"components/payments/details.html",controller:"components.payments.Details"}},resolve:{userData:l}}).state("menu.settlementDetails",{url:"/settlements/:id",views:{menuContent:{templateUrl:"components/settlements/details.html",controller:"components.settlements.Details"}}}).state("menu.paymentRefund",{url:"/payments/:id/refund",views:{menuContent:{templateUrl:"components/payments/refund.html",controller:"components.payments.Refund"}}}).state("menu.paymentResolveException",{url:"/payments/:id/resolve-exception",views:{menuContent:{templateUrl:"components/payments/resolve-exception.html",controller:"components.payments.ResolveException"}}}).state("menu.paymentConfirmRefund",{url:"/payments/:id/confirm-refund?currency&amount&address&email",views:{menuContent:{templateUrl:"components/payments/refund-confirm.html",controller:"components.payments.ConfirmRefund"}}}).state("menu.paymentConfirmAdjustment",{url:"/payments/:id/confirm-adjustment",views:{menuContent:{templateUrl:"components/payments/adjustment-confirm.html",controller:"components.payments.ConfirmAdjustment"}}}).state("menu.planSettings",{url:"/settings/edit/plan",views:{menuContent:{templateUrl:"components/settings/edit/plan.html",controller:"components.settings.edit.Plan"}},resolve:{userData:l},meta:{bpFacades:["orgAdmin"]}}).state("menu.starterPlanConfirm",{url:"/settings/edit/plan/starter",views:{menuContent:{templateUrl:"components/settings/edit/plan/starter.html",controller:"components.settings.edit.plan.Confirm"}},resolve:{settlementData:c},meta:{bpFacades:["orgAdmin"]}}).state("menu.businessPlanConfirm",{url:"/settings/edit/plan/business",views:{menuContent:{templateUrl:"components/settings/edit/plan/business.html",controller:"components.settings.edit.plan.Confirm"}},resolve:{settlementData:c},meta:{bpFacades:["orgAdmin"]}}).state("menu.enterprisePlanConfirm",{url:"/settings/edit/plan/enterprise",views:{menuContent:{templateUrl:"components/settings/edit/plan/enterprise.html",controller:"components.settings.edit.plan.Confirm"}},resolve:{settlementData:c},meta:{bpFacades:["orgAdmin"]}}).state("menu.profileSettings",{url:"/settings/edit/profile",views:{menuContent:{templateUrl:"components/settings/edit/profile.html",controller:"components.settings.edit.Profile"}},meta:{bpFacades:["merchantIntegration"]}}).state("menu.exceptionSettings",{url:"/settings/edit/exceptions",views:{menuContent:{templateUrl:"components/settings/edit/exceptions.html",controller:"components.settings.edit.Exceptions"}},resolve:{userData:l},meta:{bpFacades:["merchantIntegration"]}}).state("menu.currencySettings",{url:"/settings/edit/currencies",views:{menuContent:{templateUrl:"components/settings/edit/currencies.html",controller:"components.settings.edit.Currencies"}},meta:{bpFacades:["merchantFinance","merchantSupport","merchantIntegration"]}}).state("menu.orderSettings",{url:"/settings/edit/order",views:{menuContent:{templateUrl:"components/settings/edit/order.html",controller:"components.settings.edit.Order"}},meta:{bpFacades:["merchantIntegration"]}}).state("menu.paymentTools",{url:"/payment-tools",views:{menuContent:{templateUrl:"components/payment-tools/payment-tools.html"}},meta:{bpFacades:["merchantFinance","merchantIntegration","merchantSupport"]}}).state("menu.settings",{url:"/settings","abstract":!0,views:{menuContent:{templateUrl:"components/settings/settings.html"}},meta:{bpFacades:["merchantIntegration","merchantFinance"]}}).state("menu.settings.general",{url:"",templateUrl:"components/settings/general.html",controller:"components.General",resolve:{userData:l},meta:{bpFacades:["merchantIntegration"]}}).state("menu.userSettings",{url:"/user-settings",views:{menuContent:{templateUrl:"components/user-settings/user-settings.html",controller:"components.UserSettings",resolve:{userData:l}}}}).state("menu.userSettingsBasicInfo",{url:"/user-settings/edit/basic-info",views:{menuContent:{templateUrl:"components/user-settings/edit/basic-info.html",controller:"components.user-settings.edit.BasicInfo"}}}).state("menu.userSettingsSecurity",{url:"/user-settings/edit/security",views:{menuContent:{templateUrl:"components/user-settings/edit/security.html",controller:"components.user-settings.edit.Security"}}}).state("menu.settings.settlement",{url:"/settlement",templateUrl:"components/settlement-settings/settlement-settings.html",controller:"SettlementSettingsCtrl",resolve:{settlementData:c},meta:{bpFacades:["merchantFinance"]}}).state("menu.settings.users",{url:"/users",templateUrl:"components/users/users.html",controller:"UserListCtrl",meta:{bpFacades:["orgAdmin"]}}).state("menu.invite",{url:"/settings/users/invite",views:{"menuContent@menu":{templateUrl:"components/users/invite-form.html",controller:"UserCtrl"}},meta:{bpFacades:["orgAdmin"]}}).state("menu.users",{url:"/settings/users/:id",views:{"menuContent@menu":{templateUrl:"components/users/update-user-form.html",controller:"UserCtrl"}},meta:{bpFacades:["orgAdmin"]}}).state("menu.settlement",{url:"","abstract":!0,template:""}).state("menu.settlement.settlementSettingsAddBank",{url:"/settings/settlement/bank/:index?country&currency",views:{"menuContent@menu":{templateUrl:"components/settlement-settings/add-bank-acct.html",controller:"AddBankAcctController"}},resolve:{settlementData:c,userData:l},meta:{bpFacades:["merchantFinance"]}}).state("menu.settlement.settlementSettingsAddBitcoin",{url:"/settings/settlement/bitcoin/:index",views:{"menuContent@menu":{templateUrl:"components/settlement-settings/add-bitcoin-addr.html",controller:"AddBitcoinAddressController"}},resolve:{settlementData:c},meta:{bpFacades:["merchantFinance"]}})}]),angular.module("bitpay").controller("AppCtrl",["$scope",function(e){e.alert={},e.processErr=function(n,t){e.alert.type=t,e.alert.message=n.message||n,e.alert.show=!0},e.clearMessageAlert=function(){e.alert={}},e.$on("$stateChangeSuccess",function(){e.alert={}})}]),angular.module("bitpay").controller("MenuCtrl",["$scope","sessionManager","$state","userData","userDataService","$ionicPopover","bitpayApiService","$ionicSideMenuDelegate","$window","$rootScope","bpHistory",function(e,n,t,i,a,s,r,o,l,c,d){function p(e,n){l.history.replaceState({},null,n),l.history.pushState({},null,e),l.history.back(),d.decrementHistoryCount()}e.user=i,e.referralEnabled=i.referralEnabled,e.numericId=i.numericId,e.toggleIntercom=function(){l.Intercom(e.isIntercomVisible?"hide":"show")},"undefined"!=typeof l.Intercom&&(l.Intercom("onShow",function(){e.isIntercomVisible=!0}),l.Intercom("onHide",function(){e.isIntercomVisible=!1})),r.switchOrg(e.numericId),e.orgs=[],e.countOrgs=function(){return e.orgs.length},e.hasOnlyFinanceFacade=null,r.hasFacade("merchantFinance").then(function(n){r.hasFacade(["merchantIntegration","orgAdmin","merchant"]).then(function(t){n&&!t&&(e.hasOnlyFinanceFacade=n)})}),r.getOrgs().then(function(n){e.orgs=[];for(var t in n)n[t].tokens&&(n[t].numericId=t,e.orgs.push(n[t]));e.orgs.sort(function(e,n){return e.name<n.name?-1:e.name>n.name?1:0})}),e.refreshMenu=function(){a.getUser().then(function(n){e.user=n.data,e.isCompleteMenu=a.onboardingChecklistComplete(e.user)})},e.refreshMenu(),e.backButton={isVisible:!1,toState:null},e.$on("$stateChangeStart",function(){e.backButton.isVisible=!1}),e.activateBackButton=function(n,t){e.backButton.toState=n,e.backButton.toParams=t,e.backButton.isVisible=!0},e.onBackButtonClicked=function(){if(d.getHistoryCount()>0)l.history.back();else{var n=t.href(e.backButton.toState,e.backButton.toParams),i=t.href(t.current.name,t.params);p(i,n)}},e.onMenuButtonClicked=function(){o.toggleLeft()},e.hasPaidPlan=function(){return e.user.planUsers>1},e.isOrgAdmin=function(){function n(e,n){for(var t=-1,i=e?e.length:0;++t<i;){var a=e[t];if(n(a,t,e))return a}}var t=n(e.orgs,function(n){return n.numericId===e.numericId});return t&&t.tokens?"undefined"!=typeof t.tokens.orgAdmin:!1},e.subMenus={settings:!1,tools:!1},e.closeSubMenus=function(){e.subMenus.settings=!1,e.subMenus.tools=!1},e.toggleSubmenu=function(n){e.subMenus[n]?e.closeSubMenus():(e.closeSubMenus(),e.subMenus[n]=!0)},e.hasDebitCard=l.sessionInfo.hasDebitCard;var u=e.$new();u.hasDebitCard=l.sessionInfo.hasDebitCard,s.fromTemplateUrl("components/menu/org-popover.html",{scope:e}).then(function(n){e.switchOrg=function(e){n.hide(),a.switchOrg(e).then(function(){window.location.reload()})},e.showOrgPopover=function(){if(e.countOrgs()>1||e.hasDebitCard){var t=document.getElementsByClassName("bp-org-menu__org-switcher__arrow")[0];n.show(t)}}});var m=e.$new();s.fromTemplateUrl("components/menu/user-popover.html",{scope:m}).then(function(i){m.closeMenu=function(){i.hide(),o.toggleLeft(!1)},m.signOut=function(){i.hide(),n.close(),a.logout().then(function(){t.go("login")})},e.showUserPopover=function(){var e=document.getElementsByClassName("bp-user-menu__user__arrow")[0];i.show(e)}})}]),angular.module("bitpay").directive("ionContent",function(){return{restrict:"E",link:function(e,n){"ION-NAV-VIEW"===n.parent().parent()[0].tagName&&e.$watch(function(){setTimeout(function(){n.addClass("has-header")})})}}}),angular.module("bitpay").controller("OverviewCtrl",["$scope","bitpayApiService","$filter","$state","currenciesDataService","userData","bpIntercom","$q","settlementDataService","$window","$timeout",function(e,n,t,i,a,s,r,o,l,c,d){function p(e){return e?e.holdPayouts||e.freezePayouts?!0:!1:void 0}function u(e){return Object.keys(e).length>1?!1:e.BTC?!0:!1}function m(e){var n=!1;for(var t in e){var i=e[t];if(i.amount>=i.settlementMinimum){n=!0;break}}return n}e.balances={},e.chart={},e.needsDocs=e.user.requiredTier>e.user.tier.id,e.suspended=e.user.suspended,e.dailyLimit=e.user.tier.dailyLimit,e.annualLimit=e.user.tier.annualLimit,e.auditTrail=[],e.selectedCurrency="BTC",e.canViewLedgers=!1,e.planId=s.planId;var b,v=c.innerWidth,g=function(e){var n=[],t=new Date,i={};i[[t.getFullYear(),t.getMonth()+1,t.getDate()].join("-")]=0;for(var a=0;31>a;a++)t.setDate(t.getDate()-1),i[[t.getFullYear(),t.getMonth()+1,t.getDate()].join("-")]=0;for(var s=0;s<e.length;s++)i[e[s].timestamp]=e[s].amount;for(var r in i)n.push({timestamp:r,amount:i[r]});for(;0===n[0].amount;)if(n.shift(),0===n.length)return[];for(n=n.reverse();0===n[0].amount;)n.shift();return n},f=function(n){e.chart=window.c3.generate({data:{x:"x",columns:[],type:"area"},axis:{x:{type:"timeseries",tick:{format:"%d %b"}}},legend:{show:!1},grid:{x:{show:!0},y:{show:!0}},tooltip:{format:{title:function(){return""},value:function(e){return 0===e?void 0:t("currency")(e,n)}}}})},h=function(n,t,i){for(var a=["x"],s=[t],r=0;r<n.length;r++)n[r].timestamp&&(a.push(n[r].timestamp),s.push(n[r].amount/1e8));e.chart.destroy(),f(i);var o={columns:[a,s]};o.colors={},o.colors[t]="#7A9BFA",e.chart.load(o),window.chart=e.chart;for(var l=document.getElementsByClassName("c3-circle"),c=0;c<l.length;c++)0===n[c].amount&&(l[c].style.visibility="hidden")};ionic.on("resize",function(){v!==c.innerWidth&&(v=c.innerWidth,b&&d.cancel(b),b=d(function(){var n=e.balances[e.selectedCurrency];h(e.formattedDays,e.selectedCurrency,n),b=null},300))},c),e.accountOnHold=p(s),e.openIntercom=function(){var e="Hi there, my account is on hold. How can I re-enable settlements?";r.startNewConversation(e)},e.permittedLedgerState=function(n){return e.canViewLedgers?"menu.dashboard({page: 'account-summary', params: 'currency="+n+"' })":"."},e.getGraphData=function(t,i){f(i),e.selectedCurrency=t,n.request({facades:["orgAdmin","merchantFinance","merchantSupport","merchantIntegration","merchant"],method:"getDailySales",params:{currency:t}}).then(function(n){var a=g(n);e.formattedDays=a,h(a,t,i)})},n.hasFacade(["merchant","merchantFinance"]).then(function(n){n&&(e.canViewLedgers=!0)}),n.hasFacade("orgAdmin").then(function(n){e.canRequestTierIncrease=n}),angular.element(document).ready(function(){var n={bitcoinPercentage:s.bitcoinPercentage,payoutCurrency:s.payoutCurrency,planId:s.planId,settlementMinimum:s.settlementMinimum};l.getBalances(n,function(t){e.balances=t.all,e.activeBalances=t.active,e.inactiveBalances=t.inactive,e.bitcoinOnly=u(e.activeBalances),e.someBalancesAboveMinimum=m(e.activeBalances);var i=Object.keys(e.balances);e.selectedCurrency=i[0],e.getGraphData(i[0],e.balances[i[0]]),l.getNextSettlementDateForEachBalance(e.activeBalances,n,function(n){e.activeBalances=n})})})}]),angular.module("bitpay").controller("SignupCtrl",["$scope","$rootScope","$state","userDataService","referralTracker","evaluateMeter","$injector","$stateParams",function(e,n,t,i,a,s,r,o){function l(){e.captcha=window.grecaptcha.render("captcha",{sitekey:window.sessionInfo.captchaKey})}function c(){i.getUser().then(function(){t.go("menu.getstarted")},function(n){e.loginLoading=!1,e.processErr(n)})}function d(n){e.loginLoading=!1,e.tooManyRequests=!1,e.clearMessageAlert(),429===n.status?e.tooManyRequests=!0:401===n.status?e.processErr("Login failed","error"):e.processErr(n.data||"Authentication Failed","error")}function p(){return document.getElementById("g-recaptcha-response")&&document.getElementById("g-recaptcha-response").value}var u;o.oid&&a.setUrlAid(o.oid),e.isOnboarding=!1,e.user={description:"dashboard-app"},window.grecaptcha?l():e.$on("recaptchaLoaded",function(){l()}),e.nameRegex=/^[^!-&\(-@\[-`{-~]+$/,e.evaluateMeter=function(){var n=s(e.user.password);e.passwordStrength=n.passwordStrength,e.passwordLowercase=n.passwordLowercase,e.passwordNumerals=n.passwordNumerals,e.passwordUppercase=n.passwordUppercase,e.passwordCharacters=n.passwordCharacters,e.passwordIsStrong=n.passwordIsStrong},r.has("bpTestData")&&(u=r.get("bpTestData"),u.prefilledSignup&&(angular.extend(e.user,u.prefilledSignup),e.evaluateMeter())),e.signup=function(n){if(e.emailExists=!1,e.tooManyRequests=!1,e.tosAgreeNeeded=!1,e.passwordIsStrong?(n.password.$setValidity("pwl",!0),e.passwordStrengthLow=!1):(e.passwordStrengthLow=!0,n.password.$setValidity("pwl",!1)),n.submissionAttempted=!0,n.$valid){e.loginLoading=!0;var t=p();e.user.gCaptchaResponse=t,window.grecaptcha.reset(e.captcha),i.create(e.user).then(function(){var t={email:e.user.email,password:e.user.password};n.submitToSharpspring(),i.authenticate(t).then(c,d)},function(n){e.loginLoading=!1,"User already exists"===n.data.message?e.emailExists=!0:429===n.status?e.tooManyRequests=!0:403===n.status?e.invalidSignup=!0:e.processErr(n.data||"Account Creation Failed","error")})}else e.user.tosAgree||(e.tosAgreeNeeded=!0)},e.showPasswordInClearText=!1}]),angular.module("bitpay").controller("OnboardUserCtrl",["$scope","$rootScope","$state","userDataService","evaluateMeter","$injector","$stateParams",function(e,n,t,i,a,s,r){function o(){i.getUser().then(function(e){var n,a=e.data,s=i.onboardingChecklistComplete(a);r.redirect?(n=JSON.parse(atob(r.redirect)),t.go(n.toStateName,n.toParams)):t.go(a.createdInvoice?"menu.overview":s?"menu.setup":s&&a.requiredTier>a.approvedTier&&a.requiredTier>0?"menu.verification":"menu.getstarted")},function(n){e.loginLoading=!1,e.processErr(n)})}function l(n){e.loginLoading=!1,e.tooManyRequests=!1,e.clearMessageAlert(),429===n.status?e.tooManyRequests=!0:401===n.status?e.processErr("Login failed","error"):e.processErr(n.data||"Authentication Failed","error")}var c;e.isOnboarding=!0;var d=r.userId,p=r.orgId;i.getUserById(d,p).then(function(n){e.user=n.data,e.user.orgName=n.data.merchantName,e.cobrand=n.data.affiliateBrand,e.isOrgNameInitialized=!!e.user.orgName,e.isGivenNameInitialized=!!e.user.givenName,e.isFamilyNameInitialized=!!e.user.familyName,e.isEmailInitialized=!!e.user.email},function(n){e.loginLoading=!1,e.processErr(n)}),e.nameRegex=/^[^!-@\[-`{-~]+$/,e.evaluateMeter=function(){var n=a(e.user.password);e.passwordStrength=n.passwordStrength,e.passwordLowercase=n.passwordLowercase,e.passwordNumerals=n.passwordNumerals,e.passwordUppercase=n.passwordUppercase,e.passwordCharacters=n.passwordCharacters,e.passwordIsStrong=n.passwordIsStrong},s.has("bpTestData")&&(c=s.get("bpTestData"),c.prefilledSignup&&(angular.extend(e.user,c.prefilledSignup),e.evaluateMeter())),e.signup=function(n){e.emailDoesNotExist=!1,e.tooManyRequests=!1,e.passwordIsStrong?(e.passwordStrengthLow=!0,n.password.$setValidity("pwl",!1)):(n.password.$setValidity("pwl",!0),e.passwordStrengthLow=!1),n.$valid&&e.user.tosAgree&&(e.loginLoading=!0,i.onboardUser(e.user).then(function(){var n={email:e.user.email,password:e.user.password};i.authenticate(n).then(o,l)},function(n){e.loginLoading=!1,"User does not exist"===n.data.message?e.emailDoesNotExist=!0:429===n.status?e.tooManyRequests=!0:e.processErr(n.data||"Onboard User Failed","error")}))}}]),angular.module("bitpay").controller("GetStartedCtrl",["$scope","$rootScope","$state","sessionManager","userDataService","userData","bpApiConfig",function(e,n,t,i,a,s,r){e.user=s,e.checkoutUrl=r.server+e.user.checkoutUrl,e.accountUnverified=!e.user.verified,e.isComplete=a.onboardingChecklistComplete(e.user),e.remainingCount=3,(!e.user.appliedTier||e.user.appliedTier>-1)&&e.remainingCount--,e.user.payoutInfo&&e.remainingCount--,e.user.verified&&e.remainingCount--,e.login=function(){t.go("login")},e.signUp=function(){t.go("user-new")},e.createOrg=function(){t.go("org-new")},e.orgExists=function(){return void 0!==e.org},e.isGuideFinished=function(){return i.sessionData.guidesFinished.length>0},e.goToDashboard=function(){t.go(e.user.requiredTier>e.user.approvedTier&&e.user.requiredTier>0?"menu.verification":"menu.setup")}}]),angular.module("bitpay").controller("SetupCtrl",["$scope","$rootScope","$state","userDataService","userData",function(e,n,t,i,a){e.user=a,e.pendingAccount=0===a.appliedTier&&a.approvedTier<0&&a.verified,e.needsDocs=a.requiredTier>0&&a.approvedTier<a.requiredTier,e.setupPOS=function(){t.go("menu.guide",{guideName:"bitpay-pos"})},e.setupGuide=function(e){t.go("menu.guide",{guideName:e})},e.isOneGuideCompleted=!1}]),angular.module("bitpay").directive("setupLink",function(){return{restrict:"E",template:'<a class="button button-positive cart-button" target="_blank" href="{{href}}" ng-click="parent.isOneGuideCompleted = true"><span ng-transclude></span></a>',replace:!0,scope:{href:"@"},transclude:!0,link:function(e){e.parent=e.$parent}}}),angular.module("bitpay").controller("LoginCtrl",["$scope","$rootScope","$injector","$state","$stateParams","sessionManager","userDataService","bpApiConfig",function(e,n,t,i,a,s,r){var o;e.login={},t.has("bpTestData")&&(o=t.get("bpTestData"),o.prefilledLogin&&angular.extend(e.login,o.prefilledLogin)),a.redirect&&(e.redirect=!0),e.signin=function(n){function t(n){return n.data.twoFactorPending?void i.go("twoFactor",{redirect:a.redirect}):void r.getUser().then(function(e){var n,t=e.data,s=r.onboardingChecklistComplete(t);a.redirect?(n=JSON.parse(atob(a.redirect)),i.go(n.toStateName,n.toParams)):i.go(t.createdInvoice?"menu.overview":s?"menu.setup":s&&t.requiredTier>t.approved&&t.requiredTier>0?"menu.verification":"menu.getstarted")},function(n){e.loginLoading=!1,e.processErr(n)})}function s(n){e.loginLoading=!1,e.tooManyAttempts=!1,e.loginFailed=!1,e.clearMessageAlert(),429===n.status?e.tooManyAttempts=!0:401===n.status?e.loginFailed=!0:e.processErr(n.data||"Authentication Failed","error")}n.submissionAttempted=!0,n.$valid&&(e.login.showPasswordInClearText=!1,e.loginLoading=!0,r.authenticate(e.login).then(t,s))},e.login.showPasswordInClearText=!1}]),angular.module("bitpay").controller("TwoFactorCtrl",["$scope","$state","$stateParams","userDataService",function(e,n,t,i){e.login={},t.redirect&&(e.redirect=!0),e.verifyTwoFactorCode=function(a){function s(){i.getUser().then(function(e){var a,s=e.data,r=i.onboardingChecklistComplete(s);t.redirect?(a=JSON.parse(atob(t.redirect)),n.go(a.toStateName,a.toParams)):n.go(s.createdInvoice?"menu.overview":r?"menu.setup":r&&s.requiredTier>s.approved&&s.requiredTier>0?"menu.verification":"menu.getstarted")},function(n){e.loginLoading=!1,e.processErr(n)})}function r(n){e.loginLoading=!1,e.tooManyAttempts=!1,e.loginFailed=!1,429===n.status?e.tooManyAttempts=!0:401===n.status?e.loginFailed=!0:e.processErr(n.data||"Authentication Failed","error")}a.submissionAttempted=!0,a.$valid&&(e.loginLoading=!0,i.verifyTwoFactorCode(e.login.twoFactorCode).then(s,r))}}]),angular.module("bitpay").controller("ForgotPasswordCtrl",["$scope","$http","$interval",function(e,n){function t(){e.captcha=window.grecaptcha.render("captcha",{sitekey:window.sessionInfo.captchaKey})}e.forgot={email:"",submitDisabled:!1},window.grecaptcha?t():e.$on("recaptchaLoaded",function(){t()}),e.lastChallenge="",e.lastResponse="",e.sendForgot=function(t){if(t.submissionAttempted=!0,!t.$valid)return!1;var i=document.getElementById("g-recaptcha-response").value,a={email:e.forgot.email,gCaptchaResponse:i};window.grecaptcha.reset(e.captcha),n.post("/password/reset",a).success(function(n){if(n.result.success){var t="Email sent. If an account with that email address exists, you’ll receive an email immediately with a link to reset your password.";e.processErr(t,"success"),e.forgot.submitDisabled=!0
}else e.processErr(n.result.message,"error"),e.forgot.submitDisabled=!1}).error(function(){e.forgot.submitDisabled=!1,e.processErr("Error sending forgot password request.","error")})}}]),angular.module("bitpay").controller("ResetPasswordCtrl",["$scope","$state","$http","$location","evaluateMeter","passwordService",function(e,n,t,i,a,s){e.reset={newPassword:""},e.passwordIsStrong=!1,e.alreadyReset=!1;var r=function(){return e.resetKey=s.getResetKey(),e.resetKey?void t.get("/password/reset",{params:{resetKey:e.resetKey}}).error(function(){return n.go("forgotPassword")}):n.go("forgotPassword")},o=function(n,i){var a={hashedPassword:n,salt:i,resetKey:e.resetKey};t.post("/password/change",a).success(function(n){n&&n.result&&n.result.success?(e.processErr("Successfully reset your password!","success"),e.formSuccess=!0):e.processErr("Error resetting your password. Please try again later.","error")}).error(function(){e.processErr("Error resetting your password. Please try again later.","error")}),e.formDone=!0};e.evaluateMeter=function(){var n=a(e.reset.newPassword);e.passwordIsStrong=n.passwordIsStrong},e.formValid=function(){return e.passwordIsStrong},e.resetPassword=function(){return e.alreadyReset?!1:(e.alreadyReset=!0,e.formValid()?void s.generateSalt(function(n){s.hashPassword(e.reset.newPassword,function(e){o(e,n)})}):!1)},r()}]),angular.module("bitpay").controller("ChangePasswordCtrl",["$scope","$state","$http","$location","evaluateMeter","passwordService","bitpayApiService","stateMessengerService","userDataService",function(e,n,t,i,a,s,r,o,l){e.resetForm={},e.reset={},e.passwordIsStrong=!1;var c=function(t,i,a){var s={oldHashedPassword:t,hashedPassword:i,salt:a};l.changePassword(s).then(function(){e.loginLoading=!1,o.enqueueStateMessage("menu.userSettings","passwordChanged"),n.go("menu.userSettings")},function(n){e.loginLoading=!1,e.serverError={type:n.data.error}}),e.formDone=!0};e.evaluateMeter=function(){var n=a(e.reset.newPassword);e.passwordIsStrong=n.passwordIsStrong},e.formValid=function(){return e.passwordIsStrong},e.changePassword=function(){return e.formValid()?(e.loginLoading=!0,void s.generateSalt(function(n){s.hashPassword(e.reset.currentPassword,function(t){s.hashPassword(e.reset.newPassword,function(e){c(t,e,n)})})})):!1}}]),angular.module("bitpay").controller("CancelResetPasswordCtrl",["$scope","$location","$http",function(e,n,t){return e.passwordResetCleared=!1,e.resetKey=n.search().resetKey||n.search().resetkey,e.resetKey?(n.search("resetkey",null),n.search("resetKey",null),void t.get("/password/disableReset?resetKey="+e.resetKey).success(function(n){n.success?e.passwordResetCleared=!0:e.error=n.error}).error(function(){e.error="Error clearing password reset token"})):void(e.error="There was no reset token included in your request.")}]),angular.module("bitpay").controller("ResetPasswordLoadCtrl",["$state","$location","passwordService",function(e,n,t){t.setResetKey(n.search().resetKey||n.search().resetkey),e.go("reset-password-form")}]),angular.module("bitpay").controller("AcceptInviteCtrl",["$scope","$state","$http","$location","evaluateMeter","userDataService","dashboardApiService","$window","bitpayApiService","passwordService",function(e,n,t,i,a,s,r,o,l,c){e.reset={newPassword:""},e.passwordIsStrong=!1,e.alreadySubmitted=!1;var d=function(){return e.resetkey=c.getResetKey(),e.resetkey?void r.request("GET","check-invite-token",{resetkey:e.resetkey}).then(function(n){if(e.user=n.data,e.user.name){var t=e.user.name.split(" ");e.user.givenName=t[0],t.length>1&&(e.user.familyName=t[t.length-1])}},function(){return n.go("login")}):n.go("login")},p=function(e){var n=new window.PBKDF2(Math.random().toString(),Math.random().toString(),Math.floor(30*Math.random()),47);n.deriveKey(function(){},e)},u=function(e,n){var t=new window.PBKDF2(e,"..............",200,64),i=function(){},a=function(e){n(e)};t.deriveKey(i,a)};e.loginNewUser=function(){function t(){e.loginLoading=!1,n.go("menu.overview")}function i(){e.loginLoading=!1,n.go("login")}var a={email:e.user.email,password:e.reset.newPassword};e.loginLoading=!0,l.uninitialize(),s.authenticate(a).then(t,i)};var m=function(n,t){e.loginLoading=!0;var i={hashedPassword:n,salt:t,resetKey:e.resetkey,givenName:e.user.givenName,familyName:e.user.familyName,name:e.user.givenName+" "+e.user.familyName};r.request("POST","accept-invite",i).then(function(){o.sessionInfo.isAuthenticated?(e.alreadyLoggedIn=!0,l.request({facade:"user",method:"getUser"}).then(function(n){e.loggedInUser=n.data}),e.loginLoading=!1):e.loginNewUser()},function(){e.loginLoading=!1,e.processErr("Error creating your account. Please try again later.","error")}),e.formDone=!0};e.evaluateMeter=function(){var n=a(e.reset.newPassword);e.passwordIsStrong=n.passwordIsStrong},e.formValid=function(n){return n.$invalid?!1:e.passwordIsStrong?!0:!1},e.acceptInvite=function(n){return n.submissionAttempted=!0,e.formValid(n)?e.alreadySubmitted?!1:(e.alreadySubmitted=!0,void p(function(n){u(e.reset.newPassword,function(e){m(e,n)})})):!1},d()}]),angular.module("bitpay").controller("AcceptInviteLoadCtrl",["$state","$location","passwordService",function(e,n,t){t.setResetKey(n.search().resetkey),e.go("accept-invite-form")}]),angular.module("bitpay").controller("LandingCtrl",["$stateParams","referralTracker",function(e,n){e.oid&&n.setUrlAid(e.oid)}]),angular.module("bitpay").controller("VerificationCtrl",["$scope","userData","tierApplication",function(e,n,t){e.user=n,angular.isDefined(e.user.approvedTier)||(e.user.approvedTier=0),e.tierApplicationStatus=t.getTierApplicationStatus(n)}]),angular.module("bitpay").controller("Verification0Ctrl",["$scope","$rootScope","$state","$ionicModal","countriesDataService","industriesDataService","userDataService","userData","$timeout",function(e,n,t,i,a,s,r,o,l){function c(){r.onboardingChecklistComplete(e.user)?(e.processErr("Verification Data Saved","success"),e.submitting=!1):t.go("menu.getstarted")}e.user=o,e.user.payoutInfo&&(e.payoutInfo=JSON.parse(e.user.payoutInfo),e.user.payoutCurrency&&e.payoutInfo[e.user.payoutCurrency]&&(e.bankCountry=e.payoutInfo[e.user.payoutCurrency].bankCountry)),e.states=a.getUsStates(),e.verificationData={owners:e.user.owners,legalBusinessName:e.user.legalBusinessName,merchantName:e.user.merchantName,merchantAddress1:e.user.merchantAddress1,merchantAddress2:e.user.merchantAddress2,merchantCity:e.user.merchantCity,merchantState:e.user.merchantState,merchantZip:e.user.merchantZip,merchantCountry:e.user.merchantCountry||e.bankCountry,merchantIndustry:e.user.merchantIndustry,merchantWebsite:e.user.merchantWebsite,merchantPhone:e.user.merchantPhone},e.verificationData.owners.length<1&&e.verificationData.owners.push({firstName:"",lastName:"",dateOfBirth:""}),e.backButtonSref=e.user.merchantReverify?"menu.settings.general":"menu.getstarted",a.getAllCountries().then(function(n){e.countries=n}),s.getAllIndustries().then(function(n){e.industries=n}),e.onlyLetters=/^[A-Za-z \-]+$/,e.patternAddress=/^[^!"$%()*+\/\\]+$/,e.dba=/^[A-Za-z0-9&'@:,\/\(\)\.#"; \-]+$/,e.urlPattern=/^(?:[\s]*)?(?:https?:\/\/)?(?:(?!10(?:\.\d{1,3}){3})(?!127(?:\.\d{1,3}){3})(?!169\.254(?:\.\d{1,3}){2})(?!192\.168(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z0-9]+-?)*[a-z0-9]+)(?:\.(?:[a-z0-9]+-?)*[a-z0-9]+)*(?:\.(?:[a-z]{2,})))(?::\d{2,5})?(?:\/[^\s]*)?(?:[\s]*)?$/i,e.datePattern=/^(0?[1-9]|1[0-2])\/(0?[1-9]|1\d|2\d|3[01])\/(19|20)\d{2}$/,e.verifyBusinessInfo=function(n){n.$valid&&(e.submitting=!0,r.updateTier0VerificationData(e.verificationData).success(c).error(function(n){e.submitting=!1,e.processErr(n,"error")}))},e.autofillAddress=function(n){e.verificationData.merchantAddress1=n.address1,e.verificationData.merchantCity=n.city,e.verificationData.merchantZip=n.postalCode;for(var t=0;t<e.countries.length;t++)if(e.countries[t].shortCode===n.countryCode){e.verificationData.merchantCountry=e.countries[t].name;break}l(function(){e.verificationData.merchantState=n.state})}}]),angular.module("bitpay").controller("Verification1Ctrl",["$scope","$state","userData","userDataService",function(e,n,t,i){e.applyTier1=function(){i.updateAppliedTier({appliedTier:1}).then(function(n){n.data.upgradeLink?window.location=n.data.upgradeLink:n.data.reasonCode&&1012===n.data.reasonCode?e.tierUpgradePending=!0:e.coinplianceError=!0},function(n){e.processErr(n,"error")})}}]),angular.module("bitpay").controller("Verification2Ctrl",["$scope","$state","userData","userDataService","bitpayApiService","tierApplication","planUpgradeService",function(e,n,t,i,a,s,r){e.user=t,e.updgradePlanToApply=function(){r.initiatePlanUpgradeFlow(),n.go("menu.planSettings")},e.applyTier2=function(){i.updateAppliedTier({appliedTier:2}).then(function(n){n.data.upgradeLink?window.location=n.data.upgradeLink:n.data.reasonCode&&1012===n.data.reasonCode?e.tierUpgradePending=!0:e.coinplianceError=!0},function(n){e.processErr(n,"error")})}}]),angular.module("bitpay").controller("Verification3Ctrl",["$scope","$state","userData","userDataService","bitpayApiService","tierApplication","planUpgradeService",function(e,n,t,i,a,s,r){e.user=t,e.updgradePlanToApply=function(){r.initiatePlanUpgradeFlow(),n.go("menu.planSettings")},e.applyTier3=function(){i.updateAppliedTier({appliedTier:3}).then(function(n){n.data.upgradeLink?window.location=n.data.upgradeLink:n.data.reasonCode&&1012===n.data.reasonCode?e.tierUpgradePending=!0:e.coinplianceError=!0},function(n){e.processErr(n,"error")})}}]),angular.module("bitpay").controller("OnboardUserVerifyCtrl",["$state","$scope","userDataService","bpApiConfig","$stateParams","$q",function(e,n,t,i,a){var s=a.code,r=a.orgId;if(window.sessionInfo.isAuthenticated)n.message="Must logout before verifying new address",n.success=!1;else if(s){n.response=!1;var o=t.verifyEmailGetUserId(s,r);o.then(function(n){e.go("onboard-user",{userId:n.data.userEid,orgId:r})},function(e){n.message=e.data.message||e.data||"An unexpected error has occured.",n.success=!1,n.response=!0})}else e.go("login")}]),angular.module("bitpay").controller("VerifyEmailCtrl",["$state","$scope","userDataService","bpApiConfig","$stateParams","$q",function(e,n,t,i,a){var s=a.code;if(s){n.response=!1;var r=t.getUser(),o=t.verifyEmail(s);o.then(function(){r.then(function(){e.go("menu.getstarted")},function(){n.message="Your email address has been confirmed.",n.success=!0,n.response=!0})},function(e){n.message=e.data.message||e.data||"An unexpected error has occured.",n.success=!1,n.response=!0})}else e.go("login")}]),angular.module("bitpay").controller("UpdateEmailCtrl",["$scope","$state","userDataService","usersDataService","userData",function(e,n,t,i,a){e.addressUpdated=!1,e.email=a.email,e.updateEmailAddress=function(i,a){i.$valid&&(e.emailNotChanged=!1,e.emailExists=!1,t.updateEmailAddress({email:a}).then(function(){n.go("menu.getstarted")},function(n){"Email address must be not be the same as the existing email address."===n?e.emailNotChanged=!0:"Email address already belongs to an account."===n?e.emailExists=!0:e.processErr(n,"error")}))},e.resendEmailVerification=function(){i.getUserById(e.user.userEid).then(function(n){i.resendEmailVerification(n.token).then(function(){e.processErr("We just sent another email to "+e.user.email+". Please confirm your address by clicking the link in the email.","success")})})}}]),angular.module("bitpay").controller("RemoveAccountCtrl",["$state","$scope","userDataService","bpApiConfig","$stateParams",function(e,n,t,i,a){var s=a.code;n.accountDeleted=!1,s||e.go("404"),n.removeUnauthorizedAccoutn=function(){t.removeUnauthorizedAccount(s).then(function(){n.processErr("The account associated with your email address has been removed.","message"),n.accountDeleted=!0},function(){n.processErr("There was an error processing your request. Please contact support@bitpay.com","error")})}}]),angular.module("bitpay").controller("SettlementSettingsCtrl",["$scope","userDataService","userData","settlementData","currencyCodeService","currenciesDataService","bitpayApiService",function(e,n,t,i,a,s,r){function o(e,n){var t=e[n];if(!t)return!1;var i=Object.keys(t);return 1===i.length&&"bankCountry"===i[0]?!0:!1}e.settlementSettings=i,e.isComplete=n.onboardingChecklistComplete(t),e.pendingAccount=0===t.appliedTier&&t.approvedTier<0&&t.verified;var l=e.settlementSettings.payoutInfo;if(l){var c=t.payoutCurrency;o(l,c)||(e.bankInfo=e.settlementSettings.payoutInfo[e.settlementSettings.payoutCurrency]),e.btcInfo=e.settlementSettings.payoutInfo.BTC,(e.btcInfo&&!e.bankInfo||100===e.settlementSettings.bitcoinPercentage)&&(c="BTC",e.onlyBTC=!0),s.findByCode(c).then(function(n){e.settlementCurrencyObj=n,e.settlementMinimum=n.settlementMinimum,r.request({facades:["merchant","merchantFinance"],method:"getAdvancedSettlementSettings"}).then(function(n){e.settlementMinimum=n.data.settlementMinimum||e.settlementMinimum})})}else e.settlementSettings.payoutCurrency=a.getCountryCurrencyCode(t.merchantCountry)}]),angular.module("bitpay").controller("AddBankAcctController",["$rootScope","$scope","$ionicModal","$stateParams","$state","userDataService","userData","settlementData","currencyCodeService","bitpayApiService","countriesDataService","planUpgradeService","$ionicScrollDelegate",function(e,n,t,i,a,s,r,o,l,c,d,p,u){function m(e){return e.coinplianceId&&e.appliedTier>=0&&!e.merchantReverify?!0:!1}function b(e){for(var t=!1,i=0;i<n.countries.length;i++){var a=n.countries[i];if(e===a.name){t=!0;break}}return t}function v(e){n.currencyDetails.bankCountry||(n.currencyDetails.bankCurrency="",e&&(n.currencyDetails.bankCountry=a.params.country)),b(n.currencyDetails.bankCountry)&&(n.supportedCurrencies=l.getCountryCurrencyCode(n.currencyDetails.bankCountry),n.supportedCurrencies instanceof Array||(n.supportedCurrencies=[n.supportedCurrencies]),n.currencyDetails.bankCurrency=e?n.settlementSettings.payoutCurrency||a.params.currency:n.supportedCurrencies[0],n.settlementSettings.payoutCurrency=n.currencyDetails.bankCurrency,n.countryNotFiatSettlable=n.settlementSettings.payoutCurrency&&"BTC"!==n.settlementSettings.payoutCurrency?!1:!0,n.definiteArticleRequiredForCountry=d.isDefiniteArticleRequired(n.currencyDetails.bankCountry),n.setCurrency(e))}function g(e){e||a.go("menu.settlement.settlementSettingsAddBank",{country:n.currencyDetails.bankCountry,currency:n.settlementSettings.payoutCurrency},{notify:!1,location:"replace"})}function f(e){var n=e.toString();n=n.replace("-","");var t=n.substring(0,2),i=n.substring(2,9),a=t+"-"+i;return a}n.basicPlan=!1,n.upgradeRequired=!1,n.whatsThisOpen=!1,n.wireData={},n.settlementWiresEnabled=r.settlementWires,n.displayWireForm=r.settlementWires,n.initiatePlanUpgradeFlow=function(){p.initiatePlanUpgradeFlow(),a.go("menu.planSettings")},n.setWireFormDisplay=function(e){n.displayWireForm=e},n.toggleWhatsThis=function(){n.whatsThisOpen=!n.whatsThisOpen},n.accountVerificationComplete=m(r),n.currencyDetails={bankCountry:"",bankCurrency:""},r.merchantCountry&&(n.merchantCountryAlreadySet=!0,n.currencyDetails.bankCountry=r.merchantCountry),c.request({facades:["merchant","merchantFinance"],method:"getPlan"}).then(function(e){1===e.nextPlanId&&(n.basicPlan=!0)}),d.getAllCountries().then(function(e){n.countries=e,v(!0)}),n.countryChanged=function(){v()},n.onlyNumbers=/^[0-9]+$/,n.onlyNumbersAndDashes=/^[0-9\-]+$/,n.onlyLetters=/^[A-Za-z \-\u00c0-\u017f]+$/,n.onlyLettersAndNumbers=/^[A-Za-z0-9 \-]+$/,n.onlyLettersNumbersSymbols=/^[A-Za-z0-9 \-\/().,+=;#${}[\]|]+$/,n.routingNumber=/^[0-9]{9}$/,n.ibanCheck=/^[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}$/,n.swiftCheck=/^[A-Z]{6}[A-Z0-9]{2}([A-Z0-9]{3})?$/,n.setCurrency=function(e){n.settlementSettings.bitcoinPercentage||(n.settlementSettings.bitcoinPercentage=0),n.settlementSettings.payoutInfo&&n.settlementSettings.payoutCurrency&&n.settlementSettings.payoutInfo[n.settlementSettings.payoutCurrency]?n.settlementSettings.payoutInfo[n.settlementSettings.payoutCurrency].wire?(n.wireData=angular.copy(n.settlementSettings.payoutInfo[n.settlementSettings.payoutCurrency]),n.currencyDetails.bankCountry=n.wireData.bankCountry||r.merchantCountry,n.newBankInfo={}):(n.newBankInfo=angular.copy(n.settlementSettings.payoutInfo[n.settlementSettings.payoutCurrency]),n.currencyDetails.bankCountry=n.newBankInfo.bankCountry||r.merchantCountry,n.wireData={}):(n.newBankInfo={},n.wireData={},n.isAdd=!0),n.bankFields=l.getFieldsForCurrency(n.settlementSettings.payoutCurrency),n.settlementSettings.payoutCurrency&&(n.upgradeRequired=-1===["","USD","EUR","BTC"].indexOf(n.settlementSettings.payoutCurrency)),g(e)},n.settlementSettings=o,n.settlementSettings.payoutInfo[n.settlementSettings.payoutCurrency]||(n.settlementSettings.payoutCurrency=l.getCountryCurrencyCode(r.merchantCountry)),n.setCurrency(!0),n.saveWireInfo=function(e){if(e.$valid){n.submitting=!0,n.wireData.iban||delete n.wireData.iban,n.wireData.nationalRoutingNumber||delete n.wireData.nationalRoutingNumber,n.wireData.account||delete n.wireData.account;var t=n.settlementSettings.payoutInfo[n.settlementSettings.payoutCurrency];n.settlementSettings.payoutInfo[n.settlementSettings.payoutCurrency]=angular.copy(n.wireData),n.settlementSettings.changeCurrency=n.settlementSettings.payoutCurrency,n.settlementSettings.payoutInfo[n.settlementSettings.payoutCurrency].wire=!0,n.settlementSettings.payoutInfo[n.settlementSettings.payoutCurrency].bankCountry=n.currencyDetails.bankCountry,s.putSettlementSettings(n.settlementSettings).then(function(e){n.invalidFields={},a.go(n.user.payoutInfo||"verification required"===e.data?"menu.settings.settlement":"menu.getstarted")},function(e){n.submitting=!1,n.settlementSettings.payoutInfo[n.settlementSettings.payoutCurrency]=t,e.data&&e.data.invalidFields?n.invalidFields=e.data.invalidFields:(n.processErr(e,"error"),u.scrollTop())})}},n.saveBankInfo=function(e){if(n.dobVisited=!0,(!n.bankFields.dob||n.newBankInfo.dob)&&e.$valid){n.submitting=!0;var t=n.settlementSettings.payoutInfo[n.settlementSettings.payoutCurrency];n.settlementSettings.payoutInfo[n.settlementSettings.payoutCurrency]=angular.copy(n.newBankInfo);var i=n.settlementSettings.payoutInfo[n.settlementSettings.payoutCurrency].merchantEIN;i&&(n.settlementSettings.payoutInfo[n.settlementSettings.payoutCurrency].merchantEIN=f(i)),n.settlementSettings.changeCurrency=n.settlementSettings.payoutCurrency,n.settlementSettings.payoutInfo[n.settlementSettings.payoutCurrency].bankCountry=n.currencyDetails.bankCountry,s.putSettlementSettings(n.settlementSettings).then(function(e){n.invalidFields={},a.go(n.user.payoutInfo||"verification required"===e.data?"menu.settings.settlement":"menu.getstarted")},function(e){n.submitting=!1,n.settlementSettings.payoutInfo[n.settlementSettings.payoutCurrency]=t,e.data&&e.data.invalidFields?n.invalidFields=e.data.invalidFields:(n.processErr(e,"error"),u.scrollTop())})}}}]),angular.module("bitpay").controller("AddBitcoinAddressController",["$rootScope","$scope","$ionicModal","$state","$stateParams","userDataService","userData","settlementData","bitpayApiService",function(e,n,t,i,a,s,r,o,l){n.basicPlan=!1,n.upgradeRequired=!1,l.request({facades:["merchant","merchantFinance"],method:"getPlan"}).then(function(e){1===e.nextPlanId&&(n.basicPlan=!0)}),n.wholePercent=/^(0?[0-9]{1,2}|100)$/,n.settlementSettings=o,n.settlementSettings.payoutInfo&&n.settlementSettings.payoutInfo.BTC?(n.newBtcInfo=angular.copy(n.settlementSettings.payoutInfo.BTC),n.d={newBtcPercentage:n.settlementSettings.bitcoinPercentage}):(n.newBtcInfo={},n.d={newBtcPercentage:n.settlementSettings.bitcoinPercentage}),n.settlementSettings.payoutInfo&&!n.settlementSettings.payoutInfo[n.settlementSettings.payoutCurrency]&&(n.d.newBtcPercentage=100,n.d.newBtcPercentageFixed=!0),n.maybePromptForUpgrade=function(){o&&o.payoutCurrency&&(n.upgradeRequired=100===Number(n.d.newBtcPercentage)?!1:-1===["","USD","EUR"].indexOf(o.payoutCurrency))},n.maybePromptForUpgrade(),n.saveBtcAddress=function(e){e.$valid&&(n.submitting=!0,n.settlementSettings.bitcoinPercentage=parseInt(n.d.newBtcPercentage),n.settlementSettings.payoutInfo||(n.settlementSettings.payoutInfo={}),n.settlementSettings.payoutInfo.BTC=angular.copy(n.newBtcInfo),n.settlementSettings.changeCurrency="BTC",s.putSettlementSettings(n.settlementSettings).then(function(){i.go(s.onboardingChecklistComplete(r)?"menu.settings.settlement":"menu.getstarted")},function(e){n.submitting=!1,n.processErr(e.data.message||"An unexpected error has occured.","error")}))}}]),angular.module("bitpay").controller("ProcessSettlementSettingsChangesCtrl",["$state","$scope","userDataService","bpApiConfig","$stateParams","currencyCodeService",function(e,n,t,i,a,s){var r=a.code;r?(n.response=!1,t.getSettlementSettingsChanges(r).then(function(e){n.settlementSettingsChanges=e.data,n.settlementSettingsChanges.payoutInfo[n.settlementSettingsChanges.payoutCurrency].wire?(n.wireInfo=n.settlementSettingsChanges.payoutInfo[n.settlementSettingsChanges.payoutCurrency],n.wireFields=n.settlementSettingsChanges.payoutInfo[n.settlementSettingsChanges.payoutCurrency]):(n.bankInfo=n.settlementSettingsChanges.payoutInfo[n.settlementSettingsChanges.payoutCurrency],n.bankFields=s.getFieldsForCurrency(n.settlementSettingsChanges.payoutCurrency)),n.btcInfo=n.settlementSettingsChanges.payoutInfo.BTC},function(){n.badCode=!0})):e.go("landing"),n.processChanges=function(i){t.processSettlementSettingsChanges(r,i).then(function(){n.updateError=null,e.go("menu.settings.settlement")},function(e){n.updateError=e&&e.data&&e.data.message?e.data.message:"There was a problem updating your settlement settings. Please try again later."})}}]),angular.module("bitpay").controller("DashboardCtrl",["$scope","$state","sessionManager","$stateParams","bpApiConfig","$sce","userData","$ionicNavBarDelegate","$timeout","$sanitize",function(e,n,t,i,a,s,r,o,l,c){function d(e){return e.replace(/\w\S*/g,function(e){return e.charAt(0).toUpperCase()+e.substr(1).toLowerCase()})}function p(e){var n=e.split("-"),t="";n.forEach(function(e){t+=d(e)}),t=c(t),t=t.replace(/[\u00A0-\u9999<>\&]/gim,function(e){return"&#"+e.charCodeAt(0)+";"}),u(t)}function u(e){l(function(){document.title=e,o.title(e)},100)}var m,b;e.hasInvoice=r.createdInvoice,e.referralEnabled=r.referralEnabled,e.user=r,e.pendingAccount=0===r.appliedTier&&r.approvedTier<0&&r.verified,i.page&&(m=i.page,b=decodeURIComponent(i.params));var v=a.server;i.page?"client-billing"===m?(u("Client Billing"),e.activateBackButton("menu.paymentTools")):"create-donate"===m?(u("Donation Buttons"),e.activateBackButton("menu.paymentTools")):"create-checkout"===m?(u("Payment Buttons"),e.activateBackButton("menu.paymentTools")):"catalog-item-list"===m?(u("Hosted Catalog"),e.activateBackButton("menu.paymentTools")):"catalog-item"===m?(u("Hosted Catalog Item"),e.activateBackButton("menu.dashboard",{page:"catalog-item-list"})):"create-donate"===m?u("Accept Donations"):"merchant-contact"===m?(u("Contact Information"),e.activateBackButton("menu.settings.general")):"edit-mobile-checkout"===m?(u("Point of Sale App"),e.activateBackButton("menu.paymentTools")):"api-tokens"===m?(u("Manage API Tokens"),e.activateBackButton("menu.paymentTools")):"api-keys"===m?(u("Legacy API Keys"),e.activateBackButton("menu.paymentTools")):"two-factor"===m?(u("Two-Factor Authentication"),e.activateBackButton("menu.settings.general")):"accounting"===m?u("Settlement"):"edit-bill"===m?(u("Edit Bill"),e.activateBackButton("menu.dashboard",{page:"client-billing"})):"edit-donation-page"===m?(u("Donation Page"),e.activateBackButton("menu.paymentTools")):"help-hosted-checkout"===m?(u("Checkout Integration"),e.activateBackButton("menu.dashboard",{page:"create-checkout"})):"account-summary"===m?(u("Ledger"),e.activateBackButton("menu.overview")):"password-change"===m?(u("Change Password"),e.activateBackButton("menu.userSettings")):p(m):n.go("menu.dashboard",{page:"account-summary"}),v+=b?"/"+m+"?view=new&"+b:"/"+m+"?view=new",e.iFrameUrl=v}]),angular.module("bitpay").controller("BillsCtrl",["$scope","$state","currenciesDataService","billService","stateMessengerService",function(e,n,t,i,a){e.billData={bills:[]},e.alertMessage=a.dequeueStateMessage(n.current.name);var s=i.createBillsLoader();e.moreAvailable=!0,e.loadMore=function(){e.isLoading=!0,t.getMap().then(function(n){e.currencyCodeMap=n,s.loadBatch().then(function(n){var t=n.map(function(n){return n.uiCurrencyDef=e.currencyCodeMap[n.currency],n});e.billData.bills=e.billData.bills.concat(t),e.moreAvailable=s.areAnyBillsLeftToLoad(),e.$broadcast("scroll.infiniteScrollComplete"),e.isLoading=!1})})},e.loadMore()}]),angular.module("bitpay").controller("components.bills.Details",["$timeout","$scope","$state","bitpayApiService","$stateParams","currenciesDataService","userData","countriesDataService","$q","$filter","billService","stateMessengerService","settlementDateService","$ionicModal","$ionicPopover","$ionicSideMenuDelegate","$ionicPosition","$window","bpHistory","analytics",function(e,n,t,i,a,s,r,o,l,c,d,p,u,m,b,v,g,f,h,_){function y(){t.includes("menu.newBill")?w():C()}function w(){n.newBill=!0,n.editingBuyerInformation=!0,n.editingBillInformation=!0,n.bill={},n.bill.currency=r.payoutCurrency,n.bill.dueDate=c("date")(new Date,"shortDate"),n.bill.items=[{description:null,price:null,quantity:1}]}function C(){d.getDuplicateBillData()&&(n.isDuplicatedBill=!0),d.getBillOrSubscriptionById(a.id).then(function(e){n.bill=e,n.bill.email&&(n.buyerEmails=[{text:n.bill.email,id:0}]),n.ccEmails=n.bill.cc.map(function(e,n){return{text:e,id:n}}),n.bill.dueDate=c("date")(n.bill.dueDate,"shortDate"),n.bill.nextDelivery&&(n.bill.nextDelivery=c("date")(n.bill.nextDelivery,"shortDate")),n.bill.includeBuyerAddress=M(n.bill)},function(){n.unexpectedError=!0})}function k(e){var n=x();e&&1===e.length&&(n.value=e),n.focus()}function S(e){return 32===e||13===e||188===e||8===e||9===e?!0:!1}function x(){return f.document.getElementById("cc-tags-input").getElementsByTagName("input")[0]}function I(n){if(8===n.keyCode){var t=x();1===t.value.length&&e(function(){t.value=""})}}function A(){n.saveSucceeded=!1,n.sendSucceeded=!1,n.resendSucceeded=!1,n.unexpectedError=!1,n.isDuplicatedBill=!1}function D(){var e=n.bill.isRepeating?d.updateSubscription:d.updateBill;return e}function P(e){n.bill.status=e?"draft":"active",d.createSubscription(n.bill).then(function(i){var a=i.data;e?(p.enqueueStateMessage("menu.bills","draftSubscriptionCreated",{id:a.id}),_.track("D - created a draft subscription")):(p.enqueueStateMessage("menu.bills","subscriptionCreated",{id:a.id,nextDelivery:j(n.bill.nextDelivery)}),_.track("D - created a subscription")),t.go("menu.bills",null,{location:"replace"})},function(){A(),n.unexpectedError=!0})}function F(){d.activateSubscription(n.bill).then(function(){p.enqueueStateMessage("menu.bills","subscriptionActivated",{id:n.bill.id,nextDelivery:j(n.bill.nextDelivery),name:n.bill.name,email:n.bill.email}),_.track("D - activated a subscription"),t.go("menu.bills")},function(){A(),n.unexpectedError=!0})}function B(e){angular.forEach(e.$error,function(e){angular.forEach(e,function(e){e.$setTouched()})})}function $(){return n.forms.billInfoForm.$valid&&n.forms.buyerInfoForm.$valid}function T(){B(n.forms.billInfoForm),B(n.forms.buyerInfoForm)}function R(){n.newBill?n.createAndSendBill(n.bill):n.saveBuyerInformation().then(function(){return n.saveBillInformation()}).then(function(){return d.sendBill(n.bill)}).then(function(){A(),"draft"===n.bill.status?(n.bill.status="sent",n.sendSucceeded=!0,_.track("D - sent a bill")):(n.resendSucceeded=!0,_.track("D - resent a bill"))},function(){A(),n.unexpectedError=!0})}function E(){var e=n.forms.billInfoForm.nextDelivery,t=j(n.bill.dueDate),i=j(n.bill.nextDelivery),a=u.getDayStart();n.bill.isRepeating&&a>i?e.$setValidity("afterToday",!1):e.$setValidity("afterToday",!0),n.bill.isRepeating&&n.bill.dueDate&&i>t?e.$setValidity("beforeDueDate",!1):e.$setValidity("beforeDueDate",!0)}function q(){n.forms.billInfoForm.dueDate.$setValidity("quarterlyMonth",!0),n.forms.billInfoForm.dueDate.$setValidity("shortMonth",!0);var e=j(n.bill.dueDate);if(n.bill.isRepeating){if("quarterly"===n.bill.pattern){var t=e.getMonth();if(0!==t&&3!==t&&6!==t&&9!==t)return n.forms.billInfoForm.dueDate.$setValidity("quarterlyMonth",!1)}if("monthly"===n.bill.pattern){var i=e.getDate();if(i>28)return n.forms.billInfoForm.dueDate.$setValidity("shortMonth",!1)}}}function U(){E(),q()}function N(){n.bill.nextDelivery||(n.bill.nextDelivery=c("date")(new Date,"shortDate")),n.bill.pattern||(n.bill.pattern="weekly")}function M(e){return e.address1||e.city||e.state||e.zip?!0:!1}function O(){n.bill.items=n.bill.items.filter(function(e){return e.description||e.price||e.quantity})}function L(e,n){var t=angular.element(e.target||e),i=g.offset(t),a=n.prop("offsetWidth"),s=n.prop("offsetHeight"),r=f.innerWidth,o=f.innerHeight,l={left:i.left+i.width/2-a/2},c=10;l.left<c?l.left=c:l.left+a+c>r&&(l.left=r-a-c),i.top+i.height+s>o&&i.top-s>0?(l.top=i.top-s,n.addClass("popover-bottom")):(l.top=i.top+i.height,n.removeClass("popover-bottom")),n.css({top:l.top-15+"px",left:l.left-45+"px",marginLeft:"0",opacity:"1"})}n.forms={},n.editingBuyerInformation=!1,n.editingBillInformation=!1,n.isCcShown=!1;var j=d.getDateFromString;s.getMap().then(function(e){n.orderTotalCurrencyCodeMap=e;var t=angular.copy(e);t.BTC.precision=3,n.currencyCodeMap=t,y()}),n.showCc=function(t){n.isCcShown=!0,e(function(){k(t)},100)},n.buyerEmails=[],n.ccEmails=[],n.onBuyerEmailAdded=function(e){var t=0;if(n.buyerEmails.length>1){var i=n.buyerEmails.indexOf(e)-1,a=n.buyerEmails[i];t=a.id+1}e.id=t,n.bill.email=e.text},n.onCcEmailAdded=function(e){var t=0;if(n.ccEmails.length>1){var i=n.ccEmails.indexOf(e)-1,a=n.ccEmails[i];t=a.id+1}e.id=t,n.bill.cc=n.ccEmails.map(function(e){return e.text})},n.onCcEmailRemoved=function(){n.bill.cc=n.ccEmails.map(function(e){return e.text})},n.onBuyerKeyDown=function(e){var t=e.keyCode;S(t)||n.buyerEmails.length>0&&(e.preventDefault(),n.showCc(e.key))},n.onCcKeyDown=function(e){I(e),!S(e.keyCode)&&n.ccEmails.length>=3?(e.preventDefault(),n.maxCcError=!0):n.maxCcError=!1},n.onCcBlur=function(){n.maxCcError=!1},n.hideActionButton=function(){return n.bill?"complete"===n.bill.status||"paid"===n.bill.status:!0},n.getCcRecipientString=function(){return n.bill&&n.bill.cc?n.bill.cc.join(", "):void 0},n.hideSendButton=function(){var e=n.bill,t=n.newBill;if(!e)return!0;var i=e.isRepeating&&!t&&"active"===e.status,a="paid"===e.status||"complete"===e.status;return i||a},n.editBuyerInformation=function(){A(),n.originalBuyerInformation=d.copyBuyerInformation(n.bill),n.editingBuyerInformation=!0,n.bill.cc.length>0&&(n.isCcShown=!0)},n.cancelEditingBuyerInformation=function(){d.restoreBillValues(n.bill,n.originalBuyerInformation),n.bill.includeBuyerAddress=M(n.bill),n.editingBuyerInformation=!1},n.editBillInformation=function(){A(),n.originalBillInformation=d.copyBillInformation(n.bill),n.editingBillInformation=!0},n.cancelEditingBillInformation=function(){d.restoreBillValues(n.bill,n.originalBillInformation),n.editingBillInformation=!1},n.addItem=function(){var e={description:null,price:null,quantity:1};n.bill.items.push(e)},n.deleteItem=function(e){n.bill.items=n.bill.items.filter(function(n){return n!==e})},n.getTotal=function(e){if(!e||0===e.length)return 0;for(var n=0,t=0;t<e.length;t++){var i=e[t];n+=i.price*i.quantity}return n},n.autofillAddress=function(e){n.bill.address1=e.address1,n.bill.city=e.city,n.bill.state=e.state,n.bill.zip=e.postalCode;for(var t=0;t<n.countries.length;t++)if(n.countries[t].shortCode===e.countryCode){n.bill.country=n.countries[t].name;break}},n.saveBuyerInformation=function(){if(n.forms.buyerInfoForm.$valid){A();var e=D(),t=l.defer();return e(n.bill).then(function(){A(),n.editingBuyerInformation=!1,n.saveSucceeded=!0,t.resolve()},function(){A(),n.unexpectedError=!0,t.reject()}),t.promise}},n.saveBillInformation=function(){if(n.forms.billInfoForm.$valid){O(),A();
var e=D(),t=l.defer();return e(n.bill).then(function(){A(),n.editingBillInformation=!1,n.saveSucceeded=!0,t.resolve()},function(){A(),n.unexpectedError=!0,t.reject()}),t.promise}},n.createAndSendBill=function(){var e;d.createBill(n.bill).then(function(n){return e=n.data,d.sendBill(e)}).then(function(){p.enqueueStateMessage("menu.bills","billCreated",{id:e.id}),_.track("D - created a bill"),t.go("menu.bills",null,{location:"replace"})},function(){A(),n.unexpectedError=!0})},n.createBillAsDraft=function(){n.bill.status="draft",d.createBill(n.bill).then(function(e){var n=e.data;p.enqueueStateMessage("menu.bills","billCreated",{id:n.id}),_.track("D - created a draft bill"),t.go("menu.bills",null,{location:"replace"})},function(){A(),n.unexpectedError=!0})},n.createBillOrSubscriptionAsDraft=function(){return n.sendBillOrCreateSubscriptionAttempted=!0,$()?(O(),void(n.bill.isRepeating?P(!0):n.createBillAsDraft())):void T()},n.duplicateBill=function(){d.duplicateBill(n.bill).then(function(e){var i=e.data;_.track(n.bill.isRepeating?"D - duplicated a subscription":"D - duplicated a bill"),t.go("menu.billDetails",{id:i.id},{location:"replace"})})},n.sendBillOrCreateSubscription=function(){return n.sendBillOrCreateSubscriptionAttempted=!0,$()?(A(),void(n.bill.isRepeating?n.newBill?P():F():R())):void T()},s.getAllCurrencies().then(function(e){function t(e,n){return-1!==e.indexOf(n)}n.currencies=[];var i=["BTC","BCH","USD","EUR","GBP","JPY","CAD","AUD","CNY","CHF","SEK","NZD","KRW"];e.forEach(function(e){t(i,e.code)||n.currencies.push(e)})}),o.getAllCountries().then(function(e){n.countries=e}),n.dueDateChanged=function(){U()},n.nextDeliveryChanged=function(){U()},n.patternChanged=function(){U()},n.isRepeatingChanged=function(){n.bill.isRepeating&&N(),U()},m.fromTemplateUrl("components/bills/confirm-cancel-subscription-modal.html",{scope:n,animation:"slide-in-up"}).then(function(e){n.cancelSubscriptionModal=e}),n.cancelSubscription=function(){n.cancelSubscriptionModal.show()},n.cancelSubscriptionCancellation=function(e){e.preventDefault(),n.cancelSubscriptionModal.hide()},n.confirmCancelSubscription=function(){d.cancelSubscription(n.bill).then(function(){p.enqueueStateMessage("menu.bills","subscriptionCancelled",{email:n.bill.email}),_.track("draft"===n.bill.status?"D - cancelled a draft subscription":"D - cancelled a subscription"),n.cancelSubscriptionModal.hide(),t.go("menu.bills",null,{location:"replace"})},function(){n.unexpectedError=!0})},m.fromTemplateUrl("components/bills/confirm-delete-bill-modal.html",{scope:n,animation:"slide-in-up"}).then(function(e){n.deleteBillModal=e}),n.deleteBill=function(){n.deleteBillModal.show()},n.cancelDeleteBill=function(e){e.preventDefault(),n.deleteBillModal.hide()},n.confirmDeleteBill=function(){d.deleteBill(n.bill).then(function(){p.enqueueStateMessage("menu.bills","billDeleted",{email:n.bill.email}),_.track("draft"===n.bill.status?"D - deleted a draft bill":"D - deleted a bill"),n.deleteBillModal.hide(),t.go("menu.bills",null,{location:"replace"})},function(){n.unexpectedError=!0})},n.showMorePopover=function(){var e=n.$new(),t=e.$on("popover.hidden",function(){t(),n.morePopover.remove()});b.fromTemplateUrl("components/bills/more-popover.html",{scope:e,positionView:L}).then(function(e){function t(){var e=document.querySelectorAll("[nav-bar=active]"),n=e[0].getElementsByClassName("bp-bills__more-button")[0];return n}n.morePopover=e;var i=t();n.morePopover.show(i)})}}]),angular.module("bitpay").controller("PaymentsCtrl",["$scope","$state","$timeout","userDataService","bitpayApiService","$location","invoicesDataService","$q","analytics","$rootScope","currenciesDataService","$ionicPopover","$ionicPosition","$window",function(e,n,t,i,a,s,r,o,l,c,d,p,u,m){function b(){n.params.search?(e.searchMode=!0,e.searchQuery=n.params.search,e.searchQueryChanged()):e.setDateRange(n.params.preset)}function v(){var n=e.startDate;n.set("hour",0),n.set("minute",0),n.set("second",0),n.set("millisecond",0);var t=e.endDate;t.set("hour",23),t.set("minute",59),t.set("second",59),t.set("millisecond",999)}function g(){var t={};e.filter=t.status=n.params.filter||"allButExpiredAndUnpaid",e.searchMode||(t.dateStart=e.startDate.format(),t.dateEnd=e.endDate.format(),e.isLoading=!0,e.paymentData.clear(),r.createInvoiceLoader(t).then(function(n){e.load=function(){e.isLoading=!0,n.loadBatch().then(function(i){"unresolved"===t.status&&(i=i.filter(function(e){return e.btcPaid>=0})),e.paymentData.payments=e.paymentData.payments.concat(i),e.moreAvailable=n.areAnyInvoicesLeftToLoad(),e.$broadcast("scroll.infiniteScrollComplete"),e.isLoading=!1})},e.load()}))}function f(e,n){var t=angular.element(document.getElementsByClassName("pv__date-selector")),i=u.offset(t),a=(n.prop("offsetWidth"),n.prop("offsetHeight")),s=m.innerWidth,r=m.innerHeight,o={right:s-(i.left+i.width)-10};i.top+i.height+a>r&&i.top-a>0?(o.top=i.top-a,n.addClass("popover-bottom")):(o.top=i.top+i.height,n.removeClass("popover-bottom")),n.css({top:o.top+"px",right:o.right+"px",left:"initial",marginLeft:"0",opacity:"1"})}var h=[];e.paymentData={payments:[],clear:function(){h=this.payments,this.payments=[]},restore:function(){this.payments=h}},e.searchMode=!1,e.dateRangePreset={},e.setDateRange=function(t){switch(e.dateRangePreset.value=t||"past30Days",e.dateRangePreset.value){case"past30Days":e.startDate=moment().subtract(30,"days"),e.endDate=moment();break;case"pastYear":e.startDate=moment().subtract(1,"year"),e.endDate=moment();break;case"ytd":e.startDate=moment(),e.startDate.month(0),e.startDate.date(1),e.endDate=moment();break;case"custom":e.startDate=moment(n.params.startDate,"YYYY-MM-DD"),e.startDateFormatted=e.startDate.format("l"),e.endDate=moment(n.params.endDate,"YYYY-MM-DD"),e.endDateFormatted=e.endDate.format("l")}v()},e.updateSearchParam=function(t){n.go("menu.payments",{search:t},{notify:!1}),e.searchQueryChanged()},e.searchQueryChanged=function(){e.paymentData.payments=[],r.wideSearch(e.searchQuery).then(function(n){e.paymentData.payments=n,e.isLoading=!1})},e.setSearchingState=function(n){if(n.target&&!angular.isUndefined(n.target.value)){var t=n.target.value.length;t>0&&e.searchQuery!==n.target.value&&(e.isLoading=!0)}},e.startSearch=function(){e.searchMode=!0,e.paymentData.clear()},e.cancelSearch=function(){e.paymentData.restore(),e.searchMode=!1,e.invoiceNotFound=!1,e.searchQuery="",n.go("menu.payments",{search:null},{notify:0===e.paymentData.payments.length})},e.cancelAllSearches=function(){e.searchMode&&e.cancelSearch()},e.$on("$stateChangeStart",function(){e.nextSearch&&t.cancel(e.nextSearch)}),e.startDateChanged=function(t){e.startDate=moment(t,"l"),e.startDateFormatted=e.startDate.format("l"),n.go("menu.payments",{preset:"custom",startDate:e.startDate.format("YYYY-MM-DD"),endDate:e.endDate.format("YYYY-MM-DD")},{notify:!1}),g()},e.endDateChanged=function(t){e.endDate=moment(t,"l"),e.endDateFormatted=e.endDate.format("l"),n.go("menu.payments",{preset:"custom",startDate:e.startDate.format("YYYY-MM-DD"),endDate:e.endDate.format("YYYY-MM-DD")},{notify:!1}),g()},e.setQueryParams=function(){var t={startDate:e.startDate.format("YYYY-MM-DD"),endDate:e.endDate.format("YYYY-MM-DD"),preset:e.dateRangePreset.value};e.searchMode&&(t.search=e.searchQuery),n.go("menu.payments",t)},b(),g(),e.showDatePopover=function(n){var t=e.$new(),i=t.$on("popover.hidden",function(){i(),e.datePopover.remove()});p.fromTemplateUrl("components/payments/date-popover.html",{scope:t,positionView:f}).then(function(t){e.datePopover=t,e.datePopover.show(n.target)})}}]),angular.module("bitpay").controller("components.payments.Details",["$scope","$rootScope","$state","userDataService","bitpayApiService","$stateParams","$q","currenciesDataService","$ionicModal","$timeout","userData","$http","$window","invoicesDataService",function(e,n,t,i,a,s,r,o,l,c,d,p,u,m){function b(){e.disabledReason=null,d.suspended?e.disabledReason="accountSuspended":e.hasRefundPermission===!1?e.disabledReason="permissions":"paid"===e.invoice.status||"confirmed"===e.invoice.status?e.disabledReason="confirmations":e.hasPendingRefund?e.disabledReason="pendingRefund":e.alreadyRefunded?e.disabledReason="alreadyRefunded":e.alertUnderpaid?(e.disabledReason="underpaid",e.onConfirm=e.goToResolveFromModal):e.alertOverpaid?(e.disabledReason="overpaid",e.onConfirm=e.goToResolveFromModal):"invalid"===e.invoice.status?e.disabledReason="invalid":"expired"===e.invoice.status&&(e.disabledReason="expired")}function v(n){var t=n;t.uiCurrencyDef=e.currencyCodeMap[n.currency],t.uiStatus=n.status,"invalid"!==n.status&&("paidPartial"===n.exceptionStatus&&(t.uiStatus=n.exceptionStatus),"paidOver"===n.exceptionStatus&&(t.uiStatus=n.exceptionStatus));var i=n.currency===n.computedFields.transactionCurrency?1:n.exRates[n.currency];t.uiPrice=n.btcPrice*i,t.uiDifference=(n.btcPrice-n.btcPaid)*i,t.confirmations="N/A",n.transactions.forEach(function(e){(e.confirmations<t.confirmations||"N/A"===t.confirmations)&&(t.confirmations=e.confirmations)});var a=Math.abs(n.btcPrice-n.btcPaid),s=.01/n.rate;return!n.exceptionStatus&&n.btcPrice!==n.btcPaid&&s>a&&(n.btcPrice=n.btcPaid),t}function g(n){var t=e.invoice.transactions.filter(function(e){return e.txid===n}),i=t[0];if(t.length>1){i=t.filter(function(e){return"buyerPaidRefundFee"!==e.type})[0];var a=t.filter(function(e){return"buyerPaidRefundFee"===e.type})[0];a&&(i.amount+=a.amount,i.refundAmount&&(i.refundAmount+=a.amount))}return i}function f(e){var n=m.getTransactionCurrency(e),t="";return"test.bitpay.com"===window.location.host&&(t="test-"),"BCH"===n&&(t+="bch-"),t+="insight"}e.invoiceId=s.id,e.hasRefundPermission=!0,e.enableMinerFeeItemization=!1,e.goToRefundState=function(){t.go("menu.paymentRefund",{id:e.invoice.id})},e.removeUser=function(){e.modal.show()},l.fromTemplateUrl("components/payments/insufficient-balance-help-modal.html",{scope:e,animation:"slide-in-up"}).then(function(n){e.modal=n}),e.openLedgerBalanceHelpModal=function(){e.modal.show()},e.goToResolveFromModal=function(){t.go("menu.paymentResolveException",{id:e.invoice.id})},r.all([a.request({facades:["merchantSupport","merchant","merchantIntegration","merchantFinance"],method:"getInvoice",params:{invoiceId:s.id}}),a.request({facades:["merchantSupport","merchant","merchantIntegration","merchantFinance"],method:"getOrderSettings",params:{invoiceId:s.id}}),p({method:"GET",url:"/invoiceData/"+s.id})]).then(function(n){e.invoice=n[0].data,e.invoice.computedFields=m.getComputedFields(e.invoice),e.orderSettings=n[1].orderSettings,e.relatedInfo=n[2].data,e.insightSubdomain=f(e.invoice),e.alertUnderpaid="paidPartial"===e.invoice.exceptionStatus&&e.invoice.btcPaid>0,e.alertOverpaid="paidOver"===e.invoice.exceptionStatus,a.hasFacade(["merchant","merchantSupport"]).then(function(n){e.hasRefundPermission=n,b()}),e.hasRefundableBalance=!1,e.alreadyRefunded=!1;var t;t=a.request(e.orderSettings.refundInBTC||e.invoice.currency===e.invoice.computedFields.transactionCurrency?{token:e.invoice.token,method:"getRefundableBTCBalance"}:{token:e.invoice.token,method:"getRefundableFiatBalance"}),t.then(function(n){n&&n.data>0?e.hasRefundableBalance=!0:e.alreadyRefunded=!0,b()}),e.timeline=[],e.invoice.transactions.forEach(function(n){if(("refundFromLedger"===n.type||"refundFromInvoice"===n.type&&e.invoice.btcDue>0)&&(e.hasExecutedRefund=!0),n.amount<0&&"0000000000000000000000000000000000000000000000000000000000000000"===n.txid)n.uiType="creditToMerchant";else{if(n.amount<0)return;if(n.amount>0&&(n.uiType="paymentFromPurchaser","buyerPaidMinerFee"!==n.type)){var t=e.invoice.transactions.filter(function(e){return e.txid===n.txid&&"buyerPaidMinerFee"===e.type});t[0]&&(n.buyerPaidMinerFee=t[0],n.merchantAmount=n.amount+n.buyerPaidMinerFee.amount)}}e.timeline.push({timestamp:new Date(n.receivedTime),transaction:n})});var i=o.getMap().then(function(n){e.currencyCodeMap=n,e.transactionCurrency=e.currencyCodeMap[e.invoice.transactionCurrency],e.invoiceCurrency=e.currencyCodeMap[e.invoice.currency]});i.then(function(){e.payment=v(e.invoice),b()}),a.request({token:e.invoice.token,method:"getRefunds"}).then(function(n){n.data.forEach(function(n){if("success"===n.status&&n.results&&n.results.bitcoinPayouts&&n.results.bitcoinPayouts.length>=1&&n.results.bitcoinPayouts[0]&&n.results.bitcoinPayouts[0].txid){var t=g(n.results.bitcoinPayouts[0].txid);t.refundAmount?(n.uiCryptoRefundAmount=Math.abs(t.refundAmount)/1e8,e.oldRefund=!0):n.uiCryptoRefundAmount=Math.abs(t.amount)/1e8}"pending"===n.status&&(e.hasPendingRefund=!0),e.timeline.push({timestamp:new Date(n.requestDate),supportRequest:n}),b()}),e.timeline.sort(function(e,n){return e.timestamp<n.timestamp?-1:e.timestamp>n.timestamp?1:0})}),e.relatedInfo.buyer&&e.relatedInfo.buyer.address&&(e.formattedAddressFields=u.addressFormat({address:e.relatedInfo.buyer.address.streetAddress1,address2:e.relatedInfo.buyer.address.streetAddress2,city:e.relatedInfo.buyer.address.addressLocality,subdivision:e.relatedInfo.buyer.address.addressRegion,postalCode:e.relatedInfo.buyer.address.postalCode,countryCode:e.relatedInfo.buyer.address.addressCountry}))},function(){e.alertUnexpected=!0}),e.cancelEmailRefundRequest=function(){a.request({token:e.invoice.token,method:"cancelEmailRefundRequest"}).then(function(){e.invoice.refundAddressRequestPending=!1,b()})},e.cancelPendingRefund=function(n){a.request({token:n.token,method:"cancel"}).then(function(){e.pendingRefundCanceled=!0,e.hasPendingRefund=!1,e.alreadyRefunded=!1,n.status="canceled",b()})},e.filterCanceled=function(e){return!(e.supportRequest&&"canceled"===e.supportRequest.status)},e.isRefundButtonDisabled=function(){return e.disabledReason?!0:!1}}]),angular.module("bitpay").controller("components.payments.Refund",["$scope","$rootScope","$state","userDataService","bitpayApiService","$stateParams","$q","$ionicModal","currenciesDataService",function(e,n,t,i,a,s,r,o,l){function c(e){return e.buyerProvidedEmail?e.buyerProvidedEmail:d(e)}function d(e){return e&&e.buyer&&e.buyer.email}e.invoiceId=s.id,e.noPurchaserEmail=!1,e.refund={type:"full",addressType:"specified"},r.all([a.request({facades:["merchantSupport","merchant"],method:"getInvoice",params:{invoiceId:s.id}}),a.request({facades:["merchantSupport","merchant"],method:"getOrderSettings",params:{invoiceId:s.id}})]).then(function(n){return e.invoice=n[0].data,e.refund.email=c(e.invoice),e.refund.email||(e.noPurchaserEmail=!0),e.refund.email&&(e.refund.addressType="preset"),e.orderSettings=n[1].orderSettings,a.request({token:e.invoice.token,method:"getRefunds"})},function(){e.alertUnexpected=!0}).then(function(n){("paidPartial"===e.invoice.exceptionStatus||!n.data.length&&"paidOver"===e.invoice.exceptionStatus)&&(e.exceptionStatus=!0);var t;t=a.request(e.orderSettings.refundInBTC||e.invoice.currency===e.invoice.transactionCurrency?{token:e.invoice.token,method:"getRefundableBTCBalance"}:{token:e.invoice.token,method:"getRefundableFiatBalance"}),t.then(function(n){var t=n.data;e.orderSettings.refundInBTC||e.invoice.currency===e.invoice.transactionCurrency?(e.refund.fullAmount=t,e.refund.amount=t,e.refund.maxAmount=t,e.refundCurrency=e.invoice.transactionCurrency,t<e.invoice.btcPaid&&(e.onlyPartial=!0,e.refund.type="partial")):(e.refundCurrency=e.invoice.currency,e.refund.fullAmount=t,e.refund.amount=t,e.refund.maxAmount=t,t<e.invoice.price&&(e.onlyPartial=!0,e.refund.type="partial")),l.findByCode(e.refundCurrency).then(function(n){e.refundCurrencyObj=n})})},function(){e.alertUnexpected=!0}),e.resetEmailToPreset=function(){e.refund.email=c(e.invoice)},e.next=function(n){if(n.$valid){var i={id:s.id};e.exceptionStatus||(e.orderSettings.refundInBTC?(i.amount=e.refund.maxAmount,i.currency=e.invoice.transactionCurrency):(i.amount=e.refund.maxAmount,i.currency=e.invoice.currency)),"partial"===e.refund.type&&(i.amount=e.refund.amount),i.email=e.refund.email,t.go("menu.paymentConfirmRefund",i)}}}]),angular.module("bitpay").controller("components.payments.ConfirmRefund",["$scope","$rootScope","$state","userDataService","bitpayApiService","$stateParams","invoicesDataService","analytics","$q","currenciesDataService","bpHistory","$filter",function(e,n,t,i,a,s,r,o,l,c,d,p){function u(){var n=l.defer();return a.request({token:e.invoice.token,method:"getThirtyDayRate"}).then(function(e){n.resolve(e.data)},function(e){e.indexOf("young")>-1?n.resolve(null):n.reject(e)}),n.promise}function m(){return p("amount")(e.invoice.overpaidAmount)}e.invoiceId=s.id,e.refundAmount=s.amount,e.refundCurrency=s.currency,e.email=s.email,e.confirm={},l.all([a.request({facades:["merchantSupport","merchant"],method:"getInvoice",params:{invoiceId:s.id}}),a.request({facades:["merchantSupport","merchant"],method:"getOrderSettings",params:{invoiceId:s.id}})]).then(function(n){var t=n[0],i=n[1];return e.invoice=t.data,e.invoice.computedFields=r.getComputedFields(e.invoice),e.orderSettings=i.orderSettings,c.findByCode(e.invoice.transactionCurrency).then(function(n){e.transactionCurrency=n}),a.request({token:e.invoice.token,method:"getRefundFee"}).then(function(n){e.refundFeeEstimate=n}),a.request({token:e.invoice.token,method:"getRefunds"})},function(){e.alertUnexpected=!0}).then(function(n){return n.data.length||"paidOver"!==e.invoice.exceptionStatus||(e.isPaidOver=!0),e.orderSettings.refundInBTC?(e.fixedRate=!0,e.refund.amount=parseFloat(e.invoice.btcPaid),e.refund.maxAmount=parseFloat(e.invoice.btcPaid),e.refundCurrency=e.invoice.transactionCurrency,e.isPaidOver?e.refundAmount=m():"paidPartial"===e.invoice.exceptionStatus&&(e.refundAmount=e.invoice.btcPaid)):(e.fixedRate=!1,e.refundCurrency=e.invoice.currency,e.refund.amount=parseFloat(e.invoice.price),e.refund.maxAmount=parseFloat(e.invoice.price),e.isPaidOver?e.refundAmount=m()*e.invoice.computedFields.exchangeRate:"paidPartial"===e.invoice.exceptionStatus&&(e.refundAmount=e.invoice.btcPaid*e.invoice.computedFields.exchangeRate)),u()},function(){e.alertUnexpected=!0}).then(function(n){n&&("paidPartial"===e.invoice.exceptionStatus||e.isPaidOver)&&(e.thirtyDayRate=n,e.fixedRate=!1,e.refundCurrency="USD",e.refundAmount=e.isPaidOver?m()*e.thirtyDayRate:e.invoice.btcPaid*e.thirtyDayRate)},function(){e.alertUnexpected=!0}),e.doesConfirmMatch=function(){if(!e.confirm.amount)return!1;var n=e.confirm.amount.toLowerCase().replace(/[^\d\.]/g,"");return parseFloat(n).toFixed(2)===Math.abs(parseFloat(e.refundAmount)).toFixed(2)},e.refund=function(n){if(!n.$valid)return void(e.submitting=!1);if(e.alertAlreadyRefunded=!1,e.alertUnconfirmed=!1,!e.doesConfirmMatch())return void(e.confirmFailed=!0);var i={};"paidPartial"===e.invoice.exceptionStatus||e.isPaidOver||(i.amount=e.refundAmount,i.currency=e.refundCurrency),i.email=e.email,i.sendRefundRequestEmail=!0,a.request({token:e.invoice.token,method:"refund",params:i}).then(function(){r.invalidateCache(),o.track(e.isPaidOver?"D - submitted refund for overpayment":"paidPartial"===e.invoice.exceptionStatus?"D - submitted refund for underpayment":"D - submitted refund");var n=2;e.invoice.exceptionStatus&&(n=3),t.go("menu.paymentDetails",{id:s.id}).then(d.wipePreviousStates(n))},function(n){e.submitting=!1,angular.isString(n)?"transaction does not have at least 6 confirmations and cannot be refunded yet"===n?e.alertUnconfirmed=!0:"This invoice was already refunded"===n?e.alertAlreadyRefunded=!0:e.serverError=n:e.alertUnexpected=!0})}}]),angular.module("bitpay").controller("components.payments.ConfirmAdjustment",["$scope","$state","userDataService","bitpayApiService","$stateParams","invoicesDataService","bpHistory","analytics",function(e,n,t,i,a,s,r,o){e.confirm={},e.invoiceId=a.id,i.request({facades:["merchant","merchantSupport"],method:"getInvoice",params:{invoiceId:a.id}}).then(function(t){e.invoice=t.data,e.invoice.computedFields=s.getComputedFields(e.invoice),e.invoice.underpaidAmount||n.go("menu.paymentDetails",{id:e.invoiceId}).then(r.wipePreviousStates(2)),e.handleAdjustment(!1)},function(){e.alertUnexpected=!0}),e.handleAdjustment=function(t){var a="acceptUnderpayment";i.request({token:e.invoice.token,method:"handleAdjustment",params:{type:a,commit:t}}).then(function(i){t?(s.invalidateCache(),o.track("D - accepted underpayment"),n.go("menu.paymentDetails",{id:e.invoiceId}).then(r.wipePreviousStates(2))):e.effects={oldPrice:i.effects.oldprice,oldRate:i.effects.oldExRates[e.invoice.currency],newPrice:i.effects.newprice,newRate:i.effects.newExRates[e.invoice.currency],priceDiff:Math.abs(i.effects.newprice-i.effects.oldprice)}},function(n){angular.isString(n)?0===n.indexOf("Conflicting request already exists:")?(e.conflictingRequestId=n.substring(n.indexOf(":")+2),e.alertAlreadyRefunded=!0):e.serverError=n:e.unexpectedError=!0})}}]),angular.module("bitpay").controller("components.payments.ResolveException",["$scope","$rootScope","$state","userDataService","bitpayApiService","$stateParams",function(e,n,t,i,a,s){e.invoiceId=s.id,e.resolution={},a.request({facades:["merchantSupport","merchant"],method:"getInvoice",params:{invoiceId:s.id}}).then(function(n){e.invoice=n.data,e.isUnderpaid=e.invoice.underpaidAmount>0,e.isOverpaid=e.invoice.overpaidAmount>0,e.isThirtyDays=e.invoice.currentTime>=e.invoice.invoiceTime+2592e6,e.resolution.type=e.isUnderpaid&&!e.isThirtyDays?"acceptUnderpayment":e.isOverpaid?"refundOverpayment":"refundUnderpayment"},function(){e.alertUnexpected=!0}),e.next=function(){if(e.resolution.type)switch(e.resolution.type){case"acceptUnderpayment":t.go("menu.paymentConfirmAdjustment",{id:s.id});break;case"refundOverpayment":t.go("menu.paymentRefund",{id:s.id});break;case"refundUnderpayment":t.go("menu.paymentRefund",{id:s.id})}}}]),angular.module("bitpay").directive("bpPdPrice",["currenciesDataService",function(e){return{restrict:"E",scope:{satoshiPrice:"=",transactionCurrencyPrice:"=",invoicePrice:"=",rate:"=",currency:"=",transactionCurrency:"=",showOnlyTransactionCurrency:"=",showOnlyInvoiceCurrency:"=",floor:"="},link:function(n){n.resolvedCurrency=n.currency||n.transactionCurrency;var t=e.getMap().then(function(e){n.currencyCodeMap=e});n.$watchCollection("[satoshiPrice, transactionCurrencyPrice, invoicePrice, rate, currency, showOnlyTransactionCurrency, showOnlyInvoiceCurrency]",function(){(n.satoshiPrice||n.transactionCurrencyPrice||n.invoicePrice)&&(n.rate&&n.currency||n.showOnlyTransactionCurrency&&(n.satoshiPrice||n.transactionCurrencyPrice)||n.showOnlyInvoiceCurrency&&n.invoicePrice||n.invoicePrice&&(n.satoshiPrice||n.transactionCurrencyPrice))&&t.then(function(){n.resolvedCurrency=n.currency||n.transactionCurrency,n.transactionCurrencyDisplayPrice=n.satoshiPrice?n.satoshiPrice/1e8:n.transactionCurrencyPrice,n.invoiceDisplayPrice=n.invoicePrice,angular.isUndefined(n.transactionCurrencyDisplayPrice)&&!angular.isUndefined(n.invoicePrice)&&(n.transactionCurrencyDisplayPrice=n.invoicePrice/n.rate),!angular.isUndefined(n.transactionCurrencyDisplayPrice)&&angular.isUndefined(n.invoicePrice)&&(n.invoiceDisplayPrice=n.transactionCurrencyDisplayPrice*n.rate)})})},templateUrl:"components/payments/bp-pd-price.html"}}]),angular.module("bitpay").controller("components.payments.InsufficientBalanceHelpModal",["$scope","$timeout","analytics","bpIntercom",function(e,n,t,i){e.resolutionChoices={choice:"hold"},e.openIntercom=function(){var a;"transfer"===e.resolutionChoices.choice?(a="I'd like to initiate a bank transfer to my BitPay account, so that I can process refunds.",t.track("D - started transfer chat message")):"hold"===e.resolutionChoices.choice&&(a="I'd like to place a temporary hold on my payouts, so that I can process refunds.",t.track("D - started balance hold chat message")),i.startNewConversation(a),n(function(){e.modal.hide()},600)}}]),angular.module("bitpay").controller("PaymentButtonsCtrl",["$scope","bitpayApiService","currenciesDataService","$timeout","analytics",function(e,n,t,i,a){e.forms={},e.debounceDuration=500,e.interpolatedData={html:""},e.buttonData={size:"large",host:location.host},e.setButtonSize=function(n){e.buttonData.size=n},e.button={currency:"USD",itemDesc:"",price:1},e.numbersAndDecimalsOnly=/^[0-9]{1,7}(\.[0-9]+)?$/,t.getAllCurrencies().then(function(n){function t(e,n){return-1!==e.indexOf(n)}e.currencies=[];var i=["BTC","USD","EUR","GBP","JPY","CAD","AUD","CNY","CHF","SEK","NZD","KRW"];n.forEach(function(n){t(i,n.code)||e.currencies.push(n)})}),e.copy=function(){var n=document.querySelector("#copyContainer");i(function(){n.select(),document.execCommand("copy"),e.copied=!0,i(function(){e.copied=!1},1e3)})},e.getPaymentButtonData=function(t){n.request({facades:["merchantFinance","merchantIntegration","merchant"],method:"generatePaymentButtonData",params:e.button}).then(function(n){e.buttonData.encryptedData=n,t&&a.track("D - created payment button")})},e.formInputChanged=function(){var n=e.forms.buttonFieldsForm,t=e.forms.paymentNotificationsForm;n&&t&&(n.$invalid||t.$invalid)||e.getPaymentButtonData(!0)},e.getPaymentButtonData()}]),angular.module("bitpay").controller("components.settlements.Details",["$scope","bitpayApiService","$stateParams",function(e,n,t){function i(e){return"data:text/json;charset=utf-8,"+encodeURIComponent(JSON.stringify(e,null,4))}function a(e){return e.id+"_settlement_reconciliation_report.json"}n.request({facades:["merchantFinance","merchant"],method:"getSettlement",params:{settlementId:t.id}}).then(function(e){var t=e.data;return n.request({token:t.token,method:"getReconciliationReport"})}).then(function(n){e.reconciliationReport=n.data,e.dataUrl=i(e.reconciliationReport,null,4),e.filename=a(e.reconciliationReport)}).catch(function(n){e.serverError=n})}]),angular.module("bitpay").controller("components.settings.edit.Plan",["$state","$scope","userData",function(e,n,t){n.planId=t.planId,n.planId>1&&e.go("menu.overview")}]),angular.module("bitpay").controller("components.settings.edit.plan.Confirm",["$state","$scope","$rootScope","$window","bitpayApiService","settlementData","tierApplication","bpHistory","planUpgradeService",function(e,n,t,i,a,s,r,o,l){n.preUpgradeState=l.getPreUpgradeState(),n.needsUserChange=!1,a.request({facades:["orgAdmin","merchant"],method:"findOrgUsers"}).then(function(e){n.needsUserChange=e.length>1});var c=["BTC","USD","EUR"],d=[s.payoutCurrency]||Object.keys(s.payoutInfo)||[];100===s.bitcoinPercentage?n.needsSettlementChange=!1:(d=d.filter(function(e){return-1===c.indexOf(e)}),n.needsSettlementChange=d.length>=1),n.returnToPreUpgradeState=function(){l.returnToPreUpgradeState()},n.changePlan=function(e){a.request({facades:["orgAdmin","merchant"],method:"changePlan",params:{planId:e}}).then(function(e){n.planConfig=e,n.confirmSuccess=!0,n.refreshMenu()})}}]),angular.module("bitpay").controller("components.settings.edit.Profile",["$state","$scope","bitpayApiService","countriesDataService",function(e,n,t,i){i.getAllCountries().then(function(e){n.countries=e}),n.setCountryName=function(e,t){var a="countryName_"+t;delete n[a],i.findByAlpha2(e).then(function(e){e&&(n[a]=e.name)})},n.setCountryCode=function(e,t){n.profile.locations=n.profile.locations||{},n.profile.locations[t]=n.profile.locations[t]||{},delete n.profile.locations[t].addressCountry,i.findByName(e).then(function(e){e&&(n.profile.locations[t].addressCountry=e.shortCode)})},t.request({facades:["orgAdmin","merchantFinance","merchantIntegration","merchantSupport","merchant"],method:"getProfile"}).then(function(e){n.profile=e.profile,n.profile.preferredSupportChannel=e.profile.preferredSupportChannel||"email",n.profile.locations=n.profile.locations||{},n.profile.locations.hasRetail=!!e.profile.locations.retail,n.profile.locations.hasInvoice=!!e.profile.locations.invoice,n.profile.locations.retail=n.profile.locations.retail||{},n.profile.locations.invoice=n.profile.locations.invoice||{},n.profile.locations.merchant=n.profile.locations.merchant||{},n.setCountryName(n.profile.locations.retail.addressCountry,"retail"),n.setCountryName(n.profile.locations.invoice.addressCountry,"invoice")}),n.save=function(e){n.unexpectedError=!1,n.saveSucceeded=!1,e.$valid&&(n.submitting=!0,!n.profile.locations.hasRetail&&n.profile.locations.retail&&(n.profile.locations.retail={}),!n.profile.locations.hasInvoice&&n.profile.locations.invoice&&(n.profile.locations.invoice={}),n.profile.showAddressOnBill||(n.profile.locations.invoice={}),t.request({facades:["merchantIntegration","merchant"],method:"updateProfile",params:{profile:n.profile}}).then(function(){n.submitting=!1,n.saveSucceeded=!0},function(t){if(-32602===t.code)for(var i=Object.keys(t.data),a=0;a<i.length;a++){var s=i[a];e[s]&&(e[s].$setValidity("remote",!1),e[s].hasVisited=!0)}else n.unexpectedError=!0;n.submitting=!1,n.saveSucceeded=!1}))}}]),angular.module("bitpay").controller("components.settings.edit.Order",["$state","$scope","bitpayApiService","userData","$ionicScrollDelegate",function(e,n,t,i,a){n.user=i,t.request({facades:["merchantIntegration","merchant"],method:"getOrderSettings"}).then(function(e){n.orderSettings={transactionSpeed:e.orderSettings.transactionSpeed||"medium",orderEmailPreference:e.orderSettings.orderEmailPreference||(e.orderSettings.orderEmail?"specified":"primaryContacts"),orderEmail:e.orderSettings.orderEmail,refundPolicy:e.orderSettings.refundInBTC?"bitcoin":"invoice",delayNotifyZeroFeeTx:e.orderSettings.delayZeroFeeTransactions}}),n.save=function(e){n.unexpectedError=!1,n.saveSucceeded=!1,e.$valid&&(n.submitting=!0,t.request({facades:["merchantIntegration","merchant"],method:"updateOrderSettings",params:{orderSettings:{transactionSpeed:n.orderSettings.transactionSpeed,orderEmailPreference:n.orderSettings.orderEmailPreference,orderEmail:n.orderSettings.orderEmail,refundInBTC:"bitcoin"===n.orderSettings.refundPolicy,delayZeroFeeTransactions:n.orderSettings.delayNotifyZeroFeeTx}}}).then(function(){n.submitting=!1,n.saveSucceeded=!0,a.scrollTop()},function(){n.unexpectedError=!0,n.submitting=!1,n.saveSucceeded=!1,a.scrollTop()}))}}]),angular.module("bitpay").controller("components.settings.edit.Exceptions",["$scope","bitpayApiService","userData",function(e,n,t){e.es={},e.user=t,t.planId>2&&n.request({facades:["merchantIntegration","merchant"],method:"getExceptionSettings"}).then(function(n){e.es=(n||{}).data||{},e.es.overpaymentPercentage=e.es.overpaymentPercentage||.05,e.es.overpaymentPercentage*=100,e.es.underpaymentPercentage=e.es.underpaymentPercentage||.05,e.es.underpaymentPercentage*=100,e.es.underpaymentThreshold=e.es.underpaymentThreshold||.5,e.es.underpaymentThresholdValid=!0}),e.validateExceptionSettings=function(){var n=Number(e.es.underpaymentThreshold);"BTC"===e.es.underpaymentCurrency?(e.underpaymentThreshold="0.00001",e.es.underpaymentThresholdValid=n>=1e-5):(e.underpaymentThreshold="0.01",e.es.underpaymentThresholdValid=n>=.01)},e.exceptionSettingsValid=function(){return e.es.acceptUnderpayments?e.es.underpaymentThresholdValid:!0},e.save=function(i){e.unexpectedError=!1,e.saveSucceeded=!1,i.$valid&&e.exceptionSettingsValid()&&(e.es.acceptUnderpayments&&(e.es.underpaymentThreshold=Number("BTC"===e.es.underpaymentCurrency?e.es.underpaymentThreshold.toFixed(5):e.es.underpaymentThreshold.toFixed(2))),e.submitting=!0,t.planId>2&&n.request({facades:["merchantIntegration","merchant"],method:"updateExceptionSettings",params:{exceptionSettings:e.es}}).then(function(){e.submitting=!1,e.saveSucceeded=!0},function(){e.unexpectedError=!0,e.submitting=!1,e.saveSucceeded=!1}))}}]),angular.module("bitpay").controller("components.settings.edit.Currencies",["$scope","bitpayApiService","currenciesDataService",function(e,n,t){function i(){var n=Object.keys(e.supportedTransactionCurrencies),t={};return n.forEach(function(n){t[n]={enabled:e.supportedTransactionCurrencies[n].enabled}}),t}n.request({facades:["merchantFinance","merchantIntegration","merchantSupport","merchant"],method:"getSupportedTransactionCurrencies"}).then(function(n){t.getMap().then(function(t){e.currencyCodeMap=t,e.supportedTransactionCurrencies=n.data})}),e.save=function(){e.unexpectedError=!1,e.saveSucceeded=!1,e.submitting=!0,n.request({facades:["merchantFinance","merchantIntegration","merchantSupport","merchant"],method:"setSupportedTransactionCurrencies",params:{supportedTransactionCurrencies:i()}}).then(function(){e.submitting=!1,e.saveSucceeded=!0
},function(n){e.unexpectedError=n,e.submitting=!1,e.saveSucceeded=!1})}}]),angular.module("bitpay").controller("components.General",["$state","$scope","bitpayApiService","userData","currenciesDataService",function(e,n,t,i,a){switch(n.user=i,n.approvedVolume={tier:i.approvedTier},i.approvedTier){case 0:n.approvedVolume.daily="$100",n.approvedVolume.annual="$500";break;case 1:n.approvedVolume.daily="$1,000",n.approvedVolume.annual="$10,000";break;case 2:n.approvedVolume.daily="$10,000",n.approvedVolume.annual="$500,000";break;case 3:n.approvedVolume.daily="$100,000",n.approvedVolume.annual="$5,000,000";break;case 4:n.approvedVolume.daily="Unlimited",n.approvedVolume.annual="Unlimited";break;default:n.approvedVolume.daily="$0",n.approvedVolume.annual="$0"}n.handleOverpayments="Disabled",n.handleUnderpayments="Disabled",i.planId>2&&t.request({facades:["merchantFinance","merchantIntegration","merchantSupport","merchant"],method:"getExceptionSettings"}).then(function(e){((e||{}).data||{}).acceptOverpayments&&(n.handleOverpayments="Enabled"),((e||{}).data||{}).acceptUnderpayments&&(n.handleUnderpayments="Enabled")}),t.request({facades:["orgAdmin","merchantFinance","merchantIntegration","merchantSupport","merchant"],method:"getProfile"}).then(function(e){n.profile=e.profile}),t.request({facades:["merchantFinance","merchantIntegration","merchantSupport","merchant"],method:"getSupportedTransactionCurrencies"}).then(function(e){n.moreThanOneSupportedCurrency=Object.keys(e.data).length>1,a.getMap().then(function(t){n.currencyCodeMap=t,n.supportedTransactionCurrencies=e.data})}),t.request({facades:["orgAdmin","merchantFinance","merchantIntegration","merchantSupport","merchant"],method:"getPlan"}).then(function(e){switch(n.planConfig={},e.planId){case 3:n.planConfig.name="Business",n.planConfig.price="1% Settlement Fee";break;case 4:n.planConfig.name="Enterprise",n.planConfig.billingDate=e.nextPlanStartDate;break;default:n.planConfig.name="Starter",n.planConfig.price="30 Free Transactions / month"}}),t.request({facades:["orgAdmin","merchantFinance","merchantIntegration","merchantSupport","merchant"],method:"getOrderSettings"}).then(function(e){n.orderSettings={transactionSpeed:e.orderSettings.transactionSpeed||"medium",refundPolicy:e.orderSettings.refundInBTC?"bitcoin":"invoice",delayZeroFeeTransactions:e.orderSettings.delayZeroFeeTransactions},!e.orderSettings.orderEmailPreference&&e.orderSettings.orderEmail||"specified"===e.orderSettings.orderEmailPreference?n.orderSettings.notificationEmail=e.orderSettings.orderEmail:e.orderSettings.orderEmailPreference&&e.orderSettings.orderEmail&&"primaryContacts"!==e.orderSettings.orderEmailPreference||(n.orderSettings.notificationEmail=n.user.email)})}]),angular.module("bitpay").controller("UserListCtrl",["$scope","$location","$state","bitpayApiService",function(e,n,t,i){var a=n.search();a.message&&a.type&&(e.alert={type:a.type,message:a.message},n.url(n.path())),e.load=function(n){e.limit=1e3,e.offset=0,e.filter=n;var t=angular.extend({},n,{limit:e.limit,offset:e.offset});i.request({facade:"orgAdmin",method:"findOrgUsers",params:t}).then(function(n){e.users=n},function(n){e.alert={type:"error",message:n}})},e.load()}]),angular.module("bitpay").controller("UserCtrl",["$scope","$stateParams","bitpayApiService","userData","$ionicModal",function(e,n,t,i,a){e.email={text:""},e.invitation={name:""},e.formSubmitted=!1,e.userId=n.id,e.user={facades:{}},e.editingSelf=e.userId===i.userEid,a.fromTemplateUrl("components/users/confirm-remove-modal.html",{scope:e,animation:"slide-in-up"}).then(function(n){e.modal=n});var s=function(){return t.request({facade:"orgAdmin",method:"findOrgUser",params:{id:n.id}}).then(function(n){e.email.text=n.email,e.invitation.name=n.name,n.facades.forEach(function(t){e.user.facades[t]=-1!==n.facades.indexOf(t)})},function(n){e.alert={type:"error",message:n}})},r=function(){var n=[];for(var t in e.user.facades)e.user.facades[t]===!0&&n.push(t);return n},o=function(n){var i={facades:r(),id:e.userId};t.request({facade:"orgAdmin",method:"updateUserFacades",params:i}).then(function(){window.location.href="/dashboard/settings/users?type=success&message="+window.encodeURIComponent(n)},function(n){e.alert={type:"error",message:n}})},l=function(){var n={email:e.email.text,fullName:e.invitation.name,facades:r()};return t.request({facade:"orgAdmin",method:"inviteUserToOrg",params:n}).then(function(n){e.userId=n.id,o("Invitation email sent!")},function(n){e.alert={type:"error",message:n}})};e.facadeCount=function(){return r().length},e.handleSubmit=function(n){return e.formSubmitted=!0,n.$valid&&0!==e.facadeCount()?void(e.userId?o("User successfully updated"):l()):!1},e.removeUser=function(){e.modal.show()},e.cancelRemoveUser=function(n){n.preventDefault(),e.modal.hide()},e.confirmRemoveUser=function(){return e.modal.hide(),t.request({facade:"orgAdmin",method:"removeUser",params:{id:e.userId}}).then(function(){window.location.href="/dashboard/settings/users?type=success&message=Removed%20User"},function(n){e.alert={type:"error",message:n}})},e.load=function(){e.userId&&s()},e.load(),e.onAdminChanged=function(){e.user.facades.orgAdmin&&(e.user.facades.merchantFinance=e.user.facades.merchantIntegration=e.user.facades.merchantSupport=!0)}}]),angular.module("bitpay").controller("components.user-settings.edit.BasicInfo",["$scope","bitpayApiService",function(e,n){function t(){delete e.unexpectedError,delete e.saveSucceeded,delete e.submitting}n.request({facade:"user",method:"getUser"}).then(function(n){e.user=n.data}),e.updateBasicInfo=function(i){if(i.$invalid)return void t();e.submitting=!0;var a={givenName:e.user.givenName,familyName:e.user.familyName,phone:e.user.phone};n.request({token:e.user.token,method:"update",params:a}).then(function(n){t(),e.saveSucceeded=!0,e.user=n.data,e.$parent.$parent.user.userFullName=e.user.givenName+" "+e.user.familyName},function(){t(),e.unexpectedError=!0})}}]),angular.module("bitpay").controller("components.UserSettings",["$scope","bitpayApiService","stateMessengerService","$state",function(e,n,t,i){e.alertMessage=t.dequeueStateMessage(i.current.name),n.request({facade:"user",method:"getSecuritySettings"}).then(function(n){e.securitySettings=n}),n.request({facade:"user",method:"getUser"}).then(function(n){e.user=n.data})}]),angular.module("bitpay").controller("components.user-settings.edit.Security",["$scope","bitpayApiService",function(e,n){function t(){delete e.unexpectedError,delete e.saveSucceeded,delete e.invalidCode,delete e.submitting,delete e.generatingCodes,delete e.rateLimited}e.codeRequired=!0,n.request({facade:"user",method:"getSecuritySettings"}).then(function(n){e.securitySettings=n}),e.toggleTwoFactorAuthEnabled=function(){return e.codeRequired=!0,e.securitySettings.code?(e.submitting=!0,void n.request({facade:"user",method:"toggleTwoFactorAuthEnabled",params:{code:e.securitySettings.code}}).then(function(n){t(),n.codes&&(e.newBackupCodes=n.codes.map(e.formatCode)),e.codeRequired=!1,e.saveSucceeded=!0,e.securitySettings=n},function(n){t(),e.codeRequired=!0,"invalid code"===n?e.invalidCode=!0:-1!==n.indexOf("rate")?e.rateLimited=!0:e.unexpectedError=!0})):void t()},e.generateBackupCodes=function(){return e.generateCodeRequired=!0,e.securitySettings.generateCode?(e.generatingCodes=!0,void n.request({facade:"user",method:"generateBackupCodes",params:{code:e.securitySettings.generateCode}}).then(function(n){t(),e.securitySettings.generateCode="",e.newBackupCodes=n.data.codes.map(e.formatCode)},function(n){t(),e.generateCodeRequired=!0,"Invalid two-factor code"===n?e.invalidCode=!0:e.unexpectedError=!0})):void t()},e.formatCode=function(e){return e.match(/.{1,4}/g).join("-")},e.downloadCodes=function(){var n=document.getElementById("filePlaceholder"),t=new Blob([e.newBackupCodes.join("\n")],{type:"text/plain"});n.href=URL.createObjectURL(t),n.download="backupcodes.txt",n.dispatchEvent(new MouseEvent("click"))}}]),angular.module("bitpay").factory("SegmentIO",["$http","$q","base64","$window",function(e,n,t,i){function a(){var a=this,o={Authorization:"Basic "+t.encode(i.sessionInfo.segmentApiKey+":")},l=n.defer();window.sessionInfo.isAuthenticated||(this.anonymousId=s(),l.promise=e.post(r+"/v1/identify",{anonymousId:a.anonymousId,integrations:{All:!1}},{headers:o})),this.track=function(n){return e.post(r+"/v1/track",{userId:a.userId,anonymousId:a.anonymousId,event:n,integrations:{All:!1}},{headers:o})},this.identify=function(n){return a.userId=n,e.post(r+"/v1/identify",{userId:n,anonymousId:a.anonymousId,integrations:{All:!1}},{headers:o}).then(function(e){return l.resolve(),e})},this.page=function(n){return e.post(r+"/v1/page",{userId:a.userId,anonymousId:a.anonymousId,integrations:{All:!1},name:document.title,properties:n},{headers:o})}}function s(e){return e?(e^16*Math.random()>>e/4).toString(16):([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,s)}var r=i.sessionInfo.segmentApiUrlPrefix||r+"";return a}]),angular.module("bitpay").factory("analytics",["$rootScope","$location","$q","$window","SegmentIO",function(e,n,t,i,a){function s(){function e(e){p.userId=e.userEid;var n=o.promise.then(function(){i.Intercom("boot",{app_id:window.sessionInfo.intercomAppId,email:e.email,user_id:p.userId,user_hash:e.intercomSecureHash})}),a=m.then(function(){d("create",c,"auto",{userId:p.userId})}),s=u.identify(p.userId);t.all([s,n,a]).then(function(){b.resolve()})}function s(){function e(e){var n=e,t=e.indexOf("/payments/");return t>-1&&(n=e.substring(0,t)+"/payments/{id}"),n}m.then(function(){var t;if(p.location!==n.path()){if(p.location=n.path(),n.search().resetKey||n.search().resetkey)return;t={path:e(i.location.pathname),referrer:e(i.document.referrer),search:i.location.search,title:i.document.title,url:e(i.location.href)},u.page(t),d("send","pageview",t.path)}})}function r(e){b.promise.then(function(){i.Intercom("trackEvent",e),d("send","event","Dashboard",e),u.track(e)})}var d,p={userId:null},u=new a,m=l.promise.then(function(){d=i.ga,d("create",c,"auto"),p.page()}),b=t.defer();return p.identify=e,p.page=s,p.track=r,p}function r(){var e=s();p.forEach(function(n){d[n]=function(){e[n].apply(e,arguments)}})}var o=t.defer(),l=t.defer(),c=window.sessionInfo.googleAnalyticsTrackingId,d={},p=["identify","page","track"];return d.reset=r,e.$on("$ionicView.afterEnter",function(){if(!e.analyticsSafeToLoad){if(n.search().resetKey||n.search().resetkey)return;e.analyticsSafeToLoad=!0}d.page()}),e.bootstrapAnalyticsIntercom=function(){o.resolve()},e.bootstrapAnalyticsGA=function(){l.resolve()},r(),d}]),angular.module("bitpay").factory("dashboardApiService",["$http","bpApiConfig",function(e,n){var t=function(t,i,a){var s={method:t,url:n.server+"/dashboard-api/"+i};return"get"===t.toLowerCase()?s.params=a:s.data=a,e(s)};return{request:t}}]),angular.module("bitpay").factory("sessionManager",["$rootScope",function(e){function n(){t.sessionData={}}var t=e.$new();n();var i=sessionStorage.getItem("sessionData");if(i)try{t.sessionData=JSON.parse(i)}catch(a){}return t.$watch("sessionData",function(e){var n=angular.toJson(e);sessionStorage.setItem("sessionData",n)},!0),t.close=function(){sessionStorage.removeItem("sessionData"),n()},t}]),angular.module("bitpay").factory("evaluateMeter",function(){return function(e){e=e||"";var n,t,i,a,s=0;return e.match(/[a-z]/)&&(s++,n=!0),e.match(/\d+/)&&(s++,t=!0),e.match(/[A-Z]/)&&(s++,i=!0),e.length>=8&&(s++,a=!0),{passwordStrength:s,passwordLowercase:n,passwordNumerals:t,passwordUppercase:i,passwordCharacters:a,passwordIsStrong:s>3}}}),angular.module("bitpay").factory("referralTracker",["$rootScope","$location","$log",function(e,n,t){function i(){l.ids={urlAid:null,cookieAid:null,flashAid:null},l.swfStore||(l.swfStore=new window.SwfStore({namespace:"bitpay",swf_url:"https://bitpay.com/downloads/storage.swf",onerror:function(){t.warn("FLASH Failed to load.")},onready:function(){l.flashReady=!0,l.ids.urlAid?a(l.ids.urlAid):l.ids.cookieAid&&a(l.ids.cookieAid),l.ids.flashAid=l.swfStore.get("affiliateId")}})),l.setUrlAid=function(e){l.ids.urlAid||(l.ids.urlAid=e,s(e),a(e),n.url(n.path()))},l.ids.cookieAid=r("bp-referral-code"),l.getAffiliateId=function(){return l.ids.flashAid||l.ids.cookieAid||l.ids.urlAid}}function a(e){l.flashReady&&!l.swfStore.get("affiliateId")&&l.swfStore.set("affiliateId",e)}function s(e){r("bp-referral-code")||(l.ids.cookieAid=e,o("bp-referral-code",e,9999))}function r(e){e+="=";for(var n=document.cookie.split(/;\s*/),t=n.length-1;t>=0;t--)if(!n[t].indexOf(e))return n[t].replace(e,"")}function o(e,n,t){var i="";if(t){var a=new Date;a.setTime(a.getTime()+24*t*60*60*1e3),i="; expires="+a.toGMTString()}document.cookie=e+"="+n+i+"; path=/"}var l=e.$new();return i(),l}]),angular.module("bitpay").factory("userDataService",["$rootScope","$q","$http","referralTracker","dashboardApiService","analytics","bitpayApiService","$window","passwordService",function(e,n,t,i,a,s,r,o,l){function c(e){return e.data&&e.data.accessTypes&&-1!==e.data.accessTypes.indexOf("merchant")}function d(e){return e.data&&e.data.accessTypes&&-1!==e.data.accessTypes.indexOf("visaCard")}function p(e,n){c(e)?(o.sessionInfo.isAuthenticated=!0,localStorage.setItem("ret_mr","true"),d(e)&&(o.sessionInfo.hasDebitCard=!0,localStorage.setItem("ret_mr","true")),r.initialize().then(function(){n()})):window.location.href="/card/dashboard"}var u=function(e,n){l.hashPassword(e.password,function(t){e.hashedPassword=t,l.generateSalt(function(t){e.salt=t,delete e.password,n()})})};return{create:function(e){var t={email:e.email,password:e.password,name:e.orgName,givenName:e.givenName,familyName:e.familyName,affiliateOid:i.getAffiliateId(),agreedToTOSandPP:e.tosAgree,gCaptchaResponse:e.gCaptchaResponse},a=n.defer();return u(t,function(){var e={facade:"public",method:"createSession"},n={facade:"public",method:"createAccount",params:t};r.uninitialize(),r.request(e).then(function(e){t.sessionId=e.data,r.request(n).then(function(e){window.sessionInfo.account={id:e.data.id,numericId:e.data.numericId,merchantName:e.data.name},r.initialize().then(function(){window.sessionInfo.isAuthenticated=!0,a.resolve()},function(e){a.reject({data:{message:e}})})},function(e){a.reject({data:{message:e}})})},function(){a.reject({data:{message:"Try again later"}})})}),a.promise},onboardUser:function(e){var t={email:e.email,password:e.password,organizationName:e.orgName,givenName:e.givenName,familyName:e.familyName,userEid:e.userEid,accountEid:e.accountEid,tosAgree:e.tosAgree},i=n.defer();return u(t,function(){var e="onboard-user";a.request("POST",e,t).then(function(){window.sessionInfo.isAuthenticated=!0,r.initialize().then(function(){i.resolve()})},function(e){i.reject(e)})}),i.promise},verifyEmail:function(e){return a.request("POST","verify-email-address",{code:e,reverify:!1})},processSettlementSettingsChanges:function(e,n){return r.request({facades:["merchantFinance"],method:"processSettlementSettingsChanges",params:{code:e,action:n}})},getSettlementSettingsChanges:function(e){return r.request({facades:["merchantFinance"],method:"getSettlementSettingsChanges",params:{code:e}})},authenticate:function(e){var t=n.defer();return l.hashPassword(e.password,function(n){var i={email:e.email,hashedPassword:n};e.twoFactorCode&&(i.twoFactorCode=e.twoFactorCode),a.request("POST","authenticate",i).then(function(e){e?p(e,function(){t.resolve(e)}):t.reject("oldDashboard")},function(e){e&&e.data&&e.data.twoFactorPending?(o.sessionInfo.twoFactorPending=!0,t.resolve({data:{twoFactorPending:!0}})):t.reject(e)})}),t.promise},verifyTwoFactorCode:function(e){var t=n.defer();return a.request("POST","verify-two-factor-code",{twoFactorCode:e}).then(function(e){e?p(e,function(){t.resolve(e)}):t.reject("oldDashboard")},function(e){t.reject(e)}),t.promise},changePassword:function(e){return a.request("POST","change-password",e)},verifyEmailGetUserId:function(e,n){return a.request("POST","verify-email-get-userid",{code:e,orgId:n,reverify:!0})},getUserById:function(e,n){return a.request("GET","get-user-by-id",{userId:e,orgId:n})},getUser:function(){var e=a.request("GET","get-account");return o.isIntercomLoaded||(o.isIntercomLoaded=!0,e=e.then(function(e){var n=e.data;return s.identify(n),e},function(e){return e})),e},logout:function(){return r.uninitialize(),a.request("GET","deauthenticate").then(function(e){return a.request("GET","session-info").then(function(n){return o.sessionInfo=n.data,o.sessionStorage.clear(),e})})},getSettlementSettings:function(){return r.request({facades:["merchantFinance"],method:"getSettlementSettings"})},putSettlementSettings:function(e){return r.request({facades:["merchantFinance"],method:"putSettlementSettings",params:e})},updateTier0VerificationData:function(e){return a.request("POST","tier-0-verification",e)},updateTier1VerificationData:function(e){return a.request("POST","tier-1-verification",e)},updateAppliedTier:function(e){return r.request({facades:["orgAdmin","merchant"],method:"getTierUpgradeLink",params:e})},updateEmailAddress:function(e){return r.request({facade:"user",method:"updateEmail",params:e})},removeUnauthorizedAccount:function(e){return a.request("POST","remove-unauthorized-account",{code:e})},switchOrg:function(e){return r.switchOrg(e),a.request("POST","switch-org",{numericId:e})},onboardingChecklistComplete:function(e){return e.verified&&e.payoutInfo&&(!e.appliedTier||e.appliedTier>-1)}}}]),angular.module("bitpay").factory("currencyCodeService",["$rootScope","$q","$http","sessionManager","dashboardApiService",function(){var e={"United States":"USD",Australia:"AUD",Austria:"EUR",Andorra:"EUR",Belgium:"EUR",Bulgaria:"EUR",Croatia:"EUR",Cyprus:"EUR","Czech Republic":"EUR",Denmark:"EUR",Estonia:"EUR",Finland:"EUR",France:"EUR",Germany:"EUR",Gibraltar:"GBP",Greece:"EUR",Hungary:"EUR",Ireland:"EUR",Italy:"EUR",Latvia:"EUR",Liechtenstein:"EUR",Lithuania:"EUR",Luxembourg:"EUR",Malta:"EUR",Monaco:"EUR",Montenegro:"EUR",Netherlands:"EUR",Norway:"EUR",Poland:"EUR",Portugal:"EUR",Romania:"EUR","San Marino":"EUR",Slovakia:"EUR",Slovenia:"EUR",Spain:"EUR",Sweden:"EUR",Switzerland:"EUR",Vatican:"EUR","United Kingdom":["EUR","GBP"],Mexico:"MXN","New Zealand":"NZD","South Africa":"ZAR"};return{getCountryCurrencyCode:function(n){return e[n]},getFieldsForCurrency:function(e){var n;switch(e){case"USD":n={name:!0,routing:!0,account:!0,merchantEIN:!0,isNonProfit:!0};break;case"CAD":n={name:!0,bank:!0,swiftCAD:!0,account:!0,dob:!0};break;case"EUR":n={name:!0,bank:!0,swift:!0,iban:!0};break;case"AUD":n={name:!0,bank:!0,swift:!0,address:!0,city:!0,postal:!0,account:!0,bsb:!0};break;case"GBP":n={name:!0,bank:!0,address:!0,city:!0,postal:!0,swift:!0,sort:!0,iban:!0};break;case"MXN":n={name:!0,bank:!0,swift:!0,address:!0,city:!0,postal:!0,clabe:!0};break;case"NZD":n={name:!0,bank:!0,swift:!0,address:!0,city:!0,postal:!0,bsb:!0,account:!0};break;case"ZAR":n={name:!0,bank:!0,account:!0,swift:!0,address:!0,city:!0,postal:!0};break;case"BRL":n={mercado:!0};break;default:n={}}return n}}}]),angular.module("bitpay").factory("countriesDataService",["$q","bitpayApiService",function(e,n){function t(){var t=e.defer();return i?t.resolve(i):n.request({facade:"public",method:"getCountries"}).then(function(e){i=e.data,t.resolve(e.data)}),t.promise}var i,a={"Åland Islands":!0,Bahamas:!0,"British Indian Ocean Territory":!0,"Cayman Islands":!0,"Central African Republic":!0,"Cocos (Keeling) Islands":!0,"Cook Islands":!0,"Czech Republic":!0,"Dominican Republic":!0,"Falkland Islands (Malvinas)":!0,"Faroe Islands":!0,"French Southern Territories":!0,"Heard Island and McDonald Islands":!0,"Holy See (Vatican City State)":!0,"Isle of Man":!0,"Marshall Islands":!0,Netherlands:!0,"Northern Mariana Islands":!0,"Palestinian Territory, Occupied":!0,Philippines:!0,"Russian Federation":!0,"Solomon Islands":!0,"Syrian Arab Republic":!0,"Turks and Caicos Islands":!0,"United Arab Emirates":!0,"United Kingdom":!0,"United States":!0,"United States Minor Outlying Islands":!0,"Virgin Islands, British":!0,"Virgin Islands, U.S.":!0},s=[{name:"Alabama",abbreviation:"AL"},{name:"Alaska",abbreviation:"AK"},{name:"Arizona",abbreviation:"AZ"},{name:"Arkansas",abbreviation:"AR"},{name:"California",abbreviation:"CA"},{name:"Colorado",abbreviation:"CO"},{name:"Connecticut",abbreviation:"CT"},{name:"Delaware",abbreviation:"DE"},{name:"District Of Columbia",abbreviation:"DC"},{name:"Florida",abbreviation:"FL"},{name:"Georgia",abbreviation:"GA"},{name:"Hawaii",abbreviation:"HI"},{name:"Idaho",abbreviation:"ID"},{name:"Illinois",abbreviation:"IL"},{name:"Indiana",abbreviation:"IN"},{name:"Iowa",abbreviation:"IA"},{name:"Kansas",abbreviation:"KS"},{name:"Kentucky",abbreviation:"KY"},{name:"Louisiana",abbreviation:"LA"},{name:"Maine",abbreviation:"ME"},{name:"Maryland",abbreviation:"MD"},{name:"Massachusetts",abbreviation:"MA"},{name:"Michigan",abbreviation:"MI"},{name:"Minnesota",abbreviation:"MN"},{name:"Mississippi",abbreviation:"MS"},{name:"Missouri",abbreviation:"MO"},{name:"Montana",abbreviation:"MT"},{name:"Nebraska",abbreviation:"NE"},{name:"Nevada",abbreviation:"NV"},{name:"New Hampshire",abbreviation:"NH"},{name:"New Jersey",abbreviation:"NJ"},{name:"New Mexico",abbreviation:"NM"},{name:"New York",abbreviation:"NY"},{name:"North Carolina",abbreviation:"NC"},{name:"North Dakota",abbreviation:"ND"},{name:"Ohio",abbreviation:"OH"},{name:"Oklahoma",abbreviation:"OK"},{name:"Oregon",abbreviation:"OR"},{name:"Pennsylvania",abbreviation:"PA"},{name:"Rhode Island",abbreviation:"RI"},{name:"South Carolina",abbreviation:"SC"},{name:"South Dakota",abbreviation:"SD"},{name:"Tennessee",abbreviation:"TN"},{name:"Texas",abbreviation:"TX"},{name:"Utah",abbreviation:"UT"},{name:"Vermont",abbreviation:"VT"},{name:"Virginia",abbreviation:"VA"},{name:"Washington",abbreviation:"WA"},{name:"West Virginia",abbreviation:"WV"},{name:"Wisconsin",abbreviation:"WI"},{name:"Wyoming",abbreviation:"WY"}];return{getAllCountries:function(){return t()},findByName:function(e){return t().then(function(n){for(var t=0;t<n.length;t++)if(n[t].name===e)return n[t];return null})},findByAlpha2:function(e){return t().then(function(n){for(var t=0;t<n.length;t++)if(n[t].shortCode===e)return n[t];return null})},isDefiniteArticleRequired:function(e){return a[e]},getUsStates:function(){return s}}}]),angular.module("bitpay").factory("industriesDataService",["$q","bitpayApiService",function(e,n){function t(){var t=e.defer();return i?t.resolve(i):n.request({facade:"public",method:"getIndustries"}).then(function(e){i=e.data,t.resolve(e.data)}),t.promise}var i;return{getAllIndustries:function(){return t()},findByName:function(e){return t().then(function(n){for(var t=0;t<n.length;t++)if(n[t].name===e)return n[t];return null})}}}]),angular.module("bitpay").factory("currenciesDataService",["bitpayApiService","$q",function(e,n){function t(){var t=n.defer();return i?(t.resolve(i),t.promise):e.request({facade:"public",method:"getCurrencies"}).then(function(e){return i=e.data,e.data})}var i;return{getAllCurrencies:function(){return t()},findByCode:function(e){return t().then(function(n){for(var t=0;t<n.length;t++)if(n[t].code===e)return n[t];return null})},getMap:function(){return t().then(function(e){for(var n={},t=0;t<e.length;t++)n[e[t].code]=e[t];return n})}}}]),angular.module("bitpay").factory("settlementDataService",["$q","bitpayApiService","currenciesDataService","settlementDateService",function(e,n,t,i){function a(e,i){n.request({facades:["orgAdmin","merchantFinance","merchantSupport","merchantIntegration","merchant"],method:"getBalances"}).then(function(n){d=n.data||{};var a=Object.keys(d);t.getMap().then(function(n){if(0===a.length){var t=n[e.payoutCurrency];d[e.payoutCurrency]={amount:0,name:t.name,precision:t.precision,symbol:t.symbol};var s=n.BTC;d.BTC={amount:0,name:s.name,precision:s.precision,symbol:s.symbol},a=Object.keys(d)}a.forEach(function(t){var i=n[t],a=e.settlementMinimum,s=a||i.settlementMinimum;d[t].settlementMinimum=s,"BTC"===t&&(d[t].symbol="",d[t].settlementMinimum=i.settlementMinimum)});var l=r(d,e),c=o(d,e),p={all:d,active:l,inactive:c};i(p)})})}function s(e,n,t){c(n,function(a){var s=Object.keys(e);s.forEach(function(t){var s;a[t]&&(s=l(t,a[t])),e[t].nextSettlementDate=i.determineNextSettlementDate(n.planId,t,s)}),t(e)})}function r(e,n){var t={};return angular.forEach(e,function(e,i){return"BTC"===i&&n.bitcoinPercentage>0?void(t[i]=e):i===n.payoutCurrency&&n.bitcoinPercentage<100?void(t[i]=e):void 0}),t}function o(e,n){var t={};return angular.forEach(e,function(e,i){"BTC"===i&&n.bitcoinPercentage>0||i===n.payoutCurrency&&n.bitcoinPercentage<100||(t[i]=e)}),angular.equals({},t)?null:t}function l(e,n){var t;t="BTC"===e?"Account payout":"EFT Sweep";for(var i=!1,a=0;a<n.length;a++){var s=n[a];if(s.description&&-1!==s.description.indexOf(t)){i=!0;break}}return i}function c(t,a){var s=i.getDayStart(),r=i.getDayEnd(),o=[],l=n.request({facades:["merchantFinance","merchantSupport","merchantIntegration","merchant"],method:"getLedgerEntries",params:{currency:t.payoutCurrency,startDate:s,endDate:r}}),c=n.request({facades:["merchantFinance","merchantSupport","merchantIntegration","merchant"],method:"getLedgerEntries",params:{currency:"BTC",startDate:s,endDate:r}}),d=[];t.bitcoinPercentage<100&&(o.push(l),d.push(t.payoutCurrency)),t.bitcoinPercentage>0&&(o.push(c),d.push("BTC")),e.all(o).then(function(e){var n={};d[0]===t.payoutCurrency?n[t.payoutCurrency]=e[0]:n.BTC=e[0],e[1]&&(n.BTC=e[1]),a(n)})}var d;return{getBalances:a,getNextSettlementDateForEachBalance:s}}]),angular.module("bitpay").factory("settlementDateService",["$q","bitpayApiService","currenciesDataService",function(){function e(e,l,c){var d=new Date;return"BTC"===l?c||t()?a():d:1===e?!i(d)||c||n()?s():d:!o()||c||n()?r():d}function n(){var e=20,n=new Date,t=n.getUTCHours();return t>=e?!0:!1}function t(){var e=14,n=new Date,t=n.getUTCHours();return t>=e?!0:!1}function i(e){return 3===e.getDay()}function a(){var e=new Date,n=new Date(e.getTime()+864e5);return n}function s(){var e,n=new Date;if(i(n)){var t=6048e5;return e=new Date(n.getTime()+t)}return e=n,e.setDate(e.getDate()+(3+(7-e.getDay()))%7),e}function r(){var e=new Date,n=e.getDay(),t=1;if(n>4){var i=7-n;t+=i}var a=864e5*t,s=new Date(e.getTime()+a);return s}function o(){var e=new Date;return e.getDay()>0&&e.getDay()<6?!0:!1}function l(){var e=new Date;return e.setHours(0,0,0,0),e}function c(){var e=new Date;return e.setHours(23,59,59,999),e}return{determineNextSettlementDate:e,getDayStart:l,getDayEnd:c,getTomorrow:a}}]),angular.module("bitpay").factory("billService",["$q","bitpayApiService","currenciesDataService","settlementDateService",function(e,n,t,i){function a(e){var n=/^[\d\*]+ /,t=/^[0-9 *\/]+$/;return n.test(e)&&t.test(e)?!1:!0}function s(e){return null!==r(e)||a(e)}function r(e){for(var n=0;n<z.length;++n)if(z[n].patternId===e)return z[n];return null}function o(e,n){return(e||n)&&!(e&&n)}function l(e){if(""===e||null===e||"undefined"==typeof e||!new RegExp("^[0-9 */]+$").test(e))return H;for(var n=[],t=0;t<z.length;t++)z[t].patternCron&&n.push({key:z[t].patternId,values:z[t].patternCron.split(" "),match:!0});for(var i=H,a=e.split(" "),s=0;s<n.length;++s){for(var r=n[s].values,l=0;l<r.length;++l){var c=r[l],d=a[l];if(o(/[\*]/.test(c),/[\*]/.test(d))||o(/[\,]/.test(c),/[\,]/.test(d))||o(/[\/]/.test(c),/[\/]/.test(d))){n[s].match=!1;break}}if(n[s].match){i=n[s].key;break}}return i}function c(e){for(var n=0,t=0;t<e.length;t++){var i=e[t];n+=i.price*i.quantity}return n}function d(e){return new Date(e?e:"Jan 25, 2014")}function p(e){var n=angular.copy(e);return n.price=c(e.items),n.createdDate=new Date(e.createdDate),n.sortDate=d(e.createdDate),n}function u(e){var n=e.billData,t=l(e.schedule),i=new Date(e.billData.dueDate),a=angular.extend(e,n);return a.price=c(n.items),a.dueDate=i,a.sortDate=d(e.createdDate),a.createdDate=new Date(e.createdDate),a.isSubscription=!0,a.pattern=t,a.isRepeating=s(t),a}function m(){return n.findTokenByFacade(["merchantFinance","merchantSupport","merchantIntegration","merchant"])}function b(t){var i=e.defer();return m().then(function(e){n.request({token:e,method:"getBills",params:t}).then(function(e){i.resolve(e)})}),i.promise}function v(e){return e.schedule}function g(e,n){var t=new Date(e.createdDate),i=new Date(n.createdDate);return i>t?e:n}function f(e,n){return e>n?e:n}function h(e,n){var t,i,a,s=[];return e.length&&(t=e.reduce(g),s.push(new Date(t.createdDate))),n.length&&(i=n.reduce(g),s.push(new Date(i.createdDate))),s.length&&(a=s.reduce(f)),a}function _(){function n(e){var n=[],t=[];e[0]&&(n=e[0].data),e[1]&&(t=e[1].data);var i=n.concat(t);return i}function t(){var t=30,r=e.defer(),o=b({archived:{$exists:!1},sort:{_id:"descending"},offset:a}),l=y({status:{$in:["draft","active"]},sort:{_id:"descending"},offset:s}),c=[o,l];return e.all(c).then(function(e){var o=n(e),l=o.filter(function(e){return!v(e)}),c=o.filter(function(e){return v(e)}),d=h(l,c),m=l,b=c;d?(m=l.filter(function(e){return new Date(e.createdDate)>=d}),b=c.filter(function(e){return new Date(e.createdDate)>=d}),0===l.length&&c.length<t&&(i=!0),0===c.length&&l.length<t&&(i=!0)):i=!0,a+=m.length,s+=b.length;var g=m.map(function(e){return p(e)}),f=b.map(function(e){return u(e)}),_=g.concat(f);r.resolve(_)}),r.promise}var i=!1,a=0,s=0;return{loadBatch:function(n){var i=e.defer();return t(n).then(function(e){i.resolve(e)}),i.promise},areAnyBillsLeftToLoad:function(){return!i}}}function y(t){var i=e.defer();return m().then(function(e){n.request({token:e,method:"getSubscriptions",params:t}).then(function(e){i.resolve(e)})}),i.promise}function w(e){var n={name:e.name,address1:e.address1,city:e.city,state:e.state,zip:e.zip,country:e.country,email:e.email};return n}function C(e){var n={number:e.number,currency:e.currency,dueDate:e.dueDate,schedule:e.pattern,pattern:e.pattern,nextDelivery:e.nextDelivery,status:e.status,items:angular.copy(e.items)};return n}function k(e,n){for(var t in n)e[t]=n[t]}function S(e){var n=new Date(e);return n.getFullYear()<1970&&n.setFullYear(n.getFullYear()+100),n}function x(e){var n={number:e.number,currency:e.currency,dueDate:S(e.dueDate),name:e.name,address1:e.address1,city:e.city,state:e.state,zip:e.zip,country:e.country,email:e.email,cc:e.cc,items:e.items};return n}function I(e){var n={billData:x(e),schedule:e.pattern,nextDelivery:S(e.nextDelivery),status:e.status};return n}function A(e){var n;return n="subscriptions"===e.resource?I(e):x(e)}function D(e){return n.request({token:e.token,method:"update",params:A(e)})}function P(e){return n.request({token:e.token,method:"update",params:I(e)})}function F(e){return n.request({token:e.token,method:"sendBill"})}function B(t){var i=e.defer();return m().then(function(e){n.request({token:e,method:"createBill",params:t}).then(function(e){i.resolve(e)},function(e){i.reject(e)})}),i.promise}function $(t){var i=e.defer();return m().then(function(e){n.request({token:e,method:"createSubscription",params:I(t)}).then(function(e){i.resolve(e)},function(e){i.reject(e)})}),i.promise}function T(t){var i=e.defer();return m().then(function(e){n.request({token:e,method:"getBillById",params:{billId:t}}).then(function(e){i.resolve(e)},function(e){i.reject(e)})}),i.promise}function R(t){var i=e.defer();return m().then(function(e){n.request({token:e,method:"getSubscriptionById",params:{subscriptionId:t}}).then(function(e){i.resolve(e)},function(e){i.reject(e)})}),i.promise}function E(n){var t=e.defer(),i=!1,a=!1;return T(n).then(function(e){var n=p(e.data);t.resolve(n)},function(e){a&&t.reject(e),i=!0}),R(n).then(function(e){var n=u(e.data);t.resolve(n)},function(e){i&&t.reject(e),a=!0}),t.promise}function q(e){return n.request({token:e.token,method:"cancel"})}function U(e){return n.request({token:e.token,method:"activate"})}function N(e){return n.request({token:e.token,method:"delete"})}function M(e){var n=i.getDayStart(new Date),t=S(e.nextDelivery);if(n>t){e.nextDelivery=n;var a=S(e.dueDate);n>a&&(e.dueDate=n)}return e}function O(e){return V=angular.copy(e),V.isRepeating&&(V=M(V)),delete V.id,delete V.status,V
}function L(e){var n=O(e);return n.isRepeating?$(n):B(n)}function j(){if(!V)return null;var e=angular.copy(V);return V=null,e}var V,z=[{patternId:"weekly",patternCron:"0 0 0 * * 0"},{patternId:"monthly",patternCron:"0 0 0 0 * *"},{patternId:"quarterly",patternCron:"0 0 0 0 */3 *"},{patternId:"yearly",patternCron:"0 0 0 0 0 *"}],H="no match";return{createBillsLoader:_,copyBuyerInformation:w,copyBillInformation:C,restoreBillValues:k,updateBill:D,updateSubscription:P,sendBill:F,createBill:B,createSubscription:$,getBillOrSubscriptionById:E,activateSubscription:U,cancelSubscription:q,deleteBill:N,saveDuplicateBillData:O,getDuplicateBillData:j,duplicateBill:L,getDateFromString:S}}]),angular.module("bitpay").factory("usersDataService",["bitpayApiService",function(e){function n(n){return e.request(n).then(function(e){return e.data})}return{getUserById:function(e){return n({facade:"user",method:"getUser",params:{userId:e}})},resendEmailVerification:function(e){return n({method:"sendVerificationEmail",token:e})}}}]),angular.module("bitpay").factory("bpLocalization",["$log",function(){function e(e){return e}return{localize:e}}]),angular.module("bitpay").service("bpFacadeService",["$q","bitpayApiService",function(e,n){function t(t){t.push("merchant");for(var i=[],a=0;a<t.length;a++)i.push(n.hasFacade(t[a]));var s=e.defer();return e.all(i).then(function(e){s.resolve(-1===e.indexOf(!0)?!1:!0)}),s.promise}return{doesUserHaveAccess:t}}]),angular.module("bitpay").factory("tierApplication",function(){return{getTierApplicationStatus:function(e){var n={};n.pendingAccount=0===e.appliedTier&&e.approvedTier<0&&e.verified;var t=new Date;return t.setDate(t.getDate()-14),n.isTier1Pending=e.approvedTier<1&&e.appliedTier1&&new Date(e.appliedTier1)>t,n.isTier2Pending=e.approvedTier<2&&e.appliedTier2&&new Date(e.appliedTier2)>t,n.isTier3Pending=e.approvedTier<3&&e.appliedTier3&&new Date(e.appliedTier3)>t,n}}}),angular.module("bitpay").factory("bitpayApiService",["$http","$q","bpApiConfig",function(e,n,t){function i(){function e(){var e={token:"",method:"authenticate"};return s(e).then(function(e){e&&e.data&&e.data.data&&e.data.data.token&&(u=e.data.data.token)})}function t(){var e={token:u,method:"getOrgTokens"};return s(e).then(function(e){if(e&&e.data)for(var n=e.data,t=0;t<n.length;t++){var i=n[t];b[i.numericId]?b[i.numericId].tokens[i.facade]=i.token:(b[i.numericId]={name:i.name,tokens:{}},b[i.numericId].tokens[i.facade]=i.token)}})}return v.deferred=n.defer(),m=e().then(t)}function a(){m=null,v={},u=null,b={}}function s(n){var i=t.server+"/api/dashboard",a=n.token,s=n.method,r=n.params,o=n.facades||[n.facade],l=n.org;if(a||"user"!==o[0]||(a=u),!a&&l&&o&&b[l])for(var c=0;c<o.length&&(a=b[l].tokens[o[c]],"undefined"==typeof a);c++);a&&(i=i+"/"+a);var d={method:"POST",url:i,data:{csrf:window.sessionInfo.csrfToken,method:s,params:JSON.stringify(r)}};return e(d)}function r(e){var t;return e&&"public"===e.facade?t=n.when(e.facade):(m||i(),t=m),t.then(function(){return!e.org&&v.deferred?v.deferred.promise.then(function(){return e.org=v.numericId,s(e)}):s(e)}).then(function(e){var t=n.defer();return e.data.error?t.reject(e.data.error):t.resolve(e.data&&!angular.isUndefined(e.data.result)?e.data.result:e.data),t.promise},function(e){return n.reject(e.statusText)})}function o(e){return m||i(),m.then(function(){return p().then(function(n){if(e instanceof Array){for(var t=0;t<e.length;t++)if(b[n]&&b[n].tokens[e[t]])return b[n].tokens[e[t]]}else if("string"==typeof e&&b[n]&&b[n].tokens[e])return b[n].tokens[e];return null})})}function l(e){return o(e).then(function(e){return!!e})}function c(){return m||i(),m.then(function(){return b})}function d(e){v.numericId=e,v.deferred&&v.deferred.resolve(e)}function p(){return v.deferred.promise}var u,m,b={},v={};return window.sessionInfo.isAuthenticated&&i(),{initialize:i,request:r,hasFacade:l,findTokenByFacade:o,getOrgs:c,uninitialize:a,switchOrg:d}}]),angular.module("bitpay").factory("googleMapsService",["$q","$window",function(e,n){var t=function(){var t=e.defer();if(n.googleMapsLoaded=function(){t.resolve(!0)},window.google&&window.google.maps&&window.google.maps.places)t.resolve(!0);else{var i=document.createElement("script");i.src="https://maps.googleapis.com/maps/api/js?key="+window.sessionInfo.mapsApiKey+"&libraries=places&callback=googleMapsLoaded",i.async=!0,i.defer=!0,document.body.appendChild(i)}return t.promise};return{load:t}}]),angular.module("bitpay").factory("invoicesDataService",["$q","bitpayApiService","$window","currenciesDataService","analytics",function(e,n,t,i,a){function s(){var e,n=t.sessionStorage.getItem("bpInvoiceCache");try{e=JSON.parse(n)||{}}catch(i){e={}}return e}function r(e){var n=Math.round(Date.now()/6e4),t=s(),i=t[e+n.toString()];return angular.isObject(i)||(i={}),i}function o(e){var n=JSON.stringify(e);t.sessionStorage.setItem("bpInvoiceCache",n)}function l(e,n){var t=Math.round(Date.now()/6e4),i={};i[e+t.toString()]=n,o(i)}function c(t){var i=e.defer();return n.findTokenByFacade(["merchantFinance","merchantSupport","merchantIntegration","merchant"]).then(function(e){var a=r(e),s=window.CryptoJS.SHA256(JSON.stringify(t)).toString(window.CryptoJS.enc.Base64),o=a[s];o?i.resolve(o):n.request({token:e,method:"findInvoices",params:t}).then(function(n){a[s]=n,l(e,a),i.resolve(n)})}),i.promise}function d(){t.sessionStorage.removeItem("bpInvoiceCache")}function p(e){return w.then(function(n){_=n;var t=0,i=0;return{loadBatch:function(){return e.offset=t,t+=y,e.limit=y,c(e).then(function(e){var n=[];return angular.forEach(e.data,function(e){n.push(g(e))}),i=e.data.length,n})},areAnyInvoicesLeftToLoad:function(){return i>=y}}})}function u(e){return n.request({facades:["merchantFinance","merchantSupport","merchantIntegration","merchant"],method:"getInvoice",params:{invoiceId:e}}).then(function(e){return e},function(){})}function m(e){var n={};return n.status="allButExpiredAndUnpaid",n.orderId=e,n.limit=y,c(n)}function b(e){var n={};return n.limit=y,n["transactions.txid"]=e,c(n)}function v(n){var t=[];return t.push(m(n)),n&&64===n.length&&t.push(b(n)),n&&n.length>20&&n.length<24&&t.push(u(n)),w.then(function(i){return _=i,e.all(t).then(function(e){var t,i,s=0,r=e[s++];n&&64===n.length&&(t=e[s++]),n&&n.length>20&&n.length<24&&(i=e[s]);var o=[];r&&r.data&&r.data.length>0&&(o=o.concat(r.data),a.track("D - searched payments by order ID")),t&&t.data&&(o=o.concat(t.data),a.track("D - searched payments by TX ID")),i&&i.data&&(o.push(i.data),a.track("D - searched payments by invoice ID"));var l=[];return angular.forEach(o,function(e){l.push(g(e))}),l})})}function g(e){var n=e;n.uiCurrencyDef=_[e.currency],n.uiStatus=e.status,"paidPartial"===e.exceptionStatus&&"invalid"!==e.status&&(n.uiStatus=e.exceptionStatus),"paidOver"!==e.exceptionStatus||"confirmed"!==e.status&&"complete"!==e.status||(n.uiStatus=e.exceptionStatus),e.transactions.forEach(function(t){t.amount<0&&"0000000000000000000000000000000000000000000000000000000000000000"===t.txid?t.uiType="creditToMerchant":t.amount<0?t.uiType="refundToPurchaser":t.amount>0&&(t.uiType="paymentFromPurchaser"),("refundFromLedger"===t.type||"refundFromInvoice"===t.type&&e.btcDue>0)&&(n.uiAlreadyRefunded=!0)});var t="BTC"===e.currency?1:e.exRates[e.currency];return n.uiPrice=e.price,n.uiDifference=(e.btcPrice-e.btcPaid)*t,n}function f(e){var n=e,t={},i=h(n);return t.paymentSubtotal=n.paymentSubtotals[i],t.address=n.addresses[i],t.transactionCurrency=h(e),t.minerFee=n.minerFees[i].totalFee,t.exchangeRates=n.exchangeRates[i],t.exchangeRate=t.exchangeRates[e.currency],t}function h(e){var n=e.buyerProvidedInfo&&e.buyerProvidedInfo.selectedTransactionCurrency;return e.transactionCurrency||n||"BTC"}var _,y=30,w=i.getMap();return{findInvoices:c,wideSearch:v,invalidateCache:d,createInvoiceLoader:p,getComputedFields:f,getTransactionCurrency:h}}]),angular.module("bitpay").factory("stateMessengerService",function(){function e(e,n,t){i[e]||(i[e]=[]),i[e].push({messageType:n,params:t})}function n(e){return i[e]?i[e].shift():null}function t(e){if(!i[e])return null;var n=i[e];return delete i[e],n}var i={};return{enqueueStateMessage:e,dequeueStateMessage:n,getAllMessages:t}});var jqLite=angular.element;angular.module("ionic").factory("bpTooltip",["$ionicModal","$ionicPosition","$document","$window",function(e,n,t,i){function a(e,t){var a=jqLite(e.target||e),r=n.offset(a),o=t.prop("offsetWidth"),l=t.prop("offsetHeight"),c=i.innerWidth,d=i.innerHeight,p={left:r.left+r.width/2-o/2},u=jqLite(t[0].querySelector(".popover-arrow"));p.left<s?p.left=s:p.left+o+s>c&&(p.left=c-o-s),r.top+r.height+l>d&&r.top-l>0?(p.top=r.top-l,t.addClass("popover-bottom")):(p.top=r.top+r.height,t.removeClass("popover-bottom")),u.css({left:r.left+r.width/2-u.prop("offsetWidth")/2-p.left+"px"}),t.css({top:p.top+"px",left:p.left+"px",marginLeft:"0",opacity:"1"})}var s=6,r={viewType:"bp-tooltip",hideDelay:1,animation:"none",positionView:a};return{fromTemplate:function(n,t){return e.fromTemplate(n,ionic.Utils.extend(r,t||{}))},fromTemplateUrl:function(n,t){return e.fromTemplateUrl(n,ionic.Utils.extend(r,t||{}))}}}]).directive("ionBpTooltip",[function(){return{restrict:"E",transclude:!0,replace:!0,controller:[function(){}],template:'<div class="popover-wrapper" ng-transclude></div>'}}]).directive("ionBpTooltipView",function(){return{restrict:"E",compile:function(e){e.append(jqLite('<div class="popover-arrow">')),e.addClass("bp-tooltip"),e.addClass("popover")}}}),angular.module("bitpay").service("passwordService",function(){function e(){return a}function n(e){a=e}function t(e){var n=new window.PBKDF2(Math.random().toString(),Math.random().toString(),Math.floor(30*Math.random()),47);n.deriveKey(function(){},e)}function i(e,n){var t=new window.PBKDF2(e,"..............",200,64),i=function(){},a=function(e){n(e)};t.deriveKey(i,a)}var a;return{getResetKey:e,setResetKey:n,generateSalt:t,hashPassword:i}}),angular.module("bitpay").factory("planUpgradeService",["$rootScope","$state","bpHistory",function(e,n,t){var i=null,a=0;return e.$on("$stateChangeStart",function(e,n){(i||a)&&(-1===n.url.indexOf("/settings/edit/plan")?(i=null,a=0):a++)}),{initiatePlanUpgradeFlow:function(){i={name:n.current.name,params:n.params}},getPreUpgradeState:function(){return i},returnToPreUpgradeState:function(){a&&(t.wipePreviousStates(a),a=0)}}}]),angular.module("bitpay").service("bpHistory",["$window",function(e){function n(n){r>=n?e.history.go(-1*n):r=-1}function t(){return r}function i(e){r=e}function a(){return r++,r}function s(){return r--,r}var r=0;return{wipePreviousStates:n,getHistoryCount:t,setHistoryCount:i,incrementHistoryCount:a,decrementHistoryCount:s}}]),angular.module("bitpay").service("bpIntercom",["$window","$timeout",function(e,n){function t(t){e.Intercom("showNewMessage",t),n(function(){i()},600)}function i(){var e=document.getElementById("intercom-messenger");if(e){var n=e.getElementsByTagName("textarea");n&&n[0]&&n[0].focus()}}return{startNewConversation:t,focusIntercomTextarea:i}}]),angular.module("bitpay").directive("lcl",["$rootScope","bpLocalization",function(e,n){return{restrict:"A",priority:1001,compile:function(e,t){var i=e.html().trim(),a=t.lcl.value?t.lcl.value.trim():"";e.html(n.localize(i,a))}}}]),angular.module("bitpay").directive("lclAttr",["bpLocalization",function(e){return{restrict:"A",priority:1001,compile:function(n,t){var i=t.lclAttr.split("|"),a=i[0].trim(),s=t[a],r=i.length>1?i[1].trim():"",o=e.localize(s,r);t[a]=o,n.attr(a,o)}}}]),angular.module("bitpay").directive("bpAutoFocus",["$timeout",function(e){return{restrict:"AC",link:function(n,t){e(function(){t[0].focus()},0)}}}]),angular.module("bitpay").directive("bpProfile",["$rootScope","bpLocalization",function(){return{restrict:"E",templateUrl:"bitpayShared/directives/bp-profile.html",scope:{profile:"="}}}]),angular.module("bitpay").directive("bpBitcoinAddress",function(){var e=window.validateBitcoinAddress;return{restrict:"A",require:"ngModel",link:function(n,t,i,a){a.$parsers.unshift(function(n){var t,i="bitpay.com"===window.location.hostname;return i?(t=e(n,{network:"mainnet"}),a.$setValidity("bitcoin-address",t)):(t=e(n,{network:"testnet"}),a.$setValidity("testnet-bitcoin-address",t)),t?n:void 0})}}}),angular.module("bitpay").directive("bpDetectSubmission",["$window",function(){return{restrict:"A",compile:function(e){var n=e[0].querySelectorAll("[ng-model]");Array.prototype.forEach.call(n,function(e){e.getAttribute("name")||e.setAttribute("name",e.getAttribute("ng-model"))});var t=e[0].querySelectorAll("[bp-val-msg-for]");return Array.prototype.forEach.call(t,function(n){var t=n.getAttribute("bp-val-msg-for"),i=e[0].getAttribute("name");n.setAttribute("ng-show",i+"['"+t+"'].$invalid && "+i+"['"+t+"'].hasVisited")}),function(e,n,t){t.name&&e[t.name]&&(n.on("submit",function(){e.$apply(function(){e[t.name].submissionAttempted=!0}),n.addClass("bp-submission-attempted")}),n.on("reset",function(){e.$apply(function(){e[t.name].submissionAttempted=!1}),n.removeClass("bp-submission-attempted")}))}}}}]),angular.module("bitpay").factory("typeaheadParser",["$parse",function(e){var n=/^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?\s+for\s+(?:([\$\w][\$\w\d]*))\s+in\s+([\s\S]+?)$/;return{parse:function(t){var i=t.match(n);if(!i)throw new Error('Expected typeahead specification in form of "_modelValue_ (as _label_)? for _item_ in _collection_" but got "'+t+'".');return{itemName:i[3],source:e(i[4]),viewMapper:e(i[2]||i[1]),modelMapper:e(i[1])}}}}]).directive("typeahead",["$compile","$parse","$q","$timeout","$document","typeaheadParser",function(e,n,t,i,a,s){var r=[9,13,27,38,40];return{require:"ngModel",link:function(o,l,c,d){var p,u=o.$eval(c.typeaheadMinLength)||1,m=o.$eval(c.typeaheadWaitMs)||0,b=o.$eval(c.typeaheadEditable)!==!1,v=n(c.typeaheadLoading).assign||angular.noop,g=n(c.typeaheadOnSelect),f=c.typeaheadInputFormatter?n(c.typeaheadInputFormatter):void 0,h=c.typeaheadAppendToBody?o.$eval(c.typeaheadAppendToBody):!1,_=(n(c.ngModel).assign,s.parse(c.typeahead)),y=o.$new();o.$on("$destroy",function(){y.$destroy()});var w="typeahead-"+y.$id+"-"+Math.floor(1e4*Math.random());l.attr({"aria-autocomplete":"list","aria-expanded":!1,"aria-owns":w});var C=angular.element("<div typeahead-popup></div>");C.attr({id:w,matches:"matches",active:"activeIdx",select:"select(activeIdx)",query:"query"}),angular.isDefined(c.typeaheadTemplateUrl)&&C.attr("template-url",c.typeaheadTemplateUrl);var k=function(){y.matches=[],y.activeIdx=-1,l.attr("aria-expanded",!1)},S=function(e){return w+"-option-"+e};y.$watch("activeIdx",function(e){0>e?l.removeAttr("aria-activedescendant"):l.attr("aria-activedescendant",S(e))});var x=function(e){var n={$viewValue:e};v(o,!0),t.when(_.source(o,n)).then(function(t){var i=e===d.$viewValue;if(i&&p)if(t.length>0){y.activeIdx=0,y.matches.length=0;for(var a=0;a<t.length;a++)n[_.itemName]=t[a],y.matches.push({id:S(a),label:_.viewMapper(y,n),model:t[a]});y.query=e,l.attr("aria-expanded",!0)}else k();i&&v(o,!1)},function(){k(),v(o,!1)})};k(),y.query=void 0;var I,A=function(e){I=i(function(){x(e)},m)},D=function(){I&&i.cancel(I)};d.$parsers.unshift(function(e){return p=!0,e&&e.length>=u?m>0?(D(),A(e)):x(e):(v(o,!1),D(),k()),b?e:e?void d.$setValidity("editable",!1):(d.$setValidity("editable",!0),e)}),d.$formatters.push(function(e){var n,t,i={};return f?(i.$model=e,f(o,i)):(i[_.itemName]=e,n=_.viewMapper(o,i),i[_.itemName]=void 0,t=_.viewMapper(o,i),n!==t?n:e)}),y.select=function(e){var n,t,a={};y.matches[e]&&(a[_.itemName]=t=y.matches[e].model,n=_.modelMapper(o,a),d.$setViewValue(n),d.$render(),d.$setValidity("editable",!0),g(o,{$item:t,$model:n,$label:_.viewMapper(o,a)})),i(function(){l[0].focus(),k()},0)},l.bind("keydown",function(e){0!==y.matches.length&&-1!==r.indexOf(e.which)&&(e.preventDefault(),40===e.which?(y.activeIdx=(y.activeIdx+1)%y.matches.length,y.$digest()):38===e.which?(y.activeIdx=(y.activeIdx?y.activeIdx:y.matches.length)-1,y.$digest()):13===e.which||9===e.which?y.$apply(function(){y.select(y.activeIdx),p=!1}):27===e.which&&(e.stopPropagation(),k(),y.$digest()))}),l.bind("blur",function(){p=!1});var P=function(e){l[0]!==e.target&&(k(),y.$digest())};a.bind("click",P),o.$on("$destroy",function(){a.unbind("click",P)});var F=e(C)(y);h?a.find("body").append(F):l.after(F),F.on("mousedown",function(e){e.stopPropagation()})}}}]).directive("typeaheadPopup",function(){return{restrict:"EA",scope:{matches:"=",query:"=",active:"=",select:"&"},templateUrl:"directives/bp-typeahead/bp-typeahead-popup.html",link:function(e,n,t){n.addClass("bp-typeahead-popup"),e.templateUrl=t.templateUrl,e.isOpen=function(){return e.matches.length>0},e.isActive=function(n){return e.active===n},e.selectActive=function(n){e.active=n},e.selectMatch=function(n){e.select({activeIdx:n})}}}}).directive("typeaheadMatch",[function(){return{restrict:"EA",scope:{index:"=",match:"=",query:"="},replace:!0,templateUrl:"directives/bp-typeahead/bp-typeahead-match.html"}}]).filter("typeaheadHighlight",function(){function e(e){return e.replace(/([.?*+^$[\]\\(){}|-])/g,"\\$1")}return function(n,t){return t?(""+n).replace(new RegExp(e(t),"gi"),"<strong>$&</strong>"):n}}),angular.module("bitpay").filter("typeaheadFilter",function(){return function(e,n){var t=[];return angular.forEach(e,function(e){(e.name.toUpperCase().indexOf(n.toUpperCase())>-1||e.alts&&e.alts.toUpperCase().indexOf(n.toUpperCase())>-1)&&t.push(e)}),t.sort(function(e,n){var t=e.boost||0,i=n.boost||0,a=i-t;return 0===a&&(e.name>n.name&&(a=1),e.name<n.name&&(a=-1)),a})}}),angular.module("bitpay").directive("bpShow",["$animate",function(e){return{restrict:"A",multiElement:!0,link:function(n,t,i){n.$watch(i.bpShow,function(n){e[n?"removeClass":"addClass"](t,"invisible")})}}}]),angular.module("bitpay").directive("bpBackButtonSref",["$state","$parse",function(e,n){return{restrict:"A",link:function(t,i,a){function s(e,n){var t,i=e.match(/^\s*({[^}]*})\s*$/);if(i&&(e=n+"("+i[1]+")"),t=e.replace(/\n/g," ").match(/^([^(]+?)\s*(\((.*)\))?$/),!t||4!==t.length)throw new Error("Invalid state ref '"+e+"'");return{state:t[1],paramExpr:t[3]||null}}var r,o=s(a.bpBackButtonSref,e.current.name);(!a.bpBackButtonActive||n(a.bpBackButtonActive)(t))&&(o.paramExpr&&(t.$watch(o.paramExpr,function(e){e!==r&&t.activateBackButton(o.state,e)},!0),r=angular.copy(t.$eval(o.paramExpr))),t.activateBackButton(o.state,r))}}}]),angular.module("bitpay").directive("alert",function(){return{templateUrl:"directives/alert/alert.html",link:function(e){e.clearMessageAlert=function(){e.show=!1,e.show.close&&e.show.close()}},scope:{type:"=",show:"=",close:"&"},transclude:!0,restrict:"E"}}),angular.module("bitpay").directive("gravatar",["md5",function(e){return{restrict:"AE",replace:!0,scope:{name:"=",size:"@",userEmail:"="},link:function(n){n.$watch("userEmail",function(t){t&&(n.defaultImage=encodeURI("https://bitpay.com/dashboard/img/default-user.png"),n.emailHash=e.createHash(n.userEmail||""))})},template:'<img style="cursor: pointer;" alt="{{ name }}" height="{{ size }}"  width="{{ size }}" ng-src="https://gravatar.com/avatar/{{ emailHash }}.jpg?s={{ size }}&d={{ defaultImage }}">'}}]),angular.module("bitpay").directive("oldDashboardFrame",["bpApiConfig","$state","$location",function(e,n){function t(e){return"bitcoin-shopping-cart-plugins"===e?"menu.setup":"bitcoin-mobile-checkout"===e?"menu.dashboard({ page: 'edit-mobile-checkout' })":"merchant-compliance"===e?"menu.verification":"accounting"===e?"menu.settings.settlement":"merchant-profile"===e?"menu.profileSettings":null}function i(e){var i=document.createElement("a");i.href=e;var a=i.pathname;"/"!==a.substring(0,1)&&(a="/"+a);var s=a.split("/")[1],r=i.href.split("?")[1],o=t(s);if(o)n.go(o);else{var l={page:s,params:""};r&&(l.params=encodeURIComponent(r)),n.go("menu.dashboard",l)}}function a(){var e=window.navigator.userAgent,n=e.indexOf("MSIE "),t=e.indexOf("Trident/");return n>0||t>0?!0:!1}return{restrict:"A",scope:{},link:function(e,n){var t=n[0];window.legacyNavigate=function(e){i(e)},t.addEventListener("load",function(){var e=t.contentDocument?t.contentDocument:t.contentWindow.document,n=e.createElement("script"),i="/legacy-link-handler.9618d79a.js",a="/dashboard"+i;n.src=a,e.getElementsByTagName("head")[0].appendChild(n)}),a()&&window.document.documentElement.classList.add("ie")}}}]),angular.module("bitpay").directive("googleAutocomplete",["$timeout","googleMapsService",function(e,n){return{restrict:"A",scope:{googleAutocomplete:"&"},link:function(t,i){var a=i[0],s={types:["address"]},r={};n.load().then(function(){r.addressAutocomplete=new window.google.maps.places.Autocomplete(a,s),i.on("keypress",function(e){var n=e.keyCode||e.which;return 13===n?(e.preventDefault(),!1):void 0}),window.google.maps.event.addDomListener(r.addressAutocomplete,"place_changed",function(){var n={},i=r.addressAutocomplete.getPlace();if("undefined"!=typeof i.address_components)for(var a=0;a<i.address_components.length;a++){for(var s=i.address_components[a],o="",l=0;l<s.types.length;l++){var c=s.types[l];"country"===c?o="country":"postal_town"===c?o="city":"locality"===c?o="city":"administrative_area_level_1"===c?o="state":"postal_code"===c&&(o="postal_code")}"country"===o&&(n.country=s.long_name,n.countryCode=s.short_name),"city"===o&&(n.city=s.long_name),"state"===o&&(n.state=s.short_name),"postal_code"===o&&(n.postalCode=s.long_name),n.address1=i.name}e(function(){t.googleAutocomplete({data:n})})})})}}}]),angular.module("bitpay").directive("bpCountryInput",["countriesDataService",function(e){return{restrict:"A",require:"ngModel",link:function(n,t,i,a){a.$parsers.unshift(function(n){return e.findByName(n).then(function(e){a.$setValidity("invalidCountry",!!e)}),n})}}}]),angular.module("bitpay").directive("bpIndustryInput",["industriesDataService",function(e){return{restrict:"A",require:"ngModel",link:function(n,t,i,a){a.$parsers.unshift(function(n){return e.findByName(n).then(function(e){a.$setValidity("invalidIndustry",!!e)}),n})}}}]),function(){function e(e){for(var n=e.parent();"FORM"!==n.prop("tagName");)if(n=n.parent(),0===n.length)return null;return n}function n(){return{restrict:"E",require:"?ngModel",link:function(n,i,a,s){s&&(i.on("focus",function(){i.addClass("has-focus"),t(n,function(){s.hasFocus=!0})}),i.on("blur",function(){i.removeClass("has-focus"),i.addClass("has-visited"),t(n,function(){s.hasFocus=!1,s.hasVisited=!0,s.$setValidity("remote",!0)})}),e(i)&&e(i).on("submit",function(){i.addClass("has-visited"),t(n,function(){s.hasFocus=!1,s.hasVisited=!0})}))}}}function t(e,n){var t=e.$root.$$phase;"$apply"===t||"$digest"===t?n&&"function"==typeof n&&n():e.$apply(n)}angular.module("bitpay").directive("input",n),angular.module("bitpay").directive("select",n),angular.module("bitpay").directive("textarea",n)}(),angular.module("bitpay").directive("bpRadio",function(){return{restrict:"E",replace:!0,require:"?ngModel",transclude:!0,template:'<label class="item bp-item-nowrap item-checkbox"><div class="checkbox checkbox-input-hidden disable-pointer-events"><input type="radio"><i class="checkbox-icon"></i></div><div class="disable-pointer-events" ng-transclude></div></label>',compile:function(e,n){n.icon&&e.children().eq(2).removeClass("ion-checkmark").addClass(n.icon);var t=e.find("input");return angular.forEach({name:n.name,value:n.value,disabled:n.disabled,"ng-value":n.ngValue,"ng-model":n.ngModel,"ng-disabled":n.ngDisabled,"ng-change":n.ngChange,"ng-required":n.ngRequired,required:n.required},function(e,n){angular.isDefined(e)&&t.attr(n,e)}),function(e,n,t){e.getValue=function(){return e.ngValue||t.value}}}}}),angular.module("bitpay").directive("bpFacades",["bitpayApiService","$q","$state","bpFacadeService",function(e,n,t,i){return{restrict:"A",scope:!0,link:function(e,n,a){var s,r,o=a.uiSref,l=t.get(o);l&&l.meta&&l.meta.bpFacades&&(s=l.meta.bpFacades),a.bpFacades&&(r=a.bpFacades.split(" "));var c=r||s;c&&i.doesUserHaveAccess(c).then(function(t){t||(n.addClass("disabled"),e.bpFacadesUnauthorized=!0)})}}}]),angular.module("bitpay").directive("bpPanel",function(){return{templateUrl:"directives/bp-panel/bp-panel.html",transclude:!0,restrict:"C"}}),angular.module("bitpay").constant("moment",moment).directive("bpTimeAgo",["$window","moment",function(e,n){return function(t,i,a){function s(){d&&(e.clearTimeout(d),d=null)}function r(t){var a=n(),s=a.diff(t,"minute");i.text(1260>s?t.from(a):1440>s?Math.round(s/60)+" hours ago":2880>s?"Yesterday, "+t.format("h:mma"):t.format(a.diff(t,"year")<1?"MMM D, h:mma":"MMM D YYYY, h:mma"));var o=Math.abs(a.diff(t,"minute")),l=3600;1>o?l=1:60>o?l=30:180>o&&(l=300),d=e.setTimeout(function(){r(t)},1e3*l)}function o(e){u&&i.attr("datetime",e)}function l(){if(s(),c){var e=n(c);r(e),o(e.toISOString())}}var c,d=null,p=((new Date).getTime(),a.bpTimeAgo),u="TIME"===i[0].nodeName.toUpperCase();t.$watch(p,function(e){return"undefined"==typeof e||null===e||""===e?(s(),void(c&&(i.text(""),o(""),c=null))):(c=e,void l())}),t.$on("$destroy",function(){s()})}}]),angular.module("bitpay").directive("qrcode",["$window",function(e){var n=!!e.CanvasRenderingContext2D,t={L:"Low",M:"Medium",Q:"Quartile",H:"High"},i=function(e,n,t,i){for(var a=0;t>a;a++)for(var s=0;t>s;s++){var r=Math.ceil((s+1)*i)-Math.floor(s*i),o=Math.ceil((a+1)*i)-Math.floor(a*i);e.fillStyle=n.isDark(a,s)?"#000":"#fff",e.fillRect(Math.round(s*i),Math.round(a*i),r,o)}};return{restrict:"E",template:'<canvas class="qrcode"></canvas>',link:function(e,a,s){var r,o,l,c,d,p,u,m,b,v=a[0],g=a.find("canvas"),f=g[0],h=n?f.getContext("2d"):null,_="download"in s,y=s.href,w=_||y?document.createElement("a"):"",C=/^\s+|\s+$/g,k=function(e){o=Math.max(1,Math.min(parseInt(e,10),10))||4},S=function(e){l=e in t?e:"M"},x=function(e){if(e){c=e.replace(C,""),m=qrcode(o,l),m.addData(c);try{m.make()}catch(n){return void(r=n.message)}r=!1,p=m.getModuleCount()}},I=function(e){d=parseInt(e,10)||2*p,u=d/p,f.width=f.height=d},A=function(){if(m){if(r)return w&&(w.removeAttribute("download"),w.title="",w.href="#_"),n||(v.innerHTML='<img src width="'+d+'"height="'+d+'"class="qrcode">'),void e.$emit("qrcode:error",r);if(_&&(v.download="qrcode.png",v.title="Download QR code"),n){if(i(h,m,p,u),_)return void(v.href=f.toDataURL("image/png"))}else if(v.innerHTML=m.createImgTag(u,0),b=a.find("img"),b.addClass("qrcode"),_)return void(v.href=b[0].src);y&&(v.href=y)}};w&&(w.className="qrcode-link",g.wrap(w),v=w),k(s.version),S(s.errorCorrectionLevel),I(s.size),s.$observe("version",function(e){e&&(k(e),x(c),I(d),A())}),s.$observe("errorCorrectionLevel",function(e){e&&(S(e),x(c),I(d),A())}),s.$observe("data",function(e){e&&(x(e),I(d),A())}),s.$observe("size",function(e){e&&(I(e),A())}),s.$observe("href",function(e){e&&(y=e,A())})}}}]),angular.module("bitpay").directive("showAsideWhen",["$window",function(e){return{restrict:"A",require:"^ionSideMenus",link:function(n,t,i,a){function s(){var n="large"===i.exposeAsideWhen?"(min-width:768px)":i.showAsideWhen;a.exposeAside(e.matchMedia(n).matches),a.activeAsideResizing(!1)}function r(){a.activeAsideResizing(!0),c()}var o=e.innerWidth,l=e.innerHeight;ionic.on("resize",function(){(o!==e.innerWidth||l!==e.innerHeight)&&(o=e.innerWidth,l=e.innerHeight,r())},e);var c=ionic.debounce(function(){n.$apply(s)},100,!1);n.$evalAsync(s)}}}]),angular.module("bitpay").directive("bpFocus",["$timeout","$rootScope",function(e){return{restrict:"A",scope:{focusValue:"=bpFocus"},link:function(n,t){n.$watch("focusValue",function(n,i){n!==!0||i?n===!1&&i&&t[0].blur():e(function(){t[0].focus()})})}}}]),angular.module("bitpay").directive("bpPrism",["$interpolate",function(e){return{restrict:"A",scope:{prismData:"=bpPrism",interpolatedData:"=interpolatedData"},link:function(n,t){function i(e){var n=e.replace(/&quot;/g,'"').replace(/&gt;/g,">").replace(/&lt;/g,"<");return n}var a=t.html(),s=e(a);n.$watch("prismData",function(){var e=s(n.prismData);n.interpolatedData.html=i(e),t.html(e),Prism.highlightAll()},!0)}}}]),angular.module("bitpay").directive("bpClickOutside",["$document",function(e){return{restrict:"A",scope:{bpClickOutside:"&"},link:function(n,t,i){e.on("click",function(e){for(var a=angular.element(e.target).hasClass("bp-back-button"),s=!1,r=i.excludeSelectors.split(","),o=0;o<r.length&&!s;o++)for(var l=r[o],c=document.querySelectorAll(l),d=0;d<c.length;d++){var p=c[d],u=angular.element(p);if(u[0].contains(e.target)){s=!0;break}}t===e.target||t[0].contains(e.target)||a||s||n.$apply(function(){n.$eval(n.bpClickOutside)})})}}}]),angular.module("bitpay").directive("bpDatepickerMobileAlign",["$window","$timeout",function(e){return{restrict:"A",link:function(n,t){var i=t[0].getElementsByClassName("_720kb-datepicker-calendar");e.innerWidth<700&&angular.element(i).css("right","20px"),angular.element(e).bind("resize",function(){e.innerWidth<600?angular.element(i).css("right","20px"):angular.element(i).css("right","")})}}}]),angular.module("bitpay").directive("bpRoleBadge",["$window",function(e){var n=700;return{restrict:"A",link:function(t,i,a){var s,r,o=a.mobileAbbreviation,l=i[0];s=angular.element(l).text().replace(/ /g,""),r=s.substring(0,1),e.innerWidth<n&&(angular.element(l).text(o?o:r),angular.element(l).addClass("bp-badge-mobile")),angular.element(e).bind("resize",function(){e.innerWidth<n?(angular.element(l).text(o?o:r),angular.element(l).addClass("bp-badge-mobile")):(angular.element(l).text(s),angular.element(l).removeClass("bp-badge-mobile"))})}}}]),angular.module("bitpay").directive("bpAppendInfo",["$window","$ionicModal","bpTooltip","$timeout","$ionicPopup","$parse",function(e,n,t,i,a,s){return{restrict:"A",scope:!1,link:function(e,i,a){function r(n){return s(n)(e)}function o(e){for(var n=angular.element(e.querySelector(".refund-disabled-reasons")).children(),t=!1,i=0;i<n.length;i++){var a=angular.element(n[i]),s=a.attr("ng-show"),o=r(s);if(o===!0){t=!0;break}}return t}function l(){function n(){if(o(e.modal.modalEl)&&window.ionic.Gestures.HAS_TOUCHEVENTS){var n='<div class="bp-backdrop-bg"></div>';angular.element(window.document.body).append(n),e.modal.show()}}function t(){p(),e.showInfoPopover().then(r),window.document.getElementsByClassName("click-block")[0]&&window.document.getElementsByClassName("click-block")[0].remove()}function a(){window.ionic.Gestures.HAS_TOUCHEVENTS||t()}function s(){u=setTimeout(function(){e.hideInfoPopover()},600)}function r(){b=angular.element(window.document.getElementsByClassName("popover-wrapper")[0]),b.bind("mouseleave",c),b.bind("mouseenter",l)}function l(){p()}function c(n){d.contains(n.toElement)||(m=setTimeout(function(){e.hideInfoPopover()},600)),b.unbind("mouseleave")}function p(){clearTimeout(u),clearTimeout(m)}angular.element(d).removeClass("disabled"),angular.element(d).css("opacity",.6),angular.element(d).css("cursor","default"),i.unbind("click"),i.bind("click",n);var u,m,b;angular.element(d).bind("mouseenter",a),angular.element(d).bind("mouseleave",s)}function c(){i.unbind("click"),i.unbind("mouseenter"),i.bind("click",function(){r(a.ngClick)}),angular.element(d).css("opacity",""),angular.element(d).css("cursor","")}a.$observe("bpAppendInfo",function(){r(a.bpAppendInfo)!==!1?l():c()});var d=i[0];e.originalScope=e.$parent,e.templateUrl=a.bpAppendInfoTemplate,t.fromTemplateUrl("components/payments/info-popover.html",{scope:e}).then(function(n){e.showInfoPopover=function(){return o(n.$el[0])?n.show(d):void 0},e.hideInfoPopover=function(){n.hide()},e.removeInfoPopover=function(){n.remove()}}),n.fromTemplateUrl("components/payments/info-modal.html",{scope:e,animation:"scale-in"}).then(function(n){e.modal=n,e.$on("modal.hidden",function(){angular.element(window.document.getElementsByClassName("bp-backdrop-bg")[0]).remove()})}),e.$on("$destroy",function(){e.removeInfoPopover()}),e.confirm=function(){e.modal.hide(),e.hideInfoPopover(),r(a.bpAppendInfoConfirm)&&r(a.bpAppendInfoConfirm)()}}}}]),angular.module("bitpay").directive("bpLazyLoad",["$parse",function(e){return{restrict:"E",scope:!1,link:function(n,t,i){function a(t){return e(t)(n)}var s;i.src?(s=document.createElement("script"),s.src=i.src,s.onload=function(){a(i.onLoad)&&a(i.onLoad)()
}):i.href&&(s=document.createElement("link"),i.href&&(s.href=i.href),i.rel&&(s.rel=i.rel),i.type&&(s.type=i.type)),i.$observe("loadWhen",function(){a(i.loadWhen)&&n.$evalAsync(function(){document.body.appendChild(s)})})}}}]),angular.module("bitpay").directive("bpDobPicker",function(){return{restrict:"E",templateUrl:"directives/bp-dob-picker/bp-dob-picker.html",scope:{dob:"=",error:"=",dobVisited:"="},link:function(e){function n(){e.dob?(e.dob=new Date(e.dob),e.month=e.dob.getMonth(),e.day=e.dob.getDate(),e.year=e.dob.getFullYear()):e.month=-1}function t(){e.dob=null,e.error=null;var n=moment([e.year,e.month,e.day]),t=moment().subtract(2,"years"),i=moment().subtract(150,"years"),a=n>t||i>n;n.isValid()?a?e.error=9001:e.dob=new Date(e.year,e.month,e.day):e.error=-1!==e.month&&e.day&&e.year?n.invalidAt():9002}e.changed=function(){t()},e.visited=function(){e.monthVisited&&e.dayVisited&&e.yearVisited&&(e.dobVisited=!0)},e.$watch("dobVisited",function(){t()}),n()}}}),angular.module("bitpay").directive("bpResolveRoutingNumber",["bitpayApiService","$timeout",function(e,n){return{restrict:"A",scope:{bpResolveRoutingNumber:"="},template:"{{bankName}}",link:function(t,i,a){var s={promise:null};t.$watch("bpResolveRoutingNumber",function(i){s.promise&&n.cancel(s.promise),s.promise=n(function(){return i&&9===i.toString().length?void e.request({facade:"public",method:"findBankByRoutingNumber",params:{routingNumber:i}}).then(function(e){t.bankName=e,e&&a.onResolve&&t.$parent.$eval(a.onResolve),!e&&a.onResolveFail&&t.$parent.$eval(a.onResolveFail)},function(){t.bankName="",a.onResolveFail&&t.$parent.$eval(a.onResolveFail)}):(t.bankName="",void(a.onResolveFail&&t.$parent.$eval(a.onResolveFail)))},400,!1)})}}}]),angular.module("bitpay").directive("bpSettlementDate",function(){return{restrict:"E",templateUrl:"directives/bp-settlement-date/bp-settlement-date.html",scope:{date:"="},link:function(e){function n(e){var n=moment();return n.isSame(e,"d")}function t(e){var n=moment().add(1,"d");return n.isSame(e,"d")}e.$watch("date",function(){e.date&&(e.dateIsToday=n(e.date),e.dateIsTomorrow=t(e.date))})}}}),angular.module("bitpay").directive("bpSharpspringForm",["$window",function(){return{require:"^form",restrict:"A",link:function(e,n,t,i){var a="https://app-3QNBY96EAK.marketingautomation.services/webforms/receivePostback/MzawMDEzNrIwAQA/",s=n[0],r=t.bpSharpspringForm,o={value:a+r};i.submitToSharpspring=function(){var e=getFormData(s,i);"bitpay.com"===window.location.host&&sendData(e,o)}}}}]),angular.module("bitpay").filter("amount",function(){return function(e){if(!angular.isUndefined(e)){var n=6,t=Math.abs(e).toString();t.length<9&&(t="00000000".slice(0,9-t.length)+t);var i=t.slice(0,t.length-8)+"."+t.slice(t.length-8,t.length-(8-n));return 0>e&&(i="-"+i),i}}}),angular.module("bitpay").filter("currency",["currenciesDataService",function(){return function(e,n,t){function i(e,n){n||(n=2);var t=Math.pow(10,n);return(parseInt(e*t)/t).toFixed(n)}if(!angular.isUndefined(e)){n||(n={code:"USD",symbol:"$",precision:2,name:"US Dollar",plural:"US Dollars"});var a=n.precision;"string"==typeof e&&(e=Number(e));var s=e.toFixed(a);t&&(s=i(e,a));var r=n.symbol+s;return r}}}]),angular.bootstrap().invoke(["$filter",function(e){angular.module("bitpay").filter("date",function(){return function(n,t){if(0===t.indexOf("moment:")){var i=moment(n).format(t.split(":")[1]);return i}return e("date")(n,t)}})}]),angular.module("bitpay").filter("toArray",function(){return function(e,n){return angular.isObject(e)?Object.keys(e).map(n===!1?function(n){return e[n]}:function(n){var t=e[n];return angular.isObject(t)?Object.defineProperty(t,"$key",{enumerable:!1,value:n}):{$key:n,$value:t}}):e}}),angular.module("bitpay").run(["$templateCache",function(e){e.put("browser-modern.html",'<!DOCTYPE html>\n<html ng-csp lang="en-US">\n\n<head>\n  <base href="/merchant/">\n  <meta charset="utf-8">\n  <!-- Remove Later -->\n  <meta name="viewport" content="initial-scale=1, maximum-scale=1, user-scalable=no, width=device-width">\n  <title>BitPay: Upgrade Browser</title>\n\n  <!-- build:css app.aaf9a218.css -->\n  <link href="app.aaf9a218.css" rel="stylesheet">\n  <!-- endbuild -->\n\n</head>\n\n<body class="platform-ios">\n  <div class="landing pane">\n    <div class="landing-container ">\n      <img src="img/bitpay-logo.svg">\n    </div>\n    <div style="margin: auto; margin-top: 50px; max-width: 652px">\n      <h1 style="font-size:32px">Please upgrade to a modern Web browser.</h1>\n      <a href="https://www.google.com/chrome/browser/">\n        <img src="img/browsers/chrome_128x128.png" />\n      </a>\n      <a href="https://www.firefox.com">\n        <img src="img/browsers/firefox_128x128.png" />\n      </a>\n      <a href="http://windows.microsoft.com/en-us/internet-explorer/download-ie">\n        <img src="img/browsers/internet-explorer_128x128.png" />\n      </a>\n      <a href="https://www.opera.com">\n        <img src="img/browsers/opera_128x128.png" />\n      </a>\n      <a href="https://www.apple.com/safari/">\n        <img src="img/browsers/safari_128x128.png" />\n      </a>\n    </div>\n  </div>\n</body>\n\n</html>'),e.put("components/accept-invite/accept-invite.html",'<ion-view view-title="Accept Invite" hide-nav-bar="true" class="prelogin">\n  <ion-content class="bp-no-header">\n\n    <div class="bp-constrain-signup">\n\n      <div class="prelogin__logo-container" style="padding-bottom: 0">\n        <a href="/"><img src="img/bitpay-logo-inverse-cropped.svg" class="prelogin__logo"></a>\n      </div>\n\n      <div class="prelogin__headline" lcl ng-hide="alreadyLoggedIn">Create your account and join {{user.org}}</div>\n      <div class="prelogin__headline" lcl ng-show="alreadyLoggedIn">Account Created</div>\n\n      <alert animation="slide-in-up" style="width: 100%;" show="alert.type" type="alert.type">\n        {{alert.message}}\n      </alert>\n\n      <div class="prelogin__validation" ng-show="formSuccess">\n        <span lcl>Please <a ui-sref=\'login\'>login</a> using your new password.</span>\n      </div>\n\n      <form bp-detect-submission name="acceptInviteForm" novalidate ng-show="!alreadyLoggedIn" ng-submit="acceptInvite(acceptInviteForm)">\n\n        <div class="prelogin__fieldset">\n          <label class="signup__label" for="newPassword" lcl>Your Email</label>\n          <input placeholder="Email" name="email" type="email" ng-model="user.email" class="prelogin__input"\n                 required disabled autocomplete="off">\n\n        </div>\n\n        <!-- First And Last Name -->\n        <div class="prelogin__fieldset">\n\n          <div class="signup__name">\n            <div>\n              <label class="signup__label" for="FirstName" lcl>First Name</label>\n              <input id="FirstName" type="text" ng-model="user.givenName" class="prelogin__input"\n                     ng-readonly="isOnboarding && isGivenNameInitialized" name="givenName" ng-pattern="nameRegex"\n                     required>\n            </div>\n\n            <div>\n              <label class="signup__label" for="LastName" lcl>Last Name</label>\n              <input id="LastName" type="text" ng-model="user.familyName" class="prelogin__input"\n                     ng-readonly="isOnboarding && isFamilyNameInitialized" name="familyName" ng-pattern="nameRegex" autocomplete="off"\n                     required>\n            </div>\n\n          </div>\n\n          <i class="prelogin__validation icon-left ion-android-close"\n             ng-show="acceptInviteForm.submissionAttempted && ((acceptInviteForm.givenName.$invalid && acceptInviteForm.givenName.hasVisited) || (acceptInviteForm.familyName.$invalid && acceptInviteForm.familyName.hasVisited))">\n            <span lcl>Please enter your first and last name in english characters.</span></i>\n\n        </div>\n\n        <div class="prelogin__fieldset">\n          <label class="signup__label" for="newPassword" lcl>Set your Password</label>\n\n          <div class="prelogin__pass">\n\n            <div class="prelogin__pass__inputs">\n              <input ng-hide="showPasswordInClearText" type="password" ng-model="reset.newPassword" class="prelogin__input" ng-change="evaluateMeter()" name="newPassword" ng-focus="showPasswordHelptext=true" ng-blur="passwordFieldBlurred=true" autocomplete="new-password" required>\n\n              <input ng-show="showPasswordInClearText" type="text" ng-model="reset.newPassword" class="prelogin__input" ng-change="evaluateMeter()" name="newPassword" ng-focus="showPasswordHelptext=true" ng-blur="passwordFieldBlurred=true" required>\n            </div>\n\n            <button tabindex="-1" on-touch="showPasswordInClearText = !showPasswordInClearText" type="button" class="prelogin__pass__toggle">\n              <span ng-hide="showPasswordInClearText" lcl>Show Pass</span>\n              <span ng-show="showPasswordInClearText" lcl>Hide Pass</span>\n            </button>\n          </div>\n\n          <div class="prelogin__validation" ng-show="showPasswordHelptext && !passwordIsStrong">\n            <i ng-show="passwordFieldBlurred" class="prelogin__validation icon-left ion-android-close"></i>\n            <span lcl>Password must include at least 8 characters: uppercase, lowercase, and numbers.</span>\n          </div>\n\n        </div>\n\n        <button ng-disabled="(!formValid(acceptInviteForm) && acceptInviteForm.submissionAttempted) || formDone" type="submit" class="button bp-button prelogin__button" ladda="loginLoading" lcl>Create Account</button>\n\n      </form>\n\n      <div ng-show="alreadyLoggedIn">\n        <p style="font-size: 16px; line-height: 25px;">\n          A new account has been created for {{user.givenName}} {{user.familyName}}.\n        </p>\n\n        <button class="bp-big-action bp-margin-top-20 ladda-button" ng-click="loginNewUser()" ladda="loginLoading">\n          Login as\n          <span ng-show="user.givenName">{{user.givenName}}</span>\n          <span ng-hide="user.givenName" style="text-transform: none;">{{user.email}}</span>\n        </button>\n\n        <div class="prelogin__footer">\n          <a ui-sref="menu.overview">Continue as {{loggedInUser.name || loggedInUser.email}}</a>\n        </div>\n\n      </div>\n\n    </div>\n  </ion-content>\n</ion-view>\n'),e.put("components/bills/bills.html",'<ion-view view-title="Email Billing" bp-back-button-sref="menu.paymentTools" cache-view="false">\n  <ion-nav-buttons side="secondary">\n    <button ng-show="billData.bills.length > 0" class="bp-header-button bp-bills__visible-small-only" ui-sref="menu.newBill">\n          <span lcl>New Bill</span>\n    </button>\n\n    <div class="bp-bills__menu-buttons" ng-show="billData.bills.length > 0">\n      <button class="button bp-button bp-bills__menu-buttons__btn-new-bill bp-bills__visible-medium-up" ui-sref="menu.newBill" lcl>New Bill</button>\n    </div>\n  </ion-nav-buttons>\n\n  <ion-content class="has-header">\n  <div class="bp-alert" ng-show="alertMessage">\n    <div class="bp-alert__icon-box bp-alert__icon-box--green"><i class="icon ion-checkmark"></i></div>\n    <div class="bp-alert__content">\n      <span ng-show="alertMessage.messageType === \'billCreated\'" lcl>You successfuly created a new bill.</span>\n      <span ng-show="alertMessage.messageType === \'draftSubscriptionCreated\'" lcl>You successfuly created a new repeating bill. This bill is currently a draft and will not be sent to the buyer.</span>\n      <span ng-show="alertMessage.messageType === \'subscriptionCreated\'" lcl>You successfuly scheduled a new repeating bill. This bill will be sent to the buyer on {{alertMessage.params.nextDelivery | date:\'mediumDate\'}}.</span>\n      <span ng-show="alertMessage.messageType === \'subscriptionActivated\'" lcl>You successfuly scheduled {{alertMessage.params.name || alertMessage.params.email}}\'s bill, which will be sent on {{alertMessage.params.nextDelivery | date:\'mediumDate\'}}.</span>\n      <span ng-show="alertMessage.messageType === \'subscriptionCancelled\'" lcl>You successfuly cancelled {{alertMessage.params.email}}\'s repeating bill.</span>\n      <span ng-show="alertMessage.messageType === \'billDeleted\'" lcl>You successfuly deleted {{alertMessage.params.email}}\'s bill.</span>\n    </div>\n    </div>\n    <div class="bp-bills__zero-state-wrapper" ng-show="billData.bills.length == 0 && isLoading != true">\n        <div class="bp-constrain-narrow bp-bills__zero-state">\n            <img class="bp-bills__zero-state__icon" src="img/payment-tools/client-billing.svg"/>\n            <div class="bp-bills__zero-state__header" lcl>Get Started with Billing</div>\n            <p class="bp-bills__zero-state__helper-text" lcl>BitPay allows you to send bills via email directly from your account. Recurring and one-off bills can be created, sent, and managed here.</p>\n\n            <button class="button bp-button bp-bills__zero-state__btn-create" ladda="submitting" ui-sref="menu.newBill" lcl>Create a Bill</button>\n        </div>\n    </div>\n    <div class="list bp-padding bp-lg-pad-sides-50 bp-margin-top">\n      <a class="item bp-item bp-reset bp-border-bottom-only" ng-repeat="bill in billData.bills | orderBy:\'-sortDate\' | filter: {status: \'!cancelled\', archived: \'!true\'}" ui-sref="menu.billDetails({ id: bill.id })" ng-class="{\'bp-bills__just-added\': alertMessage.params.id === bill.id}">\n        <div class="bp-flex-row" style="flex-grow: 1;">\n          <div class="bp-sm-font-size-small bp-sm-column-70 bp-md-column-20 bp-bold bp-nowrap bp-padding">\n            <span lcl>{{bill.name || bill.email || \'&mdash;\'}}</span>\n          </div>\n          <div class="bp-sm-font-size-small bp-sm-column-70 bp-md-column-25 bp-nowrap bp-padding bp-bills__visible-medium-up" style="padding-right: 40px">\n            <span ng-show="bill.number" lcl>#</span>{{bill.number || \'&mdash;\'}}\n          </div>\n          <div class="bp-sm-font-size-large  bp-md-font-size-medium bp-sm-column-30 bp-md-column-15 bp-md-order-4 bp-bold bp-sm-text-right bp-padding bp-bills__bill-price">{{ bill.price | currency: bill.uiCurrencyDef }} {{ bill.uiCurrencyDef.code }}\n          </div>\n          <div class="bp-sm-font-size-xsmall bp-md-font-size-small bp-sm-column-50 bp-md-column-15 bp-gray bp-padding">\n            Due {{bill.dueDate | date:\'mediumDate\'}}\n          </div>\n          <div class="bp-sm-font-size-xsmall bp-md-font-size-small bp-sm-column-50 bp-md-column-25 bp-sm-text-right bp-md-text-left bp-padding bp-bills__center-medium-up">\n              <span class="bp-green bp-bills__status-badge" ng-class="{\n              \'bp-bills__status-badge__completed\': bill.status === \'complete\' || bill.status === \'paid\',\n              \'bp-bills__status-badge__cancelled\': bill.status === \'cancelled\',\n              \'bp-bills__status-badge__active\': bill.status === \'active\',\n              \'bp-bills__status-badge__sent\': bill.status === \'sent\',\n              \'bp-bills__status-badge__draft\': bill.status === \'draft\'}" lcl>{{bill.status}}</span>\n          </div>\n        </div>\n      </a>\n    </div>\n\n    <ion-infinite-scroll on-infinite="loadMore()" distance="1%" immediate-check="false" ng-if="moreAvailable"></ion-infinite-scroll>\n  </ion-content>\n\n</ion-view>\n'),e.put("components/bills/confirm-cancel-subscription-modal.html",'<ion-modal-view class="bp-bills__confirm-modal">\n  <ion-header-bar>\n    <div class="buttons">\n      <button class="button" ng-click="cancelSubscriptionCancellation($event)"><span class="ion-ios-close-empty"></span></button>\n    </div>\n    <h1 class="title">Confirm Cancel Repeating Bill</h1>\n  </ion-header-bar>\n  <ion-content class="center">\n\n    <div class="bp-constrain-signup bp-bills__confirm-modal__constrain">\n\n      <p lcl>Please type the buyer\'s email address "{{bill.email}}" to confirm that you want to cancel their repeating bill.</p>\n\n      <form bp-detect-submission name="confirmRemoveUserForm" novalidate ng-submit="confirmCancelSubscription()" class="padding-top" style="max-height:400px; max-width: 500px">\n\n        <div class="prelogin__fieldset">\n          <label class="signup__label" lcl>Buyer\'s email address</label>\n\n          <div class="prelogin__pass">\n            <div class="prelogin__pass__inputs">\n              <input type="text" class="prelogin__input" name="userEmail" ng-model="confirmedEmail" required>\n            </div>\n          </div>\n\n          <button ng-disabled="confirmedEmail != bill.email" type="submit" class="button bp-button button-warning" ladda="loginLoading" lcl>Cancel Repeating Bill</button>\n        </div>\n\n      </form>\n\n    </div>\n\n  </ion-content>\n</ion-modal-view>\n'),e.put("components/bills/confirm-delete-bill-modal.html",'<ion-modal-view class="bp-bills__confirm-modal">\n  <ion-header-bar>\n    <div class="buttons">\n      <button class="button" ng-click="cancelDeleteBill($event)"><span class="ion-ios-close-empty"></span></button>\n    </div>\n    <h1 class="title">Confirm Delete Bill</h1>\n  </ion-header-bar>\n  <ion-content class="center">\n\n    <div class="bp-constrain-signup bp-bills__confirm-modal__constrain">\n\n      <p lcl>Please type the buyer\'s email address "{{bill.email}}" to confirm that you want to delete their bill.</p>\n\n      <form bp-detect-submission name="confirmRemoveUserForm" novalidate ng-submit="confirmDeleteBill()" class="padding-top" style="max-height:400px; max-width: 500px">\n\n        <div class="prelogin__fieldset">\n          <label class="signup__label" lcl>Buyer\'s email address</label>\n\n          <div class="prelogin__pass">\n            <div class="prelogin__pass__inputs">\n              <input type="text" class="prelogin__input" name="userEmail" ng-model="confirmedEmail" required>\n            </div>\n          </div>\n\n          <button ng-disabled="confirmedEmail != bill.email" type="submit" class="button bp-button button-warning" ladda="loginLoading" lcl>Delete Bill</button>\n        </div>\n\n      </form>\n\n    </div>\n\n  </ion-content>\n</ion-modal-view>\n'),e.put("components/bills/details.html",'<ion-view view-title="{{ (newBill) ? \'New Bill\' : \'Bill Details\'}}" bp-back-button-sref="menu.bills" cache-view="false">\n  <ion-nav-title>\n    <div ng-class="{\'bp-bills__nav-title-has-subheader\': !newBill}">\n      <div class="bp-bills__nav-title-has-subheader__title">\n        <span ng-hide="newBill">Bill Details</span>\n        <span ng-show="newBill">New Bill</span>\n      </div>\n      <div class="bp-bills__nav-title-has-subheader__subtitle" ng-class="{\'active\': bill.status === \'active\', \'sent\': bill.status === \'sent\', \'complete\': bill.status === \'paid\' || bill.status === \'complete\', \'draft\': bill.status === \'draft\' }">{{bill.status}}</div>\n    </div>\n  </ion-nav-title>\n  <ion-nav-buttons side="secondary">\n    <div class="bp-bills__menu-buttons">\n      <div ng-click="showMorePopover($event); $event.stopPropagation();" class="button bp-bills__more-button" ng-hide="bill.status === \'paid\' || bill.status === \'complete\'">\n        <div class="bp-bills__more-button__text bp-bills__visible-medium-up">\n          More\n        </div>\n        <div class="bp-bills__more-button__arrow bp-bills__visible-medium-up">\n          <i class="ion-ios-arrow-down"></i>\n        </div>\n        <div class="bp-bills__visible-small-only bp-bills__more-button__dots">\n          <i class="ion-android-more-horizontal"></i>\n        </div>\n      </div>\n\n      <button ng-if="bill.isRepeating && !newBill && bill.status === \'active\'" class="bp-header-button bp-bills__btn-cancel" ng-click="cancelSubscription()" lcl>\n        Cancel<span class="bp-bills__visible-medium-up">Bill</span>\n      </button>\n      <button ng-if="bill.status === \'paid\' || bill.status === \'complete\'" class="bp-header-button" ng-click="duplicateBill()" lcl>\n        Duplicate\n      </button>\n\n      <a class="button bp-button bp-bills__menu-buttons__btn-send-bill" ng-click="sendBillOrCreateSubscription()" ng-disabled="(!forms.buyerInfoForm.$valid || !forms.billInfoForm.$valid) && sendBillOrCreateSubscriptionAttempted" ng-hide="hideSendButton()">\n          <div class="bp-bills__visible-medium-up">\n            <div ng-hide="bill.isRepeating">\n              <div ng-show="newBill || bill.status === \'draft\'" lcl>Send Bill</div>\n              <div ng-hide="newBill || bill.status === \'draft\'" lcl>Resend Bill</div>\n            </div>\n            <div ng-show="bill.isRepeating" lcl>Schedule Bill</div>\n          </div>\n          <div class="bp-bills__visible-small-only bp-bills__menu-buttons__btn-send-bill__plane-button"><i class="ion-ios-paperplane"></i></div>\n      </a>\n    </div>\n  </ion-nav-buttons>\n  <ion-content>\n    <div class="bp-alert" ng-show="saveSucceeded">\n      <div class="bp-alert__icon-box bp-alert__icon-box--green"><i class="icon ion-checkmark"></i></div>\n      <div class="bp-alert__content">\n        <span lcl>Your changes have been saved. </span>\n        <span lcl ng-show="bill.isRepeating && bill.status === \'active\'">\n          The next {{bill.pattern}} bill is scheduled to be delivered on {{bill.nextDelivery}} and will be due on {{bill.dueDate}}.\n        </span>\n      </div>\n    </div>\n\n    <div class="bp-alert" ng-show="resendSucceeded || sendSucceeded">\n      <div class="bp-alert__icon-box bp-alert__icon-box--green"><i class="icon ion-checkmark"></i></div>\n      <div class="bp-alert__content">\n        You successfuly <span ng-show="resendSucceeded">re</span>sent this bill to {{bill.email}}.\n      </div>\n    </div>\n\n    <div class="bp-alert" ng-show="isDuplicatedBill">\n      <div class="bp-alert__icon-box bp-alert__icon-box--green"><i class="icon ion-checkmark"></i></div>\n      <div class="bp-alert__content">\n        <span lcl>You successfuly created a duplicate bill. This bill is currently a draft and has not yet been sent.</span>\n      </div>\n    </div>\n\n    <div class="bp-alert" ng-show="unexpectedError">\n      <div class="bp-alert__icon-box bp-alert__icon-box--orange"><i class="icon ion-alert"></i></div>\n      <div class="bp-alert__content">\n        <span lcl>An unexpected error has occurred.</span>\n      </div>\n    </div>\n\n    <div class="bp-alert" ng-show="!newBill && bill.isRepeating && bill.status === \'active\' && !saveSucceeded && !sendSucceeded && !resendSucceeded && !unexpectedError && !isDuplicatedBill">\n      <div class="bp-alert__icon-box bp-alert__icon-box--green"><i class="icon ion-android-time"></i></div>\n      <div class="bp-alert__content">\n        <span lcl>\n          The next {{bill.pattern}} bill is scheduled to be delivered on {{bill.nextDelivery}} and will be due on {{bill.dueDate}}.\n        </span>\n      </div>\n    </div>\n\n    <div class="bp-pd__card-container">\n      <div class="card bp-pd__card bp-bills__card">\n\n        <form name="forms.buyerInfoForm" ng-submit="saveBuyerInformation(forms.buyerInfoForm)" autocomplete="off">\n\n          <div class="item item-divider bp-pd__card__title bp-bills__card-header">\n            <div class="bp-bills__card-header__title">Buyer Information</div>\n            <div class="bp-bills__card-header__edit" ng-show="bill.status === \'draft\'">\n              <a ng-click="editBuyerInformation()" ng-if="!editingBuyerInformation">\n                Edit\n              </a>\n              <span ng-if="editingBuyerInformation">\n                <button class="bp-bills__card-header__edit__save" type="submit" ng-disabled="!forms.buyerInfoForm.$valid">\n                  Save\n                </button>\n                or\n                <a class="bp-bills__card-header__edit__cancel" ng-click="cancelEditingBuyerInformation()">\n                  Cancel\n                </a>\n              </span>\n            </div>\n          </div>\n\n          <div class="bp-panel bp-bills__panel">\n            <div class="bp-pd__section" ng-class="{\'bp-bills__section-read-only\': !editingBuyerInformation}">\n\n              <div class="bp-bills__input-row">\n                <label style="max-width: 100%;">\n                  <div class="textfield-label" lcl>Email Address *</div>\n                  <input ng-if="!editingBuyerInformation" type="email" name="buyerEmail" placeholder="" ng-model="bill.email" ng-disabled="!editingBuyerInformation" required>\n                  <tags-input\n                    ng-if="editingBuyerInformation"\n                    ng-class="{\'max-reached\': buyerEmails.length > 0}"\n                    id="buyer-tags-input"\n                    ng-keydown="onBuyerKeyDown($event)"\n                    ng-model="buyerEmails"\n                    add-on-enter="true"\n                    min-tags="1"\n                    max-tags="1"\n                    display-property="text"\n                    key-property="id"\n                    on-tag-added="onBuyerEmailAdded($tag)"\n                    add-on-space="true"\n                    template="my-custom-template"\n                    allowed-tags-pattern="^(?:[\\w\\!\\#\\$\\%\\&\\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+\\.)*[\\w\\!\\#\\$\\%\\&\\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!\\.)){0,61}[a-zA-Z0-9]?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\\[(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\]))$">\n                  </tags-input>\n                  <script type="text/ng-template" id="my-custom-template">\n                    <div class="tag-template">\n                      <div style="display:flex; align-items:center;">\n                        <span>{{$getDisplayText()}}</span>\n                        <a class="remove-button" ng-click="$removeTag()">\n                          <i class="ion-ios-plus-outline"></i>\n                        </a>\n                      </div>\n                    </div>\n                  </script>\n                  <div class="input-validation"  ng-show="forms.buyerInfoForm.buyerEmail.$invalid && forms.buyerInfoForm.buyerEmail.$touched">\n                    <i class="generic-form-error icon-left assertive ion-android-close bp-error">\n                      <span class="dark padding-left" ng-if="forms.buyerInfoForm.buyerEmail.$error.required" lcl>Please enter the email address of the buyer.</span>\n                      <span class="dark padding-left" ng-if="forms.buyerInfoForm.buyerEmail.$error.email" lcl>Please enter a valid email address.</span>\n                    </i>\n                  </div>\n                </label>\n                <div class="add-cc-link" ng-click="showCc()" ng-hide="isCcShown || !editingBuyerInformation">Add Cc</div>\n              </div>\n\n              <div class="bp-bills__input-row" ng-show="isCcShown || (!editingBuyerInformation && bill.cc.length > 0)">\n                <label style="max-width: 100%;">\n                  <div class="textfield-label" lcl>Cc Recipients</div>\n                  <div class="input" style="opacity: .5;" ng-if="!editingBuyerInformation">{{getCcRecipientString()}}</div>\n                  <tags-input\n                    ng-if="editingBuyerInformation"\n                    ng-class="{\'max-reached\': ccEmails.length >= 3}"\n                    id="cc-tags-input"\n                    ng-keydown="onCcKeyDown($event)"\n                    ng-blur="onCcBlur()"\n                    ng-model="ccEmails"\n                    add-on-enter="true"\n                    min-tags="0"\n                    max-tags="3"\n                    display-property="text"\n                    key-property="id"\n                    on-tag-added="onCcEmailAdded($tag)"\n                    on-tag-removed="onCcEmailRemoved()"\n                    add-on-space="true"\n                    template="my-custom-template"\n                    allowed-tags-pattern="^(?:[\\w\\!\\#\\$\\%\\&\\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+\\.)*[\\w\\!\\#\\$\\%\\&\\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!\\.)){0,61}[a-zA-Z0-9]?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\\[(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\]))$">\n                  </tags-input>\n                  <div class="input-validation">\n                    <i class="generic-form-error icon-left assertive ion-android-close bp-error" ng-show="maxCcError">\n                      <span class="dark padding-left" ng-if="true" lcl>The maximum number of cc recipients is 3.</span>\n                    </i>\n                  </div>\n                </label>\n              </div>\n\n              <div class="bp-bills__input-row bp-bills__input-row__checkbox-row" ng-hide="!editingBuyerInformation">\n                <label class="bp-bills__checkbox">\n                  <input type="checkbox" name="includeBuyerAddress" ng-model="bill.includeBuyerAddress"> <span class="bp-bills__checkbox__label">Include buyer address</span>\n                </label>\n              </div>\n\n              <div class="bp-bills__input-row" ng-show="bill.includeBuyerAddress">\n                <label>\n                  <div class="textfield-label" lcl>Address</div>\n                  <input ng-disabled="!editingBuyerInformation" type="text" name="buyerAddress" ng-model="bill.address1" google-autocomplete="autofillAddress(data)" autocomplete="off" placeholder="{{(!editingBuyerInformation)? \'&mdash;\' : \'\'}}" >\n                </label>\n\n                <label>\n                  <div class="textfield-label" lcl>City</div>\n                  <input ng-disabled="!editingBuyerInformation" type="text" name="buyerCity" ng-model="bill.city" placeholder="{{(!editingBuyerInformation)? \'&mdash;\' : \'\'}}">\n                </label>\n\n                <label>\n                  <div class="textfield-label" lcl>State/Province</div>\n                  <input ng-disabled="!editingBuyerInformation" type="text" name="buyerState" placeholder="{{(!editingBuyerInformation)? \'&mdash;\' : \'\'}}" ng-model="bill.state">\n                </label>\n\n                <label>\n                  <div class="textfield-label" lcl>ZIP/Postal Code</div>\n                  <input ng-disabled="!editingBuyerInformation" type="text" name="buyerPostalCode" placeholder="{{(!editingBuyerInformation)? \'&mdash;\' : \'\'}}" ng-model="bill.zip">\n                </label>\n\n                <label>\n                  <div class="textfield-label" lcl>Country</div>\n                  <input ng-disabled="!editingBuyerInformation" type="text" name="buyerCountry" bp-country-input lcl-attr="placeholder" placeholder="{{(!editingBuyerInformation)? \'&mdash;\' : \'Begin typing...\'}}" ng-model="bill.country" typeahead="country.name as country.name for country in countries | typeaheadFilter:$viewValue" autocomplete=\'off\'/>\n                </label>\n              </div>\n\n            </div>\n          </div>\n        </form>\n\n        <form name="forms.billInfoForm" ng-submit="saveBillInformation(forms.billInfoForm);">\n\n          <div class="item item-divider bp-pd__card__title bp-bills__card-header">\n            <div class="bp-bills__card-header__title">Bill Info</div>\n            <div class="bp-bills__card-header__edit" ng-show="bill.status === \'draft\'">\n              <a ng-click="editBillInformation()" ng-if="!editingBillInformation">\n                Edit\n              </a>\n              <span ng-if="editingBillInformation">\n                <button class="bp-bills__card-header__edit__save" type="submit" ng-disabled="!forms.billInfoForm.$valid && billInfoFormSubmissionAttempted">\n                  Save\n                </button>\n                or\n                <a class="bp-bills__card-header__edit__cancel" ng-click="cancelEditingBillInformation()">\n                  Cancel\n                </a>\n              </span>\n            </div>\n          </div>\n\n          <div class="bp-panel bp-bills__panel">\n\n            <div class="bp-pd__section" ng-class="{\'bp-bills__section-read-only\': !editingBillInformation}">\n              <div class="bp-bills__input-row bp-bills__currency-row">\n\n                <label>\n                  <div class="textfield-label" lcl>Currency</div>\n                  <div class="bp-dropdown bp-bills__dropdown">\n                    <select ng-model="bill.currency" ng-disabled="!editingBillInformation">\n                      <option value="BTC">BTC - Bitcoin</option>\n                      <option value="BCH">BCH - Bitcoin Cash</option>\n                      <option value="" disabled="">----------</option>\n                      <option value="USD" selected="">USD - US Dollar</option>\n                      <option value="EUR">EUR - Eurozone Euro</option>\n                      <option value="GBP">GBP - Pound Sterling</option>\n                      <option value="" disabled="">----------</option>\n                      <option value="JPY">JPY - Japanese Yen</option>\n                      <option value="CAD">CAD - Canadian Dollar</option>\n                      <option value="AUD">AUD - Australian Dollar</option>\n                      <option value="CNY">CNY - Chinese Yuan</option>\n                      <option value="CHF">CHF - Swiss Franc</option>\n                      <option value="SEK">SEK - Swedish Krona</option>\n                      <option value="NZD">NZD - New Zealand Dollar</option>\n                      <option value="KRW">KRW - South Korean Won</option>\n\n                      <option ng-repeat="currency in currencies" value="{{currency.code}}">{{currency.code}} - {{currency.name}}</option>\n                    </select>\n                  </div>\n                </label>\n              </div>\n              <div class="bp-bills__input-row">\n                <datepicker-label>\n                  <div class="textfield-label" lcl>\n                    Due Date\n                  </div>\n                  <div>\n                    <datepicker date-format="shortDate" ng-disabled="!editingBillInformation">\n                      <input ng-model="bill.dueDate" type="text" name="dueDate" ng-change="dueDateChanged(forms.billInfoForm.dueDate)" required/>\n                    </datepicker>\n                  </div>\n                  <div class="input-validation"  ng-show="forms.billInfoForm.dueDate.$invalid && forms.billInfoForm.dueDate.$touched">\n                    <i class="generic-form-error icon-left assertive ion-android-close bp-error">\n                      <span class="dark padding-left" ng-if="forms.billInfoForm.dueDate.$error.required" lcl>Please enter a due date for this bill.</span>\n                      <span class="dark padding-left" ng-if="forms.billInfoForm.dueDate.$error.quarterlyMonth && !forms.billInfoForm.dueDate.$error.required" lcl>For quarterly bills, the due date must occur in either January, April, July, or October.</span>\n                      <span class="dark padding-left" ng-if="forms.billInfoForm.dueDate.$error.shortMonth && !forms.billInfoForm.dueDate.$error.required && !forms.billInfoForm.dueDate.$error.quarterlyMonth" lcl>For monthly bills, the due date cannot be later than the 28th of the month.</span>\n                    </i>\n                  </div>\n                </datepicker-label>\n\n                <label>\n                  <div class="textfield-label" lcl>Bill Number</div>\n                  <input type="text" name="buyerName" placeholder="{{(!editingBillInformation)? \'&mdash;\' : \'\'}}" ng-model="bill.number" ng-disabled="!editingBillInformation">\n                </label>\n              </div>\n\n              <div class="bp-bills__input-row bp-bills__input-row__checkbox-row" ng-hide="!editingBillInformation || !newBill">\n                <label class="bp-bills__checkbox">\n                  <input type="checkbox" name="repeat" ng-model="bill.isRepeating" ng-change="isRepeatingChanged()"> <span class="bp-bills__checkbox__label">This is a recurring bill</span>\n                </label>\n              </div>\n\n              <div class="bp-bills__input-row" ng-show="bill.isRepeating">\n                <label>\n                  <div class="textfield-label" lcl>Resend Every</div>\n                  <div class="bp-dropdown bp-bills__dropdown">\n                    <select ng-disabled="!editingBillInformation" ng-model="bill.pattern" ng-change="patternChanged()">\n                      <option value="weekly">Week</option>\n                      <option value="monthly">Month</option>\n                      <option value="quarterly">Quarter</option>\n                      <option value="yearly">Year</option>\n                    </select>\n                  </div>\n                </label>\n\n                <datepicker-label>\n                  <div class="textfield-label" lcl>Send On</div>\n                  <div>\n                    <datepicker date-format="shortDate">\n                      <input ng-disabled="!editingBillInformation" ng-model="bill.nextDelivery" name="nextDelivery" type="text" ng-change="nextDeliveryChanged(forms.billInfoForm.nextDelivery)" ng-required="bill.isRepeating"/>\n                    </datepicker>\n                  </div>\n                  <div class="input-validation"  ng-show="forms.billInfoForm.nextDelivery.$invalid && forms.billInfoForm.nextDelivery.$touched">\n                    <i class="generic-form-error icon-left assertive ion-android-close bp-error">\n                      <span class="dark padding-left" ng-if="forms.billInfoForm.nextDelivery.$error.required" lcl>Please enter a delivery date for this bill.</span>\n                      <span class="dark padding-left" ng-if="forms.billInfoForm.nextDelivery.$error.beforeDueDate && !forms.billInfoForm.nextDelivery.$error.required" lcl>The bill delivery date must be before the bill due date.</span>\n                      <span class="dark padding-left" ng-if="forms.billInfoForm.nextDelivery.$error.afterToday && !forms.billInfoForm.nextDelivery.$error.required && !forms.billInfoForm.nextDelivery.$error.beforeDueDate" lcl>The bill delivery date cannot be in the past.</span>\n                    </i>\n                  </div>\n                </datepicker-label>\n\n              </div>\n            </div>\n          </div>\n\n          <div class="bp-panel bp-bills__panel">\n\n            <div class="bp-pd__section" ng-class="{\'bp-bills__section-read-only\': !editingBillInformation}">\n              <div>\n                <div class="bp-bills__input-row bp-bills__item-row" ng-repeat="item in bill.items">\n\n                  <i ng-show="editingBillInformation && bill.items.length > 1" class="ion-ios-minus-outline" ng-click="deleteItem(item)"></i>\n\n                  <label class="bp-bills__input-row__item-label">\n                    <div class="textfield-label" ng-show="$first" lcl>Item</div>\n                    <input ng-disabled="!editingBillInformation" type="text" name="itemName" placeholder="" ng-model="item.description" class="item-text-label" ng-required="$first || (item.price || item.quantity)">\n                  </label>\n\n                  <label>\n                    <div class="textfield-label" ng-show="$first" lcl>Price</div>\n                    <input ng-disabled="!editingBillInformation" type="number" name="itemPrice" placeholder="" ng-model="item.price" ng-required="$first || (item.description || item.quantity)" min="0.000001" step="any">\n                  </label>\n\n                  <label>\n                    <div class="textfield-label" ng-show="$first" lcl>\n                      <span class="bp-bills__visible-small-only">Qty</span>\n                      <span class="bp-bills__visible-medium-up" lcl>Quantity</span>\n                    </div>\n                    <input ng-disabled="!editingBillInformation" type="number" name="itemQuantity" placeholder="" ng-model="item.quantity" ng-required="$first || (item.description || item.price)" min="0.000001" step="any">\n                  </label>\n\n                  <label class="bp-bills__input-row__amount-label">\n                    <div class="textfield-label" ng-show="$first" lcl>\n                      <span class="bp-bills__visible-small-only">Amt</span>\n                      <span class="bp-bills__visible-medium-up" lcl>Amount</span>\n                    </div>\n                    <div class="bp-bills__input-row__amount-label__amount">\n                      {{(item.price*item.quantity || 0 | currency: currencyCodeMap[bill.currency]) }}\n                    </div>\n                  </label>\n                </div>\n              </div>\n              <div class="bp-bills__add-item-row" ng-click="addItem()" ng-show="editingBillInformation">\n                <i class="ion-ios-plus-outline"></i>\n                <span class="bp-bills__add-item-row__text">Add Item</span>\n              </div>\n            </div>\n          </div>\n\n          <div class="item item-divider bp-pd__card__title bp-bills__card-footer" ng-class="{\'bp-bills__card-footer-paid\': bill.status === \'complete\' || bill.status === \'paid\'}">\n            <div class="bp-bills__card-footer__label">\n              <i ng-show="bill.status === \'complete\' || bill.status === \'paid\'" class="ion-checkmark-circled bp-bills__card-footer__label__paid-icon"></i>\n              <span ng-hide="bill.status === \'complete\' || bill.status === \'paid\'">Order Total</span>\n              <span ng-show="bill.status === \'complete\' || bill.status === \'paid\'">Paid</span>\n            </div>\n            <div class="bp-bills__card-footer__amount">{{getTotal(bill.items) || 0 | currency: orderTotalCurrencyCodeMap[bill.currency] }} {{bill.currency}}</div>\n          </div>\n        </form>\n\n      </div>\n    </div>\n\n  </ion-content>\n</ion-view>\n'),e.put("components/bills/more-popover.html",'<ion-popover-view class="bp-bills__more-popover">\n  <ul>\n    <li ng-click="createBillOrSubscriptionAsDraft(); morePopover.hide();" ng-show="newBill" ng-disabled="(forms.billInfoForm.$invalid || forms.billInfoForm.$invalid) && sendBillOrCreateSubscriptionAttempted" lcl>\n      <i class="ion-ios-paper-outline"></i>Save as draft\n    </li>\n    <li ng-click="duplicateBill(); morePopover.hide();" ng-hide="newBill" lcl>\n      <i class="ion-ios-browsers-outline"></i>Duplicate bill\n    </li>\n    <li class="bp-bills__red-text" ng-click="deleteBill(); morePopover.hide();" ng-hide="newBill || (!newBill && bill.isRepeating)" lcl>\n      <i class="ion-ios-trash-outline"></i>Delete\n    </li>\n    <li class="bp-bills__red-text" ng-click="cancelSubscription(); morePopover.hide();" ng-show="!newBill && bill.isRepeating && bill.status === \'draft\'" lcl>\n      <i class="ion-ios-trash-outline"></i>Delete\n    </li>\n  </ul>\n</ion-popover-view>\n'),e.put("components/dashboard/dashboard.html",'<ion-view class="overview" animation="fade-in" view-title="">\n  <div class="has-header iframe-scroll-hack ie-iframe-scroll-hack">\n    <iframe old-dashboard-frame type="text/html" width="100%" height="100%" ng-src="{{iFrameUrl}}" allowfullscreen frameborder="0"></iframe>\n  </div>\n</ion-view>\n'),e.put("components/getstarted/getstarted.html",'<ion-view view-title="Get Started" class="getstarted">\n  <ion-content>\n\n    <div class="bp-constrain-narrow getstarted">\n\n    <div class="getstarted__banner">\n      <div class="getstarted__banner__heading" ng-hide="remainingCount == 0" lcl>Welcome to BitPay, {{user.userFullName}}!</div>\n\n      <div class="getstarted__banner__subheading" ng-show="remainingCount > 1" lcl>You are {{remainingCount}} steps away from accepting bitcoin.</div>\n\n      <div class="getstarted__banner__subheading" ng-show="remainingCount == 1" lcl>You are 1 step away from accepting bitcoin.</div>\n\n      <div ng-show="remainingCount == 0">\n\n        <div class="bp-button-bar" style="margin-bottom: 11px" ng-show="user.requiredTier == 0">\n          <p lcl>You are ready to accept bitcoin!</p>\n          <a href="/dashboard" ng-click="refreshMenu()" class="button button-discouraged" lcl>Start Accepting\n            Bitcoin</a>\n        </div>\n\n        <div ng-show="user.requiredTier > 0">\n          Your account requires additional verification before you can process payments.<br>\n          <a ui-sref="menu.verification" ng-click="refreshMenu()" class="button">\n            Complete verification &rsaquo;\n          </a>\n        </div>\n\n      </div>\n\n    </div>\n\n    <div class="getstarted__list list list__padded">\n\n      <div class="getstarted__list__item item item-thumbnail-left item-text-wrap list__item--highlight"\n         ng-class="{ \'getstarted__list__item--completed\': user.verified }">\n\n        <img class="getstarted__list__item__icon" ng-if="!user.verified" src="img/getstarted/envelope.svg">\n        <img class="getstarted__list__item__icon" ng-if="user.verified" src="img/getstarted/envelope-tick.svg">\n        <div class="getstarted__list__item__heading" lcl>Confirm your Email</div>\n        <p class="getstarted__list__item__text" ng-hide="user.verified" lcl>Please click the link we sent to <strong>{{user.email}}</strong>.</p>\n        <p class="getstarted__list__item__text" ng-show="user.verified" lcl>Nice! your email address has been confirmed.</p>\n        <a class="getstarted__list__item__link" ng-hide="user.verified" ui-sref="menu.updateEmailAddress" lcl>Resend or change address</a>\n\n      </div>\n\n      <a class="getstarted__list__item item item-thumbnail-left item-text-wrap"\n         ng-class="{\'list__item--highlight\': user.verified, \'getstarted__list__item--completed\': !user.appliedTier || user.appliedTier > -1 }" ui-sref="menu.verification0">\n\n        <img class="getstarted__list__item__icon" ng-if="!(!user.appliedTier || user.appliedTier > -1)" src="img/getstarted/stamp.svg">\n        <img class="getstarted__list__item__icon" ng-if="!user.appliedTier || user.appliedTier > -1" src="img/getstarted/stamp-tick.svg">\n\n        <div class="getstarted__list__item__heading"><span lcl>Get Verified</span>&nbsp;&rsaquo;</div>\n\n        <p class="getstarted__list__item__text" ng-hide="!user.appliedTier || user.appliedTier > -1" lcl>Verify your business for basic payment processing.</p>\n        <p class="getstarted__list__item__text" ng-show="!user.appliedTier || user.appliedTier > -1" lcl>Great! We\'re reviewing your verification information and will get back to you shortly.</p>\n\n      </a>\n\n      <a class="getstarted__list__item item item-thumbnail-left item-text-wrap"\n         ng-class="{\'list__item--highlight\': user.appliedTier > -1, \'getstarted__list__item--completed\': user.payoutInfo }"\n         ui-sref="menu.settings.settlement">\n\n\n        <img class="getstarted__list__item__icon" ng-if="!user.payoutInfo" src="img/getstarted/bank.svg">\n        <img class="getstarted__list__item__icon" ng-if="user.payoutInfo" src="img/getstarted/bank-tick.svg">\n\n        <div class="getstarted__list__item__heading"><span lcl>Add a Bank Account</span>&nbsp;&rsaquo;</div>\n        <p class="getstarted__list__item__text" lcl>Add a bank account or bitcoin address to receive settlement for payments.</p>\n\n      </a>\n\n\n    </div>\n\n    </div>\n\n  </ion-content>\n</ion-view>\n'),e.put("components/landing/landing.html",'<ion-view view-title="BitPay" class="landing">\n  <ion-content class="center">\n    <div>\n      <div class="text-center">\n        <img class="landing-container__logo" src="img/bitpay-logo.svg">\n      </div>\n      <div style="max-width: 200px; margin: auto">\n        <a class="button button-outline button-block landing__button" ui-sref="signup" lcl>Sign Up</a>\n        <a class="button button-clear button-block landing__button" ui-sref="login" lcl>Login</a>\n      </div>\n    </div>\n  </ion-content>\n</ion-view>\n'),e.put("components/login/login.html",'<ion-view view-title="Login" hide-nav-bar="true" class="prelogin">\n  <ion-content class="bp-no-header">\n\n    <div class="bp-constrain-login">\n\n      <div class="prelogin__logo-container">\n        <a href="/"><img src="img/bitpay-logo-inverse-cropped.svg" class="prelogin__logo"></a>\n      </div>\n\n      <alert animation="slide-in-up" style="width: 100%;" show="alert.type" type="alert.type">\n        {{alert.message}}\n      </alert>\n      <alert animation="slide-in-up" show="loginFailed" lcl>\n        Could not log in. Please review your information and try again.\n      </alert>\n      <alert animation="slide-in-up" show="tooManyAttempts" lcl>\n        You have tried to log in too many times in a short period of time. If you have forgotten your password, you\n        may reset it <a ui-sref="forgotPassword">here</a>.\n      </alert>\n      <alert animation="slide-in-up" show="redirect" lcl>\n        Please log in to proceed.\n      </alert>\n\n      <form bp-detect-submission name="loginForm" novalidate ng-submit="signin(loginForm)">\n\n        <div class="prelogin__fieldset">\n          <input placeholder="Email" name="email" type="email" ng-model="login.email" class="prelogin__input" bp-auto-focus\n                 required>\n\n          <i class="prelogin__validation icon-left ion-android-close"\n             ng-show="loginForm.submissionAttempted && loginForm.email.$invalid && loginForm.email.hasVisited">\n            <span lcl>Please enter a valid email address.</span></i>\n        </div>\n\n        <div class="prelogin__fieldset">\n          <div class="prelogin__pass">\n\n            <div class="prelogin__pass__inputs">\n              <input ng-if="login.showPasswordInClearText" type="text" ng-model="login.password" class="prelogin__input"\n                     ng-change="evaluateMeter()" name="password" ng-focus="showPasswordHelptext=true"\n                     placeholder="Password" required autocomplete="off">\n\n              <input ng-if="!login.showPasswordInClearText" type="password" ng-model="login.password" class="prelogin__input"\n                     ng-change="evaluateMeter()" name="password" ng-focus="showPasswordHelptext=true" id="Password"\n                     placeholder="Password" required>\n            </div>\n\n            <button on-touch="login.showPasswordInClearText = !login.showPasswordInClearText" type="button"\n                    class="prelogin__pass__toggle">\n              <span ng-hide="login.showPasswordInClearText" lcl>Show Pass</span>\n              <span ng-show="login.showPasswordInClearText" lcl>Hide Pass</span>\n            </button>\n          </div>\n\n          <i class="prelogin__validation icon-left ion-android-close"\n             ng-show="loginForm.submissionAttempted && loginForm.password.$invalid && loginForm.password.hasVisited">\n            <span lcl>Please enter a password.</span></i>\n\n        </div>\n\n        <button type="submit" class="button bp-button prelogin__button" ladda="loginLoading" lcl>Login</button>\n\n      </form>\n\n      <div class="prelogin__footer">\n        <div><a ui-sref="forgotPassword" lcl>Forgot your Password?</a></div>\n        <div><a ui-sref="signup">Sign Up</a></div>\n      </div>\n\n\n    </div>\n  </ion-content>\n</ion-view>\n'),e.put("components/login/two-factor.html",'<ion-view view-title="2-Step Verification" hide-nav-bar="true" class="prelogin">\n  <ion-content class="bp-no-header">\n\n    <div class="bp-constrain-login">\n\n      <div class="prelogin__logo-container" style="padding-bottom: 0">\n        <!-- Logo -->\n        <span ng-if="cobrand && cobrand.logoWhite">\n          <img src={{cobrand.logoWhite}} class="cobrand"><br/>\n        </span>\n\n        <a href="/"><img src="img/bitpay-logo-inverse-cropped.svg" class="prelogin__logo"></a>\n      </div>\n\n      <div class="prelogin__headline" lcl>2-Step Verification</div>\n\n      <!-- Server Alerts -->\n      <alert animation="slide-in-up" show="alert.type" type="alert.type">{{alert.message}}</alert>\n      <alert animation="slide-in-up" show="loginFailed" lcl>\n        Invalid verification code. Please try again.\n      </alert>\n      <alert animation="slide-in-up" show="tooManyAttempts" lcl>\n        You have tried to log in too many times in a short period of time. Please wait a few minutes and try again.\n      </alert>\n\n      <div class="prelogin__instructions">Enter the verification code generated by the authenticator app on your phone.</div>\n\n      <form bp-detect-submission name="twoFactorForm" class="prelogin__form" novalidate ng-submit="verifyTwoFactorCode(twoFactorForm)">\n        <!-- verification Code -->\n        <div class="prelogin__fieldset">\n          <label class="signup__label" for="twoFactorCode" lcl>Verification Code</label>\n          <input id="twoFactorCode" type="text" name="twoFactorCode" ng-model="login.twoFactorCode" class="prelogin__input" bp-auto-focus required>\n\n          <i class="prelogin__validation icon-left ion-android-close"\n             ng-show="twoFactorForm.submissionAttempted && twoFactorForm.twoFactorCode.$invalid && twoFactorForm.twoFactorCode.hasVisited">\n            <span lcl>Please enter your two-factor verification code.</span></i>\n        </div>\n\n        <!-- Submit Button -->\n        <button type="submit" ladda="loginLoading" class="button bp-button prelogin__button" data-style="zoom-in" data-spinner-size="40">Verify\n        </button>\n\n      </form>\n\n    </div>\n\n  </ion-content>\n</ion-view>\n'),e.put("components/menu/menu.html",'<ion-side-menus>\n\n  <!-- this is where the content of the page gets loaded -->\n  <ion-side-menu-content drag-content="false">\n    <ion-nav-bar class="bp-nav-bar" align-title="center">\n\n      <ion-nav-buttons side="left">\n        <button ng-show="backButton.isVisible" class="button button-icon icon ion-chevron-left bp-back-button" ng-click="onBackButtonClicked()"></button>\n        <button ng-hide="backButton.isVisible" class="button button-icon icon ion-navicon" ng-click="onMenuButtonClicked()"></button>\n      </ion-nav-buttons>\n\n    </ion-nav-bar>\n\n    <ion-nav-view name="menuContent"></ion-nav-view>\n  </ion-side-menu-content>\n\n  <!-- this is the content of the left menu -->\n  <ion-side-menu side="left" class="menu--dark" show-aside-when="(min-width:64.063em)">\n\n\n    <div class="bp-org-menu" >\n      <a href="/">\n        <div class="bp-org-menu__brand">\n          <img src="img/bitpay-logo.svg">\n        </div>\n      </a>\n      <div class="bp-org-menu__org-switcher" ng-click="showOrgPopover($event)">\n        <span class="bp-org-menu__org-switcher__name">{{user.merchantName}}</span>\n        <i class="icon ion-chevron-down bp-org-menu__org-switcher__arrow" ng-show="countOrgs() > 1 || hasDebitCard"></i>\n      </div>\n    </div>\n\n    <div class="bp-user-menu">\n      <div class="bp-user-menu__user" ng-click="showUserPopover($event)">\n        <gravatar class="bp-user-menu__user__icon" user-email="user.email" size="24"></gravatar>\n        <span class="bp-user-menu__user__name">{{user.userFullName}}</span>\n        <i class="icon ion-chevron-up bp-user-menu__user__arrow"></i>\n      </div>\n      <!-- <button class="bp-user-menu__intercom" ng-click="toggleIntercom()">\n        <i class="icon ion-help-circled"></i>\n      </button> -->\n    </div>\n\n    <ion-content class="bp-nav-menu">\n\n      <ion-list class="menu__item-ion-list">\n\n        <div ng-hide="isCompleteMenu" class="nav-items">\n          <ion-item menu-close ui-sref-active="menu__active" ui-sref="menu.getstarted">\n            <span class="menu__icon"><i class="icon ion-ios-pulse-strong"></i></span>\n            <span lcl>Get Started</span>\n          </ion-item>\n        </div>\n\n        <div ng-show="isCompleteMenu" class="nav-items">\n\n          <div>\n            <ion-item menu-close ui-sref-active="menu__active" ui-sref="menu.overview" bp-facades>\n              <span class="menu__icon"><i class="icon ion-stats-bars"></i></span>\n              <span lcl>Overview</span>\n              <i class="menu__icon--right ion-locked" ng-show="bpFacadesUnauthorized"></i>\n            </ion-item>\n          </div>\n\n          <div>\n            <ion-item menu-close ui-sref-active="menu__active" ui-sref="menu.payments" bp-facades>\n              <span class="menu__icon"><i class="icon ion-ios-pulse-strong"></i></span>\n              <span lcl>Payments</span>\n              <i class="menu__icon--right ion-locked" ng-show="bpFacadesUnauthorized"></i>\n            </ion-item>\n          </div>\n\n          <div>\n            <ion-item menu-close ui-sref-active="menu__active" ui-sref="menu.paymentTools" bp-facades>\n              <span class="menu__icon"><i class="icon ion-cube"></i></span>\n              <span lcl>Payment Tools</span>\n              <i class="menu__icon--right ion-locked" ng-show="bpFacadesUnauthorized"></i>\n            </ion-item>\n          </div>\n\n          <div>\n            <ion-item menu-close ui-sref-active="menu__active" ui-sref="menu.settings.general" ng-if="!hasOnlyFinanceFacade" bp-facades>\n              <span class="menu__icon"><i class="icon ion-gear-a"></i></span>\n              <span lcl>Settings</span>\n              <i class="menu__icon--right ion-locked" ng-show="bpFacadesUnauthorized"></i>\n            </ion-item>\n            <ion-item menu-close ui-sref-active="menu__active" ui-sref="menu.settings.settlement" ng-if="hasOnlyFinanceFacade" bp-facades>\n              <span class="menu__icon"><i class="icon ion-gear-a"></i></span>\n              <span lcl>Settings</span>\n              <i class="menu__icon--right ion-locked" ng-show="bpFacadesUnauthorized"></i>\n            </ion-item>\n          </div>\n\n          <ion-item menu-close ui-sref-active="menu__active" ng-show="referralEnabled" ui-sref="menu.dashboard({ page: \'referrals\' })">\n            <span class="menu__icon"><i class="icon ion-ios-people"></i></span>\n            <span lcl>Referrals</span>\n          </ion-item>\n\n        </div>\n\n        <div class="help-items">\n\n          <div>\n            <ion-item class="item-help" menu-close href="https://bitpay.com/docs" target="blank" >\n              <span class="menu__icon"><i class="icon ion-document"></i></span>\n              <span lcl class="item-help__text">Documentation</span>\n            </ion-item>\n          </div>\n\n          <div>\n            <ion-item class="item-help" menu-close href="https://help.bitpay.com" target="blank" style="margin-bottom: -15px;">\n              <span class="menu__icon"><i class="icon ion-ios-medkit-outline"></i></span>\n              <span lcl class="item-help__text">Help & Support</span>\n            </ion-item>\n          </div>\n\n        </div>\n\n      </ion-list>\n\n    </ion-content>\n  </ion-side-menu>\n\n</ion-side-menus>\n'),e.put("components/menu/org-popover.html",'<ion-popover-view class="bp-popover">\n  <ul class="popover-list">\n    <li ng-repeat="org in orgs"><a ng-click="switchOrg(org.numericId)">{{org.name}}</a></li>\n    <li ng-show="hasDebitCard"><a href="/card/dashboard">BitPay Card</a></li>\n  </ul>\n</ion-popover-view>'),e.put("components/menu/popover.html",'<ion-popover-view class="popover--user">\n  <ion-content>\n    <ul class="list">\n      <li class="item" ng-click="goToMyAccount()" lcl>My Account</li>\n      <li class="item" ng-click="signOut()" lcl>Sign Out</li>\n    </ul>\n  </ion-content>\n</ion-popover-view>'),e.put("components/menu/user-popover.html",'<ion-popover-view class="bp-popover">\n  <ul class="popover-list">\n    <li ui-sref="menu.userSettings">\n      <a ng-click="closeMenu()" lcl>User Settings</a>\n    </li>\n    <li>\n      <a ng-click="signOut()" lcl>Sign out</a>\n    </li>\n  </ul>\n</ion-popover-view>\n'),e.put("components/overview/overview.html",'<ion-view class="bp-overview" view-title="Overview">\n  <ion-content has-subheader="true">\n\n    <div class="bar bar-subheader bp-overview__subheader">\n      <strong class="bp-overview__subheader-title">Daily Revenue</strong>\n      <span class="bp-overview__timeframe">Last 30 days</span>\n      <div class="bp-overview__button-container">\n        <button ng-repeat="(name, currencyObj) in balances" class="bp-header-button {{(selectedCurrency!==name) ? \'bp-header-button--inactive\':\'\'}}" ng-click="getGraphData(\'{{name}}\', {{currencyObj}})">{{name}}</button>\n      </div>\n    </div>\n\n    <div class="bp-overview__chart-container">\n      <div class="bp-overview-chart" id="chart"></div>\n    </div>\n\n    <div class="bp-constrain-overview">\n      <div class="bp-padding bp-lg-pad-sides-50 bp-margin-top bp-margin-top-20" ng-show="needsDocs || dailyLimit || suspended || user.merchantReverify">\n\n        <h4 ng-show="suspended || (!suspended && needsDocs) || (!suspended && !needsDocs && dailyLimit && canRequestTierIncrease) || user.merchantReverify || !user.userOtpEnabled" lcl>Next Steps</h4>\n\n        <div class="row">\n          <div class="list bp-overview__list responsive-sm">\n            <div class="item item-icon-right bp-overview__item" ng-show="suspended" onclick="window.location.href = \'mailto:compliance@bitpay.com\';">\n              <span>Transaction capabilities are not currently enabled for your account, please email <a href="mailto:compliance@bitpay.com">compliance@bitpay.com</a> to inquire further.</span>\n              <i class="icon icon-right ion-ios-arrow-right bp-overview__arrow"></i>\n            </div>\n            <div class="item item-icon-right bp-overview__item" ng-show="!suspended && needsDocs" ui-sref="menu.verification">\n              <span>Hi, it looks like our compliance department needs some additional information from you before transaction capabilities can be enabled. Please click <a ui-sref="menu.verification">here</a> to continue.</span>\n              <i class="icon icon-right ion-ios-arrow-right bp-overview__arrow"></i>\n            </div>\n            <div class="item item-icon-right bp-overview__item" ng-show="!user.userOtpEnabled" ui-sref="menu.userSettingsSecurity">\n              <span><a ui-sref="menu.userSettingsSecurity">Enable two-factor authentication</a> to secure your account.</span>\n              <i class="icon icon-right ion-ios-arrow-right bp-overview__arrow"></i>\n            </div>\n            <div class="item item-icon-right bp-overview__item" ng-show="!suspended && !needsDocs && dailyLimit && canRequestTierIncrease" ui-sref="menu.verification">\n              <span>You are currently enabled for up to ${{dailyLimit | number:0}}/day<span ng-show="annualLimit">,  ${{user.tier.annualLimit | number:0}}/year</span>. Would you like to <a ui-sref="menu.verification">raise your limit</a>?</span>\n              <i class="icon icon-right ion-ios-arrow-right bp-overview__arrow"></i>\n            </div>\n            <div class="item item-icon-right bp-overview__item" ng-show="user.merchantReverify" ui-sref="menu.verification0">\n              <span>You can now <a ui-sref="menu.verification0">update the verification data</a> for your account.</span>\n              <i class="icon icon-right ion-ios-arrow-right bp-overview__arrow"></i>\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n      <div class="bp-overview__balances bp-padding bp-lg-pad-sides-50 bp-margin-top-20">\n\n        <h4>Pending Settlement</h4>\n\n        <div class="row">\n          <div class="list bp-overview__list">\n            <div\n              class="item item-icon-right bp-overview__balances__currency bp-overview__item"\n              style="{{canViewLedgers ? \'\' : \'cursor:default;\'}}"\n              ng-repeat="(name, currencyObj) in activeBalances"\n              ui-sref="{{permittedLedgerState(name)}}">\n\n              <div class="bp-overview__balances__currency__image bp-overview__balances__{{name}}__image">\n                <img ng-src="img/currencies/{{name}}.png" />\n              </div>\n\n              <div class="bp-overview__balances__currency__text">\n                <div class="bp-overview__balances__currency__text__name">\n                  {{name}}\n                  <span class="bp-overview__balances__currency__text__name__mobile-amount">&mdash; {{ currencyObj.amount | currency:currencyObj }}</span>\n                </div>\n                <div class="bp-overview__balances__currency__text__amount">\n                {{ currencyObj.amount | currency:currencyObj }}\n                </div>\n                <div class="bp-overview__balances__currency__text__status" ng-hide="accountOnHold">\n                    <div class="bp-overview__balances__currency__text__status__circle" ng-class="{\'bp-overview__green\': currencyObj.amount >= currencyObj.settlementMinimum, \'bp-overview__yellow\': currencyObj.amount < currencyObj.settlementMinimum}"></div>\n                    <span ng-hide="currencyObj.amount < currencyObj.settlementMinimum">\n                      Next expected settlement:\n                      <span class="bp-overview__balances__currency__text__status__message">\n                        <bp-settlement-date date="currencyObj.nextSettlementDate"></bp-settlement-date>\n                        <i class="ion ion-asterisk bp-overview__upgrade-hint" ng-show="planId === 1 && currencyObj.name != \'Bitcoin\'"></i>\n                      </span>\n                    </span>\n                    <span ng-show="currencyObj.amount < currencyObj.settlementMinimum">\n                      {{currencyObj.settlementMinimum | currency:currencyObj}} balance required\n                    </span>\n                </div>\n                <div class="bp-overview__balances__currency__text__status" ng-show="accountOnHold">\n                    <div class="bp-overview__balances__currency__text__status__circle bp-overview__red"></div>\n                    <span class="bp-overview__balances__currency__text__status__message">\n                      Settlements on hold\n                      <i class="ion ion-asterisk bp-overview__upgrade-hint"></i>\n                    </span>\n                  </span>\n                </div>\n              </div>\n              <i class="icon icon-right ion-ios-arrow-right bp-overview__arrow" ng-if="canViewLedgers"></i>\n            </div>\n          </div>\n        </div>\n\n        <p class="bp-overview__asterisk-footer" ng-show="planId === 1 && !accountOnHold && !bitcoinOnly && someBalancesAboveMinimum">\n          <i class="ion ion-asterisk bp-overview__asterisk-footer__asterisk"></i>\n          Since you are on the Starter Plan, funds are settled to your bank account on a weekly basis. You can upgrade to daily settlements with our\n          <a ui-sref="menu.planSettings">Business Plan</a>.\n        </p>\n        <p class="bp-overview__asterisk-footer" ng-show="accountOnHold">\n          <i class="ion ion-asterisk bp-overview__asterisk-footer__asterisk"></i>\n          Your account settlements are on hold. If this is unexpected, <a ng-click="openIntercom()">please send us a message</a>. We\'d be happy to help.\n        </p>\n\n      </div>\n\n      <div class="bp-overview__balances bp-padding bp-lg-pad-sides-50 bp-margin-top-20" ng-show="inactiveBalances">\n\n        <h4>Inactive Ledgers</h4>\n\n        <p>\n          You may reactivate settlement for any of the following currencies by updating your <a ui-sref="menu.settings.settlement">settlement settings</a>.\n        </p>\n\n        <div class="row">\n          <div class="list bp-overview__list">\n            <div\n              class="item item-icon-right bp-overview__balances__currency bp-overview__item"\n              style="{{canViewLedgers ? \'\' : \'cursor:default;\'}}"\n              ng-repeat="(name, currencyObj) in inactiveBalances"\n              ui-sref="{{permittedLedgerState(name)}}">\n\n              <div class="bp-overview__balances__currency__image bp-overview__balances__{{name}}__image">\n                <img ng-src="img/currencies/{{name}}.png" />\n              </div>\n\n              <div class="bp-overview__balances__currency__text">\n                <div class="bp-overview__balances__currency__text__name">\n                  {{name}}\n                  <span class="bp-overview__balances__currency__text__name__mobile-amount">&mdash; {{ currencyObj.amount | currency:currencyObj }}</span>\n                </div>\n                <div class="bp-overview__balances__currency__text__amount">\n                {{ currencyObj.amount | currency:currencyObj }}\n                </div>\n              </div>\n              <i class="icon icon-right ion-ios-arrow-right bp-overview__arrow" ng-if="canViewLedgers"></i>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  </ion-content>\n</ion-view>\n'),e.put("components/password/cancelReset.html",'<ion-view view-title="Forgot Password" hide-nav-bar="true" class="prelogin">\n  <ion-content class="bp-no-header">\n\n    <div class="bp-constrain-login">\n\n      <div class="prelogin__logo-container" style="padding-bottom: 0">\n        <a href="/"><img src="img/bitpay-logo-inverse-cropped.svg" class="prelogin__logo"></a>\n      </div>\n\n      <div class="prelogin__headline" lcl>Password Reset Canceled</div>\n\n      <alert animation="slide-in-up" style="width: 100%;" show="alert.type" type="alert.type">\n        {{alert.message}}\n      </alert>\n\n      <div class="bp-loading-row" ng-hide="passwordResetCleared || error" ng-class="{ \'active\': isLoading }">\n        <ion-spinner></ion-spinner>\n      </div>\n      <p ng-show="error">{{error}}</p>\n      <p ng-show="passwordResetCleared">This password reset token has been invalidated.</p>\n\n    </div>\n  </ion-content>\n</ion-view>\n'),e.put("components/password/change.html",'<ion-view view-title="Change Password" bp-back-button-sref="menu.userSettings" class="prelogin">\n  <ion-content class="has-header">\n\n    <div class="bp-constrain-login" style="padding-top: 30px;">\n\n      <div class="alert alert-warning" ng-show="serverError" ng-switch="serverError.type" style="margin-bottom: 25px;">\n        <span ng-switch-when="Old password was incorrect">\n          The current password you have entered is incorrect. Please try again.\n        </span>\n        <span ng-switch-when="Rate Limited">\n          You have attempted to change your password too many times in a short amount of time. Please try again later.\n        </span>\n        <span ng-switch-default>\n          An unexpected error has occured. Please try again later.\n        </span>\n      </div>\n\n      <div class="prelogin__validation" ng-show="formSuccess">\n        <span lcl>\n          Please <a ui-sref=\'login\'>login</a> using your new password.\n        </span>\n      </div>\n\n      <form bp-detect-submission name="resetForm" novalidate ng-show="!formSuccess" ng-submit="changePassword(resetForm)">\n\n        <div class="prelogin__fieldset" style="margin-bottom: 25px;">\n          <label class="signup__label" for="newPassword" lcl>Current Password</label>\n\n          <div class="prelogin__pass">\n\n            <div class="prelogin__pass__inputs">\n              <input ng-if="!showCurrentPasswordInClearText" type="password" ng-model="reset.currentPassword" class="prelogin__input" name="currentPassword" required>\n\n              <input ng-if="showCurrentPasswordInClearText" type="text" ng-model="reset.currentPassword" class="prelogin__input" name="currentPasswordText" autocomplete="off" required>\n            </div>\n\n            <button tabindex="-1" on-touch="showCurrentPasswordInClearText = !showCurrentPasswordInClearText" type="button" class="prelogin__pass__toggle">\n              <span ng-hide="showCurrentPasswordInClearText" lcl>Show Pass</span>\n              <span ng-show="showCurrentPasswordInClearText" lcl>Hide Pass</span>\n            </button>\n          </div>\n\n          <div class="prelogin__validation" ng-show="resetForm.currentPassword.$invalid && resetForm.submissionAttempted">\n            <i class="prelogin__validation icon-left ion-android-close"></i>\n            <span lcl>Please enter your current password.</span>\n          </div>\n\n        </div>\n\n        <div class="prelogin__fieldset">\n          <label class="signup__label" for="newPassword" lcl>New Password</label>\n\n          <div class="prelogin__pass">\n\n            <div class="prelogin__pass__inputs">\n              <input ng-if="!showPasswordInClearText" type="password" ng-model="reset.newPassword" class="prelogin__input" ng-change="evaluateMeter()" name="newPassword" ng-focus="showPasswordHelptext=true" ng-blur="passwordFieldBlurred=true" required>\n\n              <input ng-if="showPasswordInClearText" type="text" ng-model="reset.newPassword" class="prelogin__input" ng-change="evaluateMeter()" name="newPassword" ng-focus="showPasswordHelptext=true" ng-blur="passwordFieldBlurred=true" autocomplete="off"  required>\n            </div>\n\n            <button tabindex="-1" on-touch="showPasswordInClearText = !showPasswordInClearText" type="button" class="prelogin__pass__toggle">\n              <span ng-hide="showPasswordInClearText" lcl>Show Pass</span>\n              <span ng-show="showPasswordInClearText" lcl>Hide Pass</span>\n            </button>\n          </div>\n\n          <div class="prelogin__validation" ng-show="(!passwordIsStrong || resetForm.newPassword.$invalid) && resetForm.submissionAttempted">\n            <i class="prelogin__validation icon-left ion-android-close"></i>\n            <span ng-show="!passwordIsStrong && !resetForm.newPassword.$error.required" lcl>Password must include at least 8 characters: uppercase, lowercase, and numbers.</span>\n            <span ng-show="resetForm.newPassword.$error.required">\n              Please enter a new password.\n            </span>\n          </div>\n\n        </div>\n\n        <button ng-disabled="( (resetForm.$invalid || !formValid() ) && resetForm.submissionAttempted) || formDone" type="submit" class="button bp-button prelogin__button" ladda="loginLoading" lcl>Change Password</button>\n\n      </form>\n\n    </div>\n  </ion-content>\n</ion-view>\n'),e.put("components/password/forgot.html",'<ion-view view-title="Forgot Password" hide-nav-bar="true" class="prelogin">\n  <ion-content class="bp-no-header">\n\n    <div class="bp-constrain-login">\n\n      <div class="prelogin__logo-container" style="padding-bottom: 0">\n        <a href="/"><img src="img/bitpay-logo-inverse-cropped.svg" class="prelogin__logo"></a>\n      </div>\n\n      <div class="prelogin__headline" lcl>Forgot Password</div>\n\n      <alert animation="slide-in-up" style="width: 100%;" show="alert.type" type="alert.type">\n        {{alert.message}}\n      </alert>\n\n      <form bp-detect-submission name="forgotForm" novalidate ng-submit="sendForgot(forgotForm)">\n\n        <div class="prelogin__fieldset">\n          <label class="signup__label" for="email" lcl="">Email</label>\n          <input name="email" type="email" ng-model="forgot.email" class="prelogin__input" autofocus required>\n\n          <i class="prelogin__validation icon-left ion-android-close"\n             ng-show="forgotForm.submissionAttempted && forgotForm.email.$invalid && forgotForm.email.hasVisited">\n            <span lcl>Please enter a valid email address.</span></i>\n        </div>\n\n        <div id="captcha"></div>\n\n        <button ng-disabled="forgot.submitDisabled" type="submit" class="button bp-button prelogin__button" ladda="loginLoading" lcl>Reset Password</button>\n\n      </form>\n\n    </div>\n  </ion-content>\n</ion-view>\n'),e.put("components/password/reset.html",'<ion-view view-title="Reset Password" hide-nav-bar="true" class="prelogin">\n  <ion-content class="bp-no-header">\n\n    <div class="bp-constrain-login">\n\n      <div class="prelogin__logo-container" style="padding-bottom: 0">\n        <a href="/"><img src="img/bitpay-logo-inverse-cropped.svg" class="prelogin__logo"></a>\n      </div>\n\n      <div class="prelogin__headline" lcl>Reset Password</div>\n\n      <alert animation="slide-in-up" style="width: 100%;" show="alert.type" type="alert.type">\n        {{alert.message}}\n      </alert>\n\n      <div class="prelogin__validation" ng-show="formSuccess">\n        <p lcl>Please login to either your <a ui-sref="login">merchant dashboard</a> or your <a href="/card/login">debit card account</a> using your new password.</p>\n      </div>\n\n      <form bp-detect-submission name="resetForm" novalidate ng-show="!formSuccess" ng-submit="resetPassword(resetForm)">\n\n        <div class="prelogin__fieldset">\n          <label class="signup__label" for="newPassword" lcl>New Password</label>\n\n          <div class="prelogin__pass">\n\n            <div class="prelogin__pass__inputs">\n              <input ng-hide="showPasswordInClearText" type="password" ng-model="reset.newPassword" class="prelogin__input" ng-change="evaluateMeter()" name="newPassword" ng-focus="showPasswordHelptext=true" ng-blur="passwordFieldBlurred=true" required>\n\n              <input ng-show="showPasswordInClearText" type="text" ng-model="reset.newPassword" class="prelogin__input" ng-change="evaluateMeter()" name="newPassword" ng-focus="showPasswordHelptext=true" ng-blur="passwordFieldBlurred=true" required>\n            </div>\n\n            <button tabindex="-1" on-touch="showPasswordInClearText = !showPasswordInClearText" type="button" class="prelogin__pass__toggle">\n              <span ng-hide="showPasswordInClearText" lcl>Show Pass</span>\n              <span ng-show="showPasswordInClearText" lcl>Hide Pass</span>\n            </button>\n          </div>\n\n          <div class="prelogin__validation" ng-show="showPasswordHelptext && !passwordIsStrong">\n            <i ng-show="passwordFieldBlurred" class="prelogin__validation icon-left ion-android-close"></i>\n            <span lcl>Password must include at least 8 characters: uppercase, lowercase, and numbers.</span>\n          </div>\n\n        </div>\n\n        <button ng-disabled="!formValid() || formDone" type="submit" class="button bp-button prelogin__button" ladda="loginLoading" lcl>Reset Password</button>\n\n      </form>\n\n    </div>\n  </ion-content>\n</ion-view>\n'),e.put("components/payment-buttons/payment-buttons.html",'<ion-view view-title="Payment Buttons" bp-back-button-sref="menu.paymentTools" cache-view="false">\n\n  <ion-content class="bp-pb">\n\n    <div class="bp-panel">\n      <div class="bp-panel__header">\n        <div class="bp-panel__header__name" lcl>Create a Checkout Button</div>\n      </div>\n\n      <div class="bp-panel__body">\n\n        <div class="bp-panel__body__content">\n         <form name="forms.buttonFieldsForm">\n\n          <div class="price-group">\n            <label class="price-label">\n              <div class="textfield-label" lcl>Default Price</div>\n              <input ng-change="formInputChanged()" ng-model-options="{ debounce: debounceDuration }" type="text" name="price" placeholder="" ng-model="button.price" ng-pattern="numbersAndDecimalsOnly" required>\n\n              <div class="input-validation"  ng-show="forms.buttonFieldsForm.price.$invalid && forms.buttonFieldsForm.price.$touched">\n                <i class="generic-form-error icon-left assertive ion-android-close bp-error">\n                  <span class="dark padding-left" ng-if="forms.buttonFieldsForm.price.$error.required" lcl>Please enter a price.</span>\n                  <span class="dark padding-left" ng-if="forms.buttonFieldsForm.price.$error.pattern" lcl>Please enter a valid price.</span>\n                </i>\n              </div>\n            </label>\n\n            <label class="currency-label">\n              <div class="textfield-label" lcl>&nbsp;</div>\n              <div class="bp-dropdown bp-bills__dropdown">\n                <select ng-model="button.currency" ng-change="formInputChanged()">\n                  <option value="BTC">BTC</option>\n                  <option value="BCH">BCH</option>\n                  <option value="" disabled="">----------</option>\n                  <option value="USD" selected="">USD</option>\n                  <option value="EUR">EUR</option>\n                  <option value="GBP">GBP</option>\n                  <option value="" disabled="">----------</option>\n                  <option value="JPY">JPY</option>\n                  <option value="CAD">CAD</option>\n                  <option value="AUD">AUD</option>\n                  <option value="CNY">CNY</option>\n                  <option value="CHF">CHF</option>\n                  <option value="SEK">SEK</option>\n                  <option value="NZD">NZD</option>\n                  <option value="KRW">KRW</option>\n\n                  <option ng-repeat="currency in currencies" value="{{currency.code}}">{{currency.code}}</option>\n                </select>\n              </div>\n            </label>\n          </div>\n\n          <label>\n            <div class="textfield-label" lcl>Checkout Description</div>\n            <input ng-change="formInputChanged()" ng-model-options="{ debounce: debounceDuration }" type="text" name="buyerEmail" placeholder="(optional)" ng-model="button.itemDesc">\n\n            <div class="input-validation"  ng-show="forms.buyerInfoForm.buyerEmail.$invalid && forms.buyerInfoForm.buyerEmail.$touched">\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error">\n                <span class="dark padding-left" ng-if="forms.buyerInfoForm.buyerEmail.$error.required" lcl>Please enter the email address of the buyer.</span>\n                <span class="dark padding-left" ng-if="forms.buyerInfoForm.buyerEmail.$error.email" lcl>Please enter a valid email address.</span>\n              </i>\n            </div>\n          </label>\n\n          <lbl>\n            <div class="textfield-label" style="margin-bottom: 5px;" lcl>Button Size</div>\n\n            <div class="button-sizes">\n              <div class="button-size button-size__small" ng-class="{\'button-size__selected\': buttonData.size === \'small\'}" ng-click="setButtonSize(\'small\')">\n                <div class="button-size__label">97 x 31 px</div>\n              </div>\n              <div class="button-size button-size__medium"\n              ng-class="{\'button-size__selected\': buttonData.size === \'medium\'}" ng-click="setButtonSize(\'medium\')">\n                <div class="button-size__label">129 x 45 px</div>\n              </div>\n              <div class="button-size button-size__large"\n              ng-class="{\'button-size__selected\': buttonData.size === \'large\'}"\n              ng-click="setButtonSize(\'large\')">\n                <div class="button-size__label">166 x 58 px</div>\n              </div>\n            </div>\n           </form>\n          </div>\n\n        </lbl>\n\n        <div class="bp-panel__body__description">\n          <p>\n            This button is used to complete a sale on your website.\n          </p>\n          <br>\n          <p>\n            The merchant manages the shopping cart and collects the buyers\' names and addresses if necessary.\n          </p>\n        </div>\n\n      </div>\n\n\n    </div>\n\n    <div class="bp-panel">\n\n      <div class="bp-panel__header">\n        <div class="bp-panel__header__name" lcl>Payment Notifications</div>\n      </div>\n\n      <div class="bp-panel__body">\n        <div class="bp-panel__body__content">\n          <form name="forms.paymentNotificationsForm">\n          <label>\n            <div class="textfield-label" lcl>Server IPN</div>\n            <input ng-change="formInputChanged()" ng-model-options="{ debounce: debounceDuration }" type="url" name="notificationURL" placeholder="(optional)" ng-model="button.notificationURL">\n\n            <div class="input-validation"  ng-show="forms.paymentNotificationsForm.notificationURL.$invalid && forms.paymentNotificationsForm.notificationURL.$touched">\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error">\n                <span class="dark padding-left" ng-if="forms.paymentNotificationsForm.notificationURL.$error.url" lcl>Please enter a valid url.</span>\n              </i>\n            </div>\n          </label>\n\n          <label>\n            <div class="textfield-label" lcl>Browser Redirect</div>\n            <input ng-change="formInputChanged()" ng-model-options="{ debounce: debounceDuration }" type="url" name="redirectURL" placeholder="(optional)" ng-model="button.redirectURL">\n\n            <div class="input-validation"  ng-show="forms.paymentNotificationsForm.redirectURL.$invalid && forms.paymentNotificationsForm.redirectURL.$touched">\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error">\n                <span class="dark padding-left" ng-if="forms.paymentNotificationsForm.redirectURL.$error.url" lcl>Please enter a valid url.</span>\n              </i>\n            </div>\n          </label>\n\n          <label>\n            <div class="textfield-label" lcl>Send Email Notifications To</div>\n            <input ng-change="formInputChanged()" ng-model-options="{ debounce: debounceDuration }" type="email" name="notificationEmail" placeholder="(optional)" ng-model="button.notificationEmail">\n\n            <div class="input-validation"  ng-show="forms.paymentNotificationsForm.notificationEmail.$invalid && forms.paymentNotificationsForm.notificationEmail.$touched">\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error">\n                <span class="dark padding-left" ng-if="forms.paymentNotificationsForm.notificationEmail.$error.email" lcl>Please enter a valid email address.</span>\n              </i>\n            </div>\n          </label>\n         </form>\n        </div>\n\n        <div class="bp-panel__body__description">\n          <p>\n            When the transaction is completed, the seller will receive an email order confirmation, and a secure server POST. The buyer will be given a browser-redirect URL to click to return to your website.\n          </p>\n        </div>\n      </div>\n    </div>\n\n    <div class="bp-panel" style="flex-wrap: wrap;">\n\n      <div class="bp-panel__header">\n        <div class="bp-panel__header__name" lcl>Generated Code</div>\n      </div>\n      <div class="bp-panel__body">\n        <div class="generated-code">\n          <p>Select all of the HTML code below, then copy and past it into your web page.</p>\n          <pre><code bp-prism="buttonData" class="language-html" interpolated-data="interpolatedData">&lt;form action=&quot;https://{{host}}/checkout&quot; method=&quot;post&quot; &gt;\n  &lt;input type=&quot;hidden&quot; name=&quot;action&quot; value=&quot;checkout&quot; /&gt;\n  &lt;input type=&quot;hidden&quot; name=&quot;posData&quot; value=&quot;&quot; /&gt;\n  &lt;input type=&quot;hidden&quot; name=&quot;data&quot; value=&quot;{{encryptedData}}&quot; /&gt;\n  &lt;input type=&quot;image&quot; src=&quot;https://{{host}}/img/button-{{size}}.png&quot; border=&quot;0&quot; name=&quot;submit&quot; alt=&quot;BitPay, the easy way to pay with bitcoins.&quot; &gt;\n&lt;/form&gt;</code></pre>\n          <div class="bp-pb__copy-code-button" ng-click="copy()">\n  					<img src="img/payment-tools/copy-icon.svg"/>\n            <div>Copy code</div>\n            <div ng-show="copied" class="bp-pb__copy-code-button__success">Copied to Clipboard!</div>\n          </div>\n          <textarea class="hidden-textarea" ng-model="interpolatedData.html" id="copyContainer"></textarea>\n        </div>\n        <div class="button-preview">\n          <div class="button-preview__label">Preview:</div>\n          <form action="{{\'https://\' + buttonData.host + \'/checkout\' }}" method="post" target="_blank">\n            <input type="hidden" name="action" value="checkout" />\n            <input type="hidden" name="posData" value="" />\n            <input type="hidden" name="data" value="{{buttonData.encryptedData}}" />\n            <input type="image" ng-src="{{\'https://\' + buttonData.host + \'/img/button-\' + buttonData.size + \'.png\'}}" border="0" name="submit" alt="BitPay, the easy way to pay with bitcoins." >\n          </form>\n        </div>\n      </div>\n\n    </div>\n\n\n  </ion-content>\n\n</ion-view>\n'),e.put("components/payment-tools/payment-tools.html",'\n<ion-view view-title="Payment Tools">\n  <ion-content>\n\n    <div class="bp-panel">\n      <div class="bp-pt-section">\n        <div class="bp-pt-section__heading">Payment Tools</div>\n        <div class="bp-pt-section__body">\n          <div class="bp-pt-card-container bp-md-column-100 bp-lg-column-50" bp-facades ui-sref="menu.bills">\n            <div class="bp-pt-card">\n              <div class="bp-pt-card__content">\n                <div class="bp-pt-card__content__title">\n                  <span lcl>Email Billing</span>\n                  <i class="bp-padding-left icon ion-locked" ng-show="bpFacadesUnauthorized"></i>\n                </div>\n                <div class="bp-pt-card__content__description">\n                  Simple invoicing and billing to allow your clients to pay you using bitcoin.\n                </div>\n              </div>\n              <img class="bp-pt-card__icon" src="img/payment-tools/client-billing.svg">\n            </div>\n          </div>\n          <div class="bp-pt-card-container bp-md-column-100 bp-lg-column-50" bp-facades="merchantIntegration" ui-sref="menu.dashboard({ page: \'catalog-item-list\' })">\n            <div class="bp-pt-card">\n              <div class="bp-pt-card__content">\n                <div class="bp-pt-card__content__title">\n                  <span lcl>Hosted Catalog</span>\n                  <i class="bp-padding-left icon ion-locked" ng-show="bpFacadesUnauthorized"></i>\n                </div>\n                <div class="bp-pt-card__content__description">\n                  Quickly create Buy Now buttons for your website.\n                  BitPay handles the checkout process.\n                </div>\n              </div>\n              <img class="bp-pt-card__icon" src="img/payment-tools/hosted-catalog.svg">\n            </div>\n          </div>\n          <div class="bp-pt-card-container bp-md-column-100 bp-lg-column-50" ng-show="user.isDonationEligible" bp-facades="merchantIntegration">\n            <div class="bp-pt-card" ui-sref="menu.dashboard({ page: \'create-donate\' })">\n              <div class="bp-pt-card__content">\n                <div class="bp-pt-card__content__title">\n                  <span lcl>Donation Buttons</span>\n                  <i class="bp-padding-left icon ion-locked" ng-show="bpFacadesUnauthorized"></i></div>\n                <div class="bp-pt-card__content__description">\n                  Add an HTML button to your website to allow your customers to make donations using bitcoin.\n                </div>\n              </div>\n              <img class="bp-pt-card__icon" src="img/payment-tools/donation-buttons.svg">\n            </div>\n          </div>\n          <div class="bp-pt-card-container bp-md-column-100 bp-lg-column-50" ng-show="user.isDonationEligible" bp-facades="merchantIntegration">\n            <div class="bp-pt-card" ui-sref="menu.dashboard({ page: \'edit-donation-page\' })">\n              <div class="bp-pt-card__content">\n                <div class="bp-pt-card__content__title">\n                  <span lcl>Donation Page</span>\n                  <i class="bp-padding-left icon ion-locked" ng-show="bpFacadesUnauthorized"></i>\n                </div>\n                <div class="bp-pt-card__content__description">\n                  Accept donations on a BitPay hosted page.\n                </div>\n              </div>\n              <img class="bp-pt-card__icon" src="img/payment-tools/donation-pages.svg">\n            </div>\n          </div>\n          <div class="bp-pt-card-container bp-md-column-100 bp-lg-column-50" bp-facades ui-sref="menu.paymentButtons">\n            <div class="bp-pt-card">\n              <div class="bp-pt-card__content">\n                <div class="bp-pt-card__content__title">\n                  <span lcl>Payment Buttons</span>\n                  <i class="bp-padding-left icon ion-locked" ng-show="bpFacadesUnauthorized"></i>\n                </div>\n                <div class="bp-pt-card__content__description">\n                  Add an HTML button to your website so your customers can pay with bitcoin.\n                </div>\n              </div>\n              <img class="bp-pt-card__icon" src="img/payment-tools/payment-buttons.svg">\n            </div>\n          </div>\n          <div class="bp-pt-card-container bp-md-column-100 bp-lg-column-50" bp-facades="merchantIntegration merchantFinance">\n            <div class="bp-pt-card" ui-sref="menu.dashboard({ page: \'edit-mobile-checkout\' })">\n              <div class="bp-pt-card__content">\n                <div class="bp-pt-card__content__title">\n                  <span lcl>Point of Sale App</span>\n                  <i class="bp-padding-left icon ion-locked" ng-show="bpFacadesUnauthorized"></i>\n                </div>\n                <div class="bp-pt-card__content__description">\n                  A fast, simple interface for retail and mobile businesses to accept bitcoin payments.\n                </div>\n              </div>\n              <img class="bp-pt-card__icon" src="img/payment-tools/pos.svg">\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </div>\n\n    <div class="bp-panel">\n      <div class="bp-pt-section">\n        <div class="bp-pt-section__heading">Integration Resources</div>\n        <div class="bp-pt-section__body">\n          <div class="bp-pt-card-container bp-md-column-100 bp-lg-column-50" bp-facades="merchantIntegration">\n            <div class="bp-pt-card" ui-sref="menu.dashboard({ page: \'api-tokens\' })">\n              <div class="bp-pt-card__content">\n                <div class="bp-pt-card__content__title">\n                  <span lcl>Manage API Tokens</span>\n                  <i class="bp-padding-left icon ion-locked" ng-show="bpFacadesUnauthorized"></i>\n                </div>\n                <div class="bp-pt-card__content__description">\n                  Add, revoke, or modify BitPay API access tokens.\n                </div>\n              </div>\n              <img class="bp-pt-card__icon" src="img/payment-tools/api-tokens.svg">\n            </div>\n          </div>\n          <div class="bp-pt-card-container bp-md-column-100 bp-lg-column-50" bp-facades="merchantIntegration">\n            <div class="bp-pt-card" ui-sref="menu.dashboard({ page: \'api-keys\' })">\n              <div class="bp-pt-card__content">\n                <div class="bp-pt-card__content__title">\n                  <span lcl>Legacy API Keys</span>\n                  <i class="bp-padding-left icon ion-locked" ng-show="bpFacadesUnauthorized"></i>\n                </div>\n                <div class="bp-pt-card__content__description">\n                  Add or remove keys for the legacy v1 API.\n                </div>\n              </div>\n              <img class="bp-pt-card__icon" src="img/payment-tools/legacy-api-tokens.svg">\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </div>\n\n  </ion-content>\n</ion-view>\n'),e.put("components/payments/adjustment-confirm.html",'<ion-view view-title="Confirm Adjustment" bp-back-button-sref="menu.paymentResolveException({ id: invoiceId })">\n\n  <ion-content>\n\n    <div class="bp-alert" ng-show="alertAlreadyRefunded">\n      <div class="bp-alert__icon-box bp-alert__icon-box--orange"><i class="icon ion-alert"></i></div>\n      <div class="bp-alert__content">\n        <span lcl>\n          This payment cannot be adjusted since a refund request has already been submitted.\n          For more information, please email support@bitpay.com with support request ID {{conflictingRequestId}}.\n        </span>\n      </div>\n    </div>\n\n    <div class="bp-alert" ng-show="serverError">\n      <div class="bp-alert__icon-box bp-alert__icon-box--orange"><i class="icon ion-alert"></i></div>\n      <div class="bp-alert__content">\n        <span lcl>{{serverError}}</span>\n      </div>\n    </div>\n\n    <div class="bp-alert" ng-show="unexpectedError">\n      <div class="bp-alert__icon-box bp-alert__icon-box--orange"><i class="icon ion-alert"></i></div>\n      <div class="bp-alert__content">\n        <span lcl>An unexpected error has occurred.</span>\n      </div>\n    </div>\n\n    <form bp-detect-submission name="refundForm" novalidate ng-submit="handleAdjustment(refundForm)">\n\n      <div class="bp-pd__card-container" ng-if="invoice">\n        <div class="card bp-pd__card">\n\n          <div class="bp-pd__card__title">\n            <div lcl>Adjustment Details</div>\n          </div>\n\n          <div class="bp-panel">\n\n            <div class="bp-pd__section">\n              <div class="bp-panel__item">\n                <div class="bp-panel__item__label bp-pd__item-label">\n                  Invoice Total\n                </div>\n                <div class="bp-panel__item__field bp-pd__item-field">\n                  <bp-pd-price invoice-price="effects.oldPrice" currency="invoice.currency" transaction-currency-price="invoice.computedFields.paymentSubtotal | amount" transaction-currency="invoice.transactionCurrency"></bp-pd-price>\n                </div>\n              </div>\n              <div class="bp-panel__item">\n                <div class="bp-panel__item__label bp-pd__item-label">\n                  Amount Received\n                </div>\n                <div class="bp-panel__item__field bp-pd__item-field">\n                  <bp-pd-price invoice-price="effects.newPrice" currency="invoice.currency" transaction-currency-price="invoice.btcPaid" floor="true" transaction-currency="invoice.transactionCurrency"></bp-pd-price>\n                </div>\n              </div>\n              <div class="bp-panel__item">\n                <div class="bp-panel__item__label bp-pd__item-label">\n                  <span>Amount Underpaid</span>\n                </div>\n                <div class="bp-panel__item__field bp-pd__item-field">\n                  <bp-pd-price invoice-price="effects.priceDiff" show-only-invoice-currency="true" currency="invoice.currency"></bp-pd-price>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class="item">\n\n            <div>\n              <label class="bp-panel__field-wrapper">\n                <div class="bp-form__field-label" style="margin-bottom: 12px;white-space: normal" lcl>\n                    You will be accepting\n                    <bp-pd-price show-only-invoice-currency="true" invoice-price="effects.newPrice" currency="invoice.currency" floor="true" transaction-currency="invoice.transactionCurrency"></bp-pd-price>\n                    instead of\n                    <bp-pd-price show-only-invoice-currency="true" invoice-price="effects.oldPrice" currency="invoice.currency" transaction-currency="invoice.transactionCurrency"></bp-pd-price>.\n                    This is <bp-pd-price show-only-invoice-currency="true" invoice-price="effects.priceDiff" currency="invoice.currency" transaction-currency="invoice.transactionCurrency"></bp-pd-price>\n                    <span ng-show="invoice.exceptionStatus == \'paidPartial\'">less</span>\n                    <span ng-show="invoice.exceptionStatus == \'paidOver\'">more</span>\n                    than the original invoice price.\n                </div>\n                <div class="bp-form__field-label" style="margin-bottom: 12px;white-space: normal">\n                  <strong>Deprecation Notice:</strong> Recent improvements to the BitPay platform have greatly reduced the incidence of underpayments. Consequently, to simplify our platform, we will remove the ability to accept underpayments in the near future.\n                </div>\n              </label>\n            </div>\n\n            <button class="bp-big-action bp-margin-top-20 bp-button--red bp-pd__card__button" ladda="submitting" lcl>\n              Accept Underpayment\n            </button>\n          </div>\n\n        </div>\n      </div>\n\n    </form>\n\n  </ion-content>\n</ion-view>\n'),e.put("components/payments/bp-pd-price.html",'<span ng-hide="showOnlyTransactionCurrency || showOnlyInvoiceCurrency">\n  {{ invoiceDisplayPrice | currency: currencyCodeMap[resolvedCurrency] : floor }} {{ resolvedCurrency }}\n  <span ng-hide="resolvedCurrency === transactionCurrency">({{ transactionCurrencyDisplayPrice | currency: currencyCodeMap[transactionCurrency] : floor }} {{transactionCurrency}})</span>\n</span>\n<span ng-show="showOnlyTransactionCurrency">{{ transactionCurrencyDisplayPrice | currency: currencyCodeMap[transactionCurrency] : floor }} {{transactionCurrency}}</span>\n<span ng-show="showOnlyInvoiceCurrency">\n  {{ invoiceDisplayPrice | currency: currencyCodeMap[resolvedCurrency] : floor}} {{ resolvedCurrency }}\n</span>\n'),e.put("components/payments/date-popover.html",'<ion-popover-view class="pv__date-popover">\n  <ul>\n    <li ui-sref="menu.payments({ preset: \'past30Days\', startDate: null, endDate: null })" ng-click="datePopover.hide()" ng-hide="dateRangePreset.value === \'past30Days\'">\n      <span lcl>Past 30 days</span>\n    </li>\n    <li ui-sref="menu.payments({ preset: \'pastYear\', startDate: null, endDate: null })" ng-click="datePopover.hide()" ng-hide="dateRangePreset.value === \'pastYear\'">\n      <span lcl>Past Year</span>\n    </li>\n    <li ui-sref="menu.payments({ preset: \'ytd\', startDate: null, endDate: null })" ng-click="datePopover.hide()" ng-hide="dateRangePreset.value === \'ytd\'">\n      <span lcl>Year to Date</span>\n    </li>\n    <li ui-sref="menu.payments({ preset: \'custom\', startDate: startDate.format(\'YYYY-MM-DD\'), endDate: endDate.format(\'YYYY-MM-DD\') })" ng-click="datePopover.hide()" ng-hide="dateRangePreset.value === \'custom\'">\n      <span lcl>Custom Date Range</span>\n    </li>\n\n  </ul>\n</ion-popover-view>\n'),e.put("components/payments/details.html",'<ion-view view-title="Payment Details" bp-back-button-sref="menu.payments" cache-view="false">\n\n  <ion-nav-buttons side="secondary">\n      <button\n        bp-append-info="{{isRefundButtonDisabled()}}"\n        bp-facades="merchantSupport"\n        class="bp-header-button"\n        ng-click="goToRefundState()"\n        bp-append-info-confirm="onConfirm"\n        bp-append-info-template="components/payments/refund-disabled-reasons.html">\n            <span lcl>Refund</span>\n            <img class="bp-header-button__inline-icon" src="img/payments/alertblue.svg" ng-show="isRefundButtonDisabled() && !bpFacadesUnauthorized"/>\n            <i class="bp-padding-left icon ion-locked" ng-show="bpFacadesUnauthorized"></i>\n      </button>\n  </ion-nav-buttons>\n  <ion-content>\n\n    <div class="bp-alert" ng-show="hasRefundPermission && (alertUnexpected || alertUnderpaid || alertOverpaid) && !hasPendingRefund && !(invoice && invoice.refundAddressRequestPending)">\n      <div class="bp-alert__icon-box bp-alert__icon-box--orange"><i class="icon ion-alert"></i></div>\n      <div class="bp-alert__content">\n        <span ng-show="alertUnexpected" lcl>An unexpected error has occurred.</span>\n        <span ng-show="alertUnderpaid" lcl>\n          <span>This payment has been underpaid by {{ invoice.underpaidAmount | amount }} {{invoice.transactionCurrency}}.</span>\n          <a style="margin-left: 5px;" ui-sref="menu.paymentResolveException({ id: invoice.id })">Resolve</a>\n        </span>\n        <span ng-show="alertOverpaid" lcl>\n          <span>This payment has been overpaid by {{ invoice.overpaidAmount | amount }} {{invoice.transactionCurrency}}.</span>\n          <a style="margin-left: 5px;" ng-hide="invoice.status != \'complete\'" ui-sref="menu.paymentResolveException({ id: invoice.id })">Resolve</a>\n          <span ng-show="invoice.status != \'complete\'">You may resolve this once this payment has been confirmed {{ 6 - payment.confirmations }} more times.</span>\n         </span>\n      </div>\n    </div>\n\n    <div class="bp-alert" ng-show="hasPendingRefund">\n      <div class="bp-alert__icon-box bp-alert__icon-box--green"><i class="icon ion-checkmark"></i></div>\n      <div class="bp-alert__content">\n        <span lcl>A refund is pending for this payment. Refunds are typically processed within 24 hours.</span>\n      </div>\n    </div>\n\n    <div class="bp-alert" ng-show="invoice.refundAddressRequestPending">\n      <div class="bp-alert__icon-box bp-alert__icon-box--green"><i class="icon ion-checkmark"></i></div>\n      <div class="bp-alert__content">\n        <span lcl>We\'ve sent an email to the buyer with instructions to claim their refund.</span>\n      </div>\n    </div>\n\n    <div class="bp-alert" ng-show="pendingRefundCanceled">\n      <div class="bp-alert__icon-box bp-alert__icon-box--green"><i class="icon ion-checkmark"></i></div>\n      <div class="bp-alert__content">\n        <span lcl>You have successfully canceled a pending refund.</span>\n      </div>\n    </div>\n\n    <div class="bp-pd__card-container">\n      <div class="card bp-pd__card">\n\n        <div class="item item-divider bp-pd__card__title">\n          {{invoice.id}}\n        </div>\n\n        <div class="bp-pd__summary">\n          <div class="bp-pd__summary__item">\n            <div class="bp-pd__summary__item__value">{{invoice.price | currency: payment.uiCurrencyDef}}</div>\n            <div class="bp-pd__summary__item__label">Total ({{invoice.currency}})</div>\n          </div>\n          <div class="bp-pd__summary__item">\n            <div class="bp-pd__summary__item__value">{{invoice.computedFields.paymentSubtotal | amount}}</div>\n            <div class="bp-pd__summary__item__label">Total ({{invoice.computedFields.transactionCurrency}})</div>\n          </div>\n          <div class="bp-pd__summary__item">\n            <div class="bp-pd__summary__item__value bp-green">{{invoice.btcPaid}}</div>\n            <div class="bp-pd__summary__item__label">Paid ({{invoice.computedFields.transactionCurrency}})</div>\n          </div>\n        </div>\n\n        <div class="item">\n          <div class="bp-panel">\n\n            <div class="bp-pd__section">\n              <div class="bp-pd__section__label">Invoice Details</div>\n              <div class="bp-panel__item" ng-show="invoice.orderId">\n                <div class="bp-panel__item__label bp-pd__item-label">\n                  Order ID\n                </div>\n                <div class="bp-panel__item__field bp-pd__item-field">\n                  <span>{{invoice.orderId}}</span>\n                </div>\n              </div>\n              <div class="bp-panel__item">\n                <div class="bp-panel__item__label bp-pd__item-label">\n                  Status\n                </div>\n                <div class="bp-panel__item__field bp-pd__item-field">\n                  <div ng-hide="hasExecutedRefund">\n                    <span ng-show="payment.uiStatus == \'new\'" lcl>Unpaid</span>\n                    <span ng-show="payment.uiStatus == \'invalid\'" lcl>Invalid</span>\n                    <span ng-show="payment.uiStatus == \'paid\'" lcl>Paid</span>\n                    <span ng-show="payment.uiStatus == \'confirmed\'" lcl>Confirmed</span>\n                    <span ng-show="payment.uiStatus == \'complete\'" lcl>Complete</span>\n                    <span ng-show="payment.uiStatus == \'paidPartial\'"><span lcl>Underpaid By</span> {{ invoice.underpaidAmount | amount }} {{invoice.transactionCurrency}}</span>\n                    <span ng-show="payment.uiStatus == \'paidOver\'"><span lcl>Overpaid By</span> {{ invoice.overpaidAmount | amount }} {{invoice.transactionCurrency}}</span>\n                    <span ng-show="payment.uiStatus == \'expired\'" lcl>Expired</span>\n                  </div>\n                  <div ng-show="hasExecutedRefund">\n                    <span lcl>Refunded</span>\n                  </div>\n                </div>\n              </div>\n              <div class="bp-panel__item">\n                <div class="bp-panel__item__label bp-pd__item-label">\n                  Confirmations\n                </div>\n                <div class="bp-panel__item__field bp-pd__item-field">\n                  <span>{{payment.confirmations}}</span>\n                </div>\n              </div>\n              <div class="bp-panel__item">\n                <div class="bp-panel__item__label bp-pd__item-label">\n                  Currency\n                </div>\n                <div class="bp-panel__item__field bp-pd__item-field">\n                  {{invoice.computedFields.transactionCurrency}}\n                </div>\n              </div>\n              <div class="bp-panel__item" ng-show="invoice.currency !== invoice.transactionCurrency">\n                <div class="bp-panel__item__label bp-pd__item-label">\n                  Exchange Rate\n                </div>\n                <div class="bp-panel__item__field bp-pd__item-field">\n                  1 {{invoice.computedFields.transactionCurrency}} = {{invoice.computedFields.exchangeRate | currency:invoiceCurrency}} {{invoice.currency}}\n                </div>\n              </div>\n              <div class="bp-panel__item">\n                <div class="bp-panel__item__label bp-pd__item-label">\n                  Created at\n                </div>\n                <div class="bp-panel__item__field bp-pd__item-field">\n                  <div>{{invoice.invoiceTime | date: \'short\'}}</div>\n                  <div ng-show="relatedInfo.invoice.billId">\n                    <a href="/dashboard/payment-tools/bills/{{relatedInfo.invoice.billId}}" target="_blank">\n                      <span lcl>View Bill</span>\n                      <i class="bp-padding-left icon ion-chevron-right"></i>\n                    </a>\n                  </div>\n                  <div ng-show="relatedInfo.invoice.cartId">\n                    <a href="/cart?id={{relatedInfo.invoice.cartId}}" target="_blank">\n                      <span lcl>View Cart</span>\n                      <i class="bp-padding-left icon ion-chevron-right"></i>\n                    </a>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class="item" ng-show="invoice.itemCode || invoice.itemDesc">\n          <div class="bp-panel">\n\n            <div class="bp-pd__section">\n              <div class="bp-pd__section__label">Item Information</div>\n              <div class="bp-panel__item" ng-show="invoice.itemCode">\n                <div class="bp-panel__item__label bp-pd__item-label">\n                  Code\n                </div>\n                <div class="bp-panel__item__field bp-pd__item-field">\n                  <span>{{invoice.itemCode}}</span>\n                </div>\n              </div>\n              <div class="bp-panel__item" ng-show="invoice.itemDesc">\n                <div class="bp-panel__item__label bp-pd__item-label">\n                  Description\n                </div>\n                <div class="bp-panel__item__field bp-pd__item-field">\n                  <span style="white-space:normal">{{invoice.itemDesc}}</span>\n                </div>\n              </div>\n\n            </div>\n          </div>\n        </div>\n\n        <div class="item" ng-show="relatedInfo.buyer &&\n         (relatedInfo.buyer.name || relatedInfo.buyer.email || relatedInfo.buyer.streetAddress1 ||\n          relatedInfo.buyer.phone)">\n          <div class="bp-panel">\n            <div class="bp-pd__section">\n              <div class="bp-pd__section__label">Buyer Information</div>\n              <div class="bp-panel__item" ng-show="relatedInfo.buyer.name">\n                <div class="bp-panel__item__label bp-pd__item-label">\n                  Name\n                </div>\n                <div class="bp-panel__item__field bp-pd__item-field">\n                  {{relatedInfo.buyer.name}}\n                </div>\n              </div>\n              <div class="bp-panel__item" ng-show="relatedInfo.buyer.email">\n                <div class="bp-panel__item__label bp-pd__item-label">\n                  Email\n                </div>\n                <div class="bp-panel__item__field bp-pd__item-field">\n                  {{relatedInfo.buyer.email}}\n                </div>\n              </div>\n              <div class="bp-panel__item" ng-show="relatedInfo.buyer.phone">\n                <div class="bp-panel__item__label bp-pd__item-label">\n                  Phone\n                </div>\n                <div class="bp-panel__item__field bp-pd__item-field">\n                  {{relatedInfo.buyer.phone}}\n                </div>\n              </div>\n              <div ng-show="relatedInfo.buyer.address">\n                <div class="bp-panel__item" ng-show="relatedInfo.buyer.address.streetAddress1">\n                  <div class="bp-panel__item__label bp-pd__item-label">\n                    Address\n                  </div>\n                  <div class="bp-panel__item__field bp-pd__item-field">\n                    <div ng-repeat="field in formattedAddressFields">\n                      {{field}}\n                    </div>\n                    <div>\n                      {{relatedInfo.buyer.address.addressCountry}}\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class="bp-panel__item" ng-repeat="field in relatedInfo.buyer.customFields">\n                <div class="bp-panel__item__label bp-pd__item-label">\n                  {{field.name}}\n                </div>\n                <div class="bp-panel__item__field bp-pd__item-field">\n                  {{field.value}}\n                </div>\n              </div>\n\n            </div>\n\n          </div>\n        </div>\n\n        <div class="bp-panel bp-pd__timeline">\n          <div class="bp-pd__timeline__line"></div>\n          <div class="bp-pd__timeline__line-content">\n\n            <div class="bp-pd__timeline__entry" ng-if="invoice.refundAddressRequestPending">\n              <div class="bp-pd__timeline__entry__summary">\n                <div class="bp-pd__timeline__entry__summary__icon">\n                  <img src="img/payments/refund.svg"/>\n                </div>\n                <div class="bp-pd__timeline__entry__summary__content">\n                  <div>\n                    <span style="display: block; margin-top: 12px;" lcl>Refund pending</span>\n                  </div>\n                </div>\n                <div class="bp-pd__timeline__entry__summary__expand" on-touch="pendingRefundExpanded = !pendingRefundExpanded" style="margin-top: 12px;">\n                  <i class="icon" ng-class="{\'ion-chevron-down\': !pendingRefundExpanded, \'ion-chevron-up\': pendingRefundExpanded }"></i>\n                </div>\n              </div>\n\n              <div class="bp-pd__timeline__entry__expansion-row" ng-class="{\'bp-pd__timeline__entry__expansion-row--expanded\': pendingRefundExpanded}">\n\n                <div class="bp-pd__timeline__entry__expansion-row__content">\n                  <div class="bp-pd__timeline__entry__expansion-row__item">\n                    <div class="bp-pd__timeline__entry__expansion-row__label" lcl>\n                      Status\n                    </div>\n                    <div>\n                      <div>\n                        <span>Awaiting buyer\'s refund address</span>\n                        <div>\n                          <a on-touch="cancelEmailRefundRequest()" bp-facades="merchantSupport" class="bp-red">\n                            <span lcl>Cancel</span>\n                            <i class="bp-padding-left icon ion-chevron-right"></i>\n                          </a>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class="bp-pd__timeline__entry" ng-repeat="entry in timeline.slice().reverse() | filter: filterCanceled">\n              <div ng-if="entry.transaction">\n                <div class="bp-pd__timeline__entry__summary">\n                  <div class="bp-pd__timeline__entry__summary__icon">\n                    <img ng-show="entry.transaction.amount > 0" src="img/payments/received.svg"/>\n                    <img ng-show="entry.transaction.amount < 0" src="img/payments/refund.svg"/>\n                  </div>\n                  <div class="bp-pd__timeline__entry__summary__content">\n                    <div>\n                      <span ng-show="entry.transaction.uiType == \'creditToMerchant\'">\n                        Credited overpayment of <bp-pd-price satoshi-price="-entry.transaction.amount" show-only-transaction-currency="true" transaction-currency="invoice.transactionCurrency"></bp-pd-price> to ledger\n                      </span>\n\n                      <span ng-show="entry.transaction.uiType == \'paymentFromPurchaser\'">\n                        Payment received for <bp-pd-price satoshi-price="entry.transaction.merchantAmount || entry.transaction.amount" currency="invoice.currency" rate="invoice.computedFields.exchangeRate" show-only-transaction-currency="true" transaction-currency="invoice.transactionCurrency"\n                        ></bp-pd-price>\n                      </span>\n                    </div>\n                    <div class="bp-pd__timeline__entry__summary__txid" ng-hide="entry.transaction.txid === \'0000000000000000000000000000000000000000000000000000000000000000\'">TX ID: <a target="_blank" rel="noopener noreferrer" ng-href="https://{{insightSubdomain}}.bitpay.com/tx/{{entry.transaction.txid}}">[ <div>{{entry.transaction.txid}}</div> ]</a></div>\n                    <div class="bp-pd__timeline__entry__summary__detail">{{entry.transaction.receivedTime | date: \'short\'}}</div>\n                  </div>\n                  <div class="bp-pd__timeline__entry__summary__expand" on-touch="entry.uiExpanded = !entry.uiExpanded" ng-if="entry.transaction.buyerPaidMinerFee && enableMinerFeeItemization">\n                    <i class="icon" ng-class="{\'ion-chevron-down\': !entry.uiExpanded, \'ion-chevron-up\': entry.uiExpanded }"></i>\n                  </div>\n                </div>\n                <div class="bp-pd__timeline__entry__expansion-row" ng-class="{\'bp-pd__timeline__entry__expansion-row--expanded\': entry.uiExpanded}" ng-if="entry.transaction.buyerPaidMinerFee && enableMinerFeeItemization">\n\n                  <div class="bp-pd__timeline__entry__expansion-row__content">\n                    <div class="bp-pd__timeline__entry__expansion-row__item line-item">\n                      <div class="bp-pd__timeline__entry__expansion-row__label">\n                        Amount Sent\n                      </div>\n                      <div>\n                        <bp-pd-price satoshi-price="entry.transaction.amount" currency="invoice.currency" rate="invoice.computedFields.exchangeRate" show-only-transaction-currency="true" transaction-currency="invoice.transactionCurrency"\n                        ></bp-pd-price>\n                      </div>\n                    </div>\n                    <div class="bp-pd__timeline__entry__expansion-row__item line-item">\n                      <div class="bp-pd__timeline__entry__expansion-row__label">\n                        Network Cost\n                        <a href="https://support.bitpay.com/paying-with-bitcoin/why-am-i-being-charged-an-additional-network-cost-on-my-bitpay-invoice" target="_blank" rel="noopener noreferrer">\n                          <i class="icon ion-ios-help-outline bp-pd__timeline__entry__expansion-row__label__help"></i>\n                        </a>\n                      </div>\n                      <div>\n                        (<bp-pd-price satoshi-price="-1*entry.transaction.buyerPaidMinerFee.amount" currency="invoice.currency" rate="invoice.computedFields.exchangeRate" show-only-transaction-currency="true" transaction-currency="invoice.transactionCurrency"\n                        ></bp-pd-price>)\n                      </div>\n                    </div>\n                    <div class="bp-pd__timeline__entry__expansion-row__item line-item line-item__total">\n                      <div class="bp-pd__timeline__entry__expansion-row__label">\n                        Amount Received\n                      </div>\n                      <div>\n                        <bp-pd-price satoshi-price="entry.transaction.merchantAmount" currency="invoice.currency" rate="invoice.computedFields.exchangeRate" show-only-transaction-currency="true" transaction-currency="invoice.transactionCurrency"\n                        ></bp-pd-price>\n                      </div>\n                    </div>\n\n                  </div>\n                </div>\n              </div>\n\n              <div ng-if="entry.supportRequest && entry.supportRequest.status == \'success\'">\n\n                <div class="bp-pd__timeline__entry__summary">\n                  <div class="bp-pd__timeline__entry__summary__icon">\n                    <img src="img/payments/refund.svg" ng-if="entry.supportRequest.results.type == \'partial\'" />\n                    <img src="img/payments/refund.svg" ng-if="entry.supportRequest.results.type == \'underpayment\'" />\n                    <img src="img/payments/refund.svg" ng-if="entry.supportRequest.results.type == \'overpayment\'" />\n                    <img src="img/payments/refund.svg" ng-if="entry.supportRequest.results.type.indexOf(\'full\') == 0" />\n                  </div>\n                  <div class="bp-pd__timeline__entry__summary__content">\n                    <div>\n                      <span ng-if="entry.supportRequest.results.type == \'partial\'" lcl>\n                        Partial refund sent for\n                        <span ng-if="entry.supportRequest.params.currency === invoice.transactionCurrency">{{entry.supportRequest.params.amount | currency:transactionCurrency}}</span>\n                        <bp-pd-price ng-if="entry.supportRequest.params.currency !== invoice.transactionCurrency" invoice-price="entry.supportRequest.params.amount" currency="entry.supportRequest.params.currency" transaction-currency="invoice.computedFields.transactionCurrency"\n                        transaction-currency-price="entry.supportRequest.uiCryptoRefundAmount"></bp-pd-price>\n                      </span>\n                      <span ng-if="entry.supportRequest.results.type == \'overpayment\' && !oldRefund" lcl>\n                        Refund sent for a <bp-pd-price transaction-currency-price="entry.supportRequest.uiCryptoRefundAmount" currency="invoice.currency" rate="invoice.computedFields.exchangeRate"></bp-pd-price> overpayment\n                      </span>\n                      <span ng-if="entry.supportRequest.results.type == \'underpayment\' && !oldRefund" lcl>\n                        Refund sent for a <bp-pd-price transaction-currency-price="entry.supportRequest.uiCryptoRefundAmount" currency="invoice.currency" rate="invoice.computedFields.exchangeRate"></bp-pd-price> underpayment\n                      </span>\n                      <span ng-if="entry.supportRequest.results.type == \'overpayment\' && oldRefund" lcl>\n                        Refund of {{entry.supportRequest.uiCryptoRefundAmount | currency:transactionCurrency}} sent for overpayment\n                      </span>\n                      <span ng-if="entry.supportRequest.results.type == \'underpayment\' && oldRefund" lcl>\n                        Refund of {{entry.supportRequest.uiCryptoRefundAmount | currency:transactionCurrency}} sent for underpayment\n                      </span>\n                      <span ng-if="entry.supportRequest.results.type.indexOf(\'full\') == 0" lcl>\n                        Refund sent for\n                        <span ng-if="entry.supportRequest.params.currency === invoice.transactionCurrency">{{entry.supportRequest.params.amount | currency:transactionCurrency}}</span>\n                        <bp-pd-price ng-if="entry.supportRequest.params.currency !== invoice.transactionCurrency" invoice-price="entry.supportRequest.params.amount" transaction-currency-price="entry.supportRequest.uiCryptoRefundAmount" currency="entry.supportRequest.params.currency" transaction-currency="invoice.computedFields.transactionCurrency"></bp-pd-price>\n                      </span>\n                    </div>\n                    <div class="bp-pd__timeline__entry__summary__detail">{{entry.supportRequest.requestDate | date: \'short\'}}</div>\n                  </div>\n                  <div class="bp-pd__timeline__entry__summary__expand" on-touch="entry.uiExpanded = !entry.uiExpanded">\n                    <i class="icon" ng-class="{\'ion-chevron-down\': !entry.uiExpanded, \'ion-chevron-up\': entry.uiExpanded }"></i>\n                  </div>\n                </div>\n\n                <div class="bp-pd__timeline__entry__expansion-row" ng-class="{\'bp-pd__timeline__entry__expansion-row--expanded\': entry.uiExpanded}">\n\n                  <div class="bp-pd__timeline__entry__expansion-row__content">\n                    <div class="bp-pd__timeline__entry__expansion-row__item">\n                      <div class="bp-pd__timeline__entry__expansion-row__label">\n                        Refunded to:\n                      </div>\n                      <div>\n                        {{entry.supportRequest.results.bitcoinPayouts[0].bitcoinAddress}}\n                      </div>\n                    </div>\n                    <div class="bp-pd__timeline__entry__expansion-row__item">\n                      <div class="bp-pd__timeline__entry__expansion-row__label">\n                        Status:\n                      </div>\n                      <div>\n                        <span>Processed</span>\n                        <div>\n                          <a ng-href="https://{{insightSubdomain}}.bitpay.com/tx/{{entry.supportRequest.results.bitcoinPayouts[0].txid}}" target="_blank" rel="noopener noreferrer">\n                            <span lcl>View Transaction</span>\n                            <i class="bp-padding-left icon ion-chevron-right"></i>\n                          </a>\n                        </div>\n                      </div>\n                    </div>\n\n                  </div>\n                </div>\n              </div>\n\n              <div ng-if="entry.supportRequest && entry.supportRequest.status == \'pending\'">\n\n                <div class="bp-pd__timeline__entry__summary">\n                  <div class="bp-pd__timeline__entry__summary__icon">\n                    <img src="img/payments/refund.svg"/>\n                  </div>\n                  <div class="bp-pd__timeline__entry__summary__content">\n                    <div ng-show="entry.supportRequest.params.amount && entry.supportRequest.params.currency">\n                      <span lcl>Refund pending for\n                        <span ng-if="entry.supportRequest.params.currency === invoice.transactionCurrency">{{entry.supportRequest.params.amount | currency:transactionCurrency}}</span>\n                        <bp-pd-price ng-if="entry.supportRequest.params.currency !== invoice.transactionCurrency" invoice-price="entry.supportRequest.params.amount" currency="entry.supportRequest.params.currency"\n                        show-only-invoice-currency="true" transaction-currency="invoice.transactionCurrency" rate="invoice.computedFields.exchangeRate"></bp-pd-price>\n                      </span>\n                    </div>\n                    <div ng-show="invoice.exceptionStatus == \'paidOver\' && !entry.supportRequest.params.amount">\n                      Refund pending for a\n                      <bp-pd-price transaction-currency-price="-invoice.btcDue" currency="invoice.currency" transaction-currency="invoice.transactionCurrency" rate="invoice.computedFields.exchangeRate"></bp-pd-price>\n                      overpayment\n                    </div>\n                    <div ng-show="invoice.exceptionStatus == \'paidPartial\'">\n                      Refund pending for a\n                      <bp-pd-price transaction-currency-price="invoice.btcPaid" currency="invoice.currency" transaction-currency="invoice.transactionCurrency" rate="invoice.computedFields.exchangeRate"></bp-pd-price>\n                      underpayment\n                    </div>\n                    <div class="bp-pd__timeline__entry__summary__detail">{{entry.supportRequest.requestDate | date: \'short\'}}</div>\n                  </div>\n                  <div class="bp-pd__timeline__entry__summary__expand" on-touch="entry.uiExpanded = !entry.uiExpanded">\n                    <i class="icon" ng-class="{\'ion-chevron-down\': !entry.uiExpanded, \'ion-chevron-up\': entry.uiExpanded }"></i>\n                  </div>\n                </div>\n\n                <div class="bp-pd__timeline__entry__expansion-row" ng-class="{\'bp-pd__timeline__entry__expansion-row--expanded\': entry.uiExpanded}">\n\n                  <div class="bp-pd__timeline__entry__expansion-row__content">\n                    <div class="bp-pd__timeline__entry__expansion-row__item">\n                      <div class="bp-pd__timeline__entry__expansion-row__label" lcl>\n                        Refunding to\n                      </div>\n                      <div>\n                        {{entry.supportRequest.params.bitcoinAddress}}\n                      </div>\n                    </div>\n                    <div class="bp-pd__timeline__entry__expansion-row__item">\n                      <div class="bp-pd__timeline__entry__expansion-row__label" lcl>\n                        Status\n                      </div>\n                      <div>\n                        <div>\n                          <span>Pending</span>\n                          <div>\n                            <a on-touch="cancelPendingRefund(entry.supportRequest)" bp-facades="merchantSupport" class="bp-red">\n                              <span lcl>Cancel</span>\n                              <i class="bp-padding-left icon ion-chevron-right"></i>\n                            </a>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n            </div>\n\n            <div class="bp-pd__timeline__entry">\n              <div class="bp-pd__timeline__entry__summary">\n                <div class="bp-pd__timeline__entry__summary__icon">\n                  <img src="img/payments/invoice-created.svg"/>\n                </div>\n                <div>\n                  <div>\n                    <span lcl>Invoice created</span>\n                  </div>\n                  <div class="bp-pd__timeline__entry__summary__detail">{{invoice.invoiceTime | date: \'short\'}}</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n    </div>\n\n  </ion-content>\n</ion-view>\n'),e.put("components/payments/info-modal.html",'<ion-modal-view class="bp-modal-dialog">\n\n    <a ng-click="modal.hide()" class="bp-modal-dialog__close-button" lcl><i class="icon ion-ios-close"></i></a>\n    <div ng-include="templateUrl"></div>\n\n</ion-modal-view>\n'),e.put("components/payments/info-popover.html",'<ion-bp-tooltip-view class="bp-info-popover">\n  <div class="bp-tooltip-arrow"></div>\n  <img height="30" width="30" class="bp-info-popover__info-icon" src="img/payments/alertblue.svg"/>\n  <div ng-include="templateUrl" class="bp-info-popover__info-text template-wrapper"></div>\n</ion-bp-tooltip-view>\n'),e.put("components/payments/insufficient-balance-help-modal.html",'<ion-modal-view style="max-height:560px; max-width:680px; margin-left:auto; margin-right:auto;" ng-controller="components.payments.InsufficientBalanceHelpModal">\n  <ion-header-bar>\n    <div class="buttons">\n      <button class="button" ng-click="modal.hide()"><span class="ion-ios-close-empty"></span></button>\n    </div>\n    <h1 class="title">How to Refund this Payment</h1>\n  </ion-header-bar>\n\n  <ion-content>\n\n    <div class="bp-constrain-signup">\n\n      <p lcl>Since you do not have a sufficient balance in your BitPay merchant account, <strong>the easiest way to refund this payment is to issue a refund directly to the buyer</strong>.</p>\n\n      <p>OR</p>\n\n      <p>If you prefer to administer the refund through BitPay, you can choose one of the following options:</p>\n\n      <div class="bp-panel__body__content">\n        <bp-radio ng-model="resolutionChoices.choice" value="hold">\n          <div>Place a temporary hold on payouts</div>\n          <p>The temporary hold will allow new payments to accrue in your ledger balance.\n          </p>\n        </bp-radio>\n        <bp-radio ng-model="resolutionChoices.choice" value="transfer">\n          <div>Send a Bank Transfer to BitPay</div>\n          <p>These funds will be added to your ledger balance allowing you to issue refunds.</p>\n        </bp-radio>\n        <form bp-detect-submission name="confirmRemoveUserForm" novalidate ng-submit="confirmRemoveUser()" class="padding-top" style="max-height:400px; max-width: 500px">\n\n          <button style="background-color: #3A559E"\n                  ng-disabled="!resolutionChoices.choice"\n                  class="button bp-button button-warning"\n                  ng-click="openIntercom()"\n                  lcl>\n                  Message BitPay Support\n          </button>\n\n        </form>\n\n      </div>\n\n  </ion-content>\n</ion-modal-view>\n'),e.put("components/payments/payments.html",'<ion-view view-title="Payments">\n\n	  <div class="bp-tabs bp-top-toolbar bp-lg-pad-sides-50 has-header" ng-show="!searchMode">\n	    <a class="bp-tabs__item" ui-sref="menu.payments({ filter: null })" ui-sref-active="bp-tabs__item--selected" lcl>All</a>\n	    <a class="bp-tabs__item" ui-sref="menu.payments({ filter: \'confirmedPaid\' })" ui-sref-active="bp-tabs__item--selected" lcl>Paid</a>\n		<a class="bp-tabs__item" ui-sref="menu.payments({ filter: \'unresolved\' })" ui-sref-active="bp-tabs__item--selected" lcl style="width: 110px;">Unresolved</a>\n	    <a class="bp-tabs__search" lcl >\n			<i class="icon ion-ios-search" ng-click="startSearch()" style="margin-right: 6px;"></i>\n		</a>\n	  </div>\n\n	  <form bp-detect-submission name="searchForm" class="bp-tabs bp-top-toolbar bp-lg-pad-sides-50 has-header" ng-show="searchMode">\n			<a class="bp-tabs__search--active" lcl ng-click="cancelSearch()">\n				<i class="icon ion-ios-search"></i>\n			</a>\n			<input class="bp-pd__search-input"\n							bp-focus="searchMode"\n							placeholder="Search by Order ID, TXID, or Invoice ID"\n							ng-model="searchQuery"\n							ng-model-options="{ debounce: {default: 500} }"\n							ng-change="updateSearchParam(searchQuery)"\n							ng-keyup="setSearchingState($event)"\n							style="width: 600px;">\n\n		  <a class="bp-tabs__search-close" ng-click="cancelSearch()" lcl >\n			  <i class="icon ion-close-round"></i>\n		  </a>\n\n	  </form>\n\n	<ion-content class="bp-has-top-toolbar">\n		<div class="pv__date-row" ng-hide="searchMode">\n			<div class="pv__date-field" ng-if="dateRangePreset.value === \'custom\'">\n				<div class="pv__date-field-label">From:</div>\n				<datepicker date-format="moment:l">\n					<input ng-model="startDateFormatted" type="text" placeholder="Start date" class="pv__date-input" ng-change="startDateChanged(startDateFormatted)"/>\n				</datepicker>\n			</div>\n			<div class="pv__date-field" ng-if="dateRangePreset.value === \'custom\'">\n				<div class="pv__date-field-label">To:</div>\n				<datepicker date-format="moment:l" bp-datepicker-mobile-align>\n					<input ng-model="endDateFormatted" type="text" placeholder="End date" class="pv__date-input" ng-change="endDateChanged(endDateFormatted)"/>\n				</datepicker>\n			</div>\n			<div class="pv__date-field">\n				<a class="pv__date-selector" ng-click="showDatePopover($event)">\n					<span class="pv__date-selector__label" ng-show="dateRangePreset.value === \'past30Days\'">Past 30 days</span>\n					<span class="pv__date-selector__label" ng-show="dateRangePreset.value === \'pastYear\'">Past Year</span>\n					<span class="pv__date-selector__label" ng-show="dateRangePreset.value === \'ytd\'">Year to Date</span>\n					<span class="pv__date-selector__label" ng-show="dateRangePreset.value === \'custom\'">Custom Date Range</span>\n					<i class="pv__date-selector__icon icon ion-arrow-down-b"></i>\n				</a>\n			</div>\n		</div>\n		<div class="list bp-padding bp-lg-pad-sides-50" ng-hide="searchMode && !searchQuery">\n			<a class="item bp-item bp-reset bp-flex-row bp-bottom-border-only" ng-repeat="payment in paymentData.payments" ui-sref="menu.paymentDetails({ id: payment.id })">\n				<div class="bp-sm-font-size-small bp-sm-column-70 bp-md-column-35 bp-bold bp-nowrap bp-padding" ng-show="payment.orderId">{{payment.orderId}}</div>\n				<div class="bp-sm-font-size-small bp-sm-column-70 bp-md-column-35 bp-bold bp-nowrap bp-padding" ng-show="payment.itemDesc && !payment.orderId">{{payment.orderId || payment.itemDesc}}</div>\n				<div class="bp-sm-font-size-small bp-sm-column-70 bp-md-column-35 bp-bold bp-nowrap bp-padding" ng-hide="payment.itemDesc || payment.orderId">\n					<span lcl>Invoice</span> {{payment.id}}\n				</div>\n				<div class="bp-sm-font-size-large  bp-md-font-size-medium bp-sm-column-30 bp-md-column-15 bp-md-order-4 bp-bold bp-sm-text-right bp-padding">{{payment.uiPrice | currency: payment.uiCurrencyDef}} {{payment.uiCurrencyDef.code}}</div>\n				<div class="bp-sm-font-size-xsmall bp-md-font-size-small bp-sm-column-50 bp-md-column-30 bp-gray bp-padding" bp-time-ago="payment.invoiceTime"></div>\n				<div class="bp-sm-font-size-xsmall bp-md-font-size-small bp-sm-column-50 bp-md-column-20 bp-sm-text-right bp-md-text-left bp-padding">\n					<div ng-hide="payment.uiAlreadyRefunded">\n						<i class="icon ion-checkmark-circled bp-green" ng-show="payment.uiStatus == \'paid\' || payment.uiStatus == \'confirmed\' || payment.uiStatus == \'complete\'"></i>\n						<i class="icon ion-alert-circled bp-orange" ng-show="payment.uiStatus == \'paidPartial\' || payment.uiStatus == \'paidOver\'"></i>\n						<i class="icon ion-close-circled bp-orange" ng-show="payment.uiStatus == \'invalid\' || payment.uiStatus == \'expired\'"></i>\n						<i class="icon ion-wand bp-blue" ng-show="payment.uiStatus == \'new\'"></i>\n						<span ng-show="payment.uiStatus == \'new\'" lcl class="bp-blue bp-uppercase">Unpaid</span>\n						<span ng-show="payment.uiStatus == \'invalid\'" lcl class="bp-orange bp-uppercase">Invalid</span>\n						<span ng-show="payment.uiStatus == \'paid\'" class="bp-green bp-uppercase" lcl>Paid</span>\n						<span ng-show="payment.uiStatus == \'confirmed\'" class="bp-green bp-uppercase" lcl>Confirmed</span>\n						<span ng-show="payment.uiStatus == \'complete\'" class="bp-green bp-uppercase" lcl>Complete</span>\n						<span ng-show="payment.uiStatus == \'paidPartial\'" class="bp-orange bp-uppercase bp-wrap"><span lcl>Underpaid By</span> {{payment.underpaidAmount | amount}} {{payment.transactionCurrency}}</span>\n						<span ng-show="payment.uiStatus == \'paidOver\'" class="bp-orange bp-uppercase bp-wrap"><span lcl>Overpaid By</span> {{payment.overpaidAmount | amount}} {{payment.transactionCurrency}}</span>\n						<span ng-show="payment.uiStatus == \'expired\'" class="bp-orange bp-uppercase" lcl>Expired</span>\n					</div>\n					<div ng-show="payment.uiAlreadyRefunded">\n						<i class="icon ion-ios-refresh bp-green"></i>\n						<span class="bp-green bp-uppercase" lcl>Refunded</span>\n					</div>\n				</div>\n			</a>\n			<div ng-show="paymentData.payments.length == 0 && isLoading != true">\n\n				<div ng-if="searchMode != true">\n					<div class="bp-constrain-narrow bp-pd__zero-state" ng-hide="filter == \'unresolved\'">\n						<div class="bp-pd__zero-state__header" lcl>No Payments Yet</div>\n						<img class="bp-pd__zero-state__icon" src="img/payments/no-payments.svg"/>\n						<p class="bp-pd__zero-state__helper-text" lcl>You haven\'t created an invoice yet. Please use one of our integrations or payment tools to collect payments.</p>\n					</div>\n\n					<div class="bp-constrain-narrow bp-pd__zero-state" ng-show="filter == \'unresolved\'">\n						<div class="bp-pd__zero-state__header" lcl>No Unresolved Payments</div>\n						<img class="bp-pd__zero-state__icon" src="img/payments/no-payments.svg"/>\n						<p class="bp-pd__zero-state__helper-text" lcl>Congratulations! You have no unresolved payments. Any future underpayments or overpayments will be listed here for resolution.</p>\n					</div>\n				</div>\n\n				<div ng-show="searchMode == true && searchQuery.length > 0 && !searchStatus.searching">\n					<div class="bp-constrain-narrow bp-pd__zero-state">\n						<div class="bp-pd__zero-state__header" lcl>Invoice Not Found</div>\n						<img class="bp-pd__zero-state__icon" src="img/payments/no-payments.svg"/>\n						<p class="bp-pd__zero-state__helper-text" lcl><strong>{{searchQuery}}</strong> does not match any existing order ID, TXID or invoice ID</p>\n					</div>\n				</div>\n\n			</div>\n		</div>\n		<ion-infinite-scroll on-infinite="load()" distance="1%" immediate-check="false" ng-if="!searchMode && moreAvailable"></ion-infinite-scroll>\n		<div class="bp-loading-row" ng-show="searchMode && isLoading" ng-class="{ \'active\': isLoading }">\n			<ion-spinner></ion-spinner>\n		</div>\n		<div class="bp-loading-row" ng-show="invoiceLoadingError">\n			<div ng-hide="invoiceLoadingErrorMessage" lcl>An error has occurred while requesting payment data.</div>\n			<div ng-show="invoiceLoadingErrorMessage" lcl>{{ invoiceLoadingErrorMessage }}</div>\n		</div>\n	</ion-content>\n\n\n</ion-view>\n'),e.put("components/payments/refund.html",'<ion-view view-title="Payment Refund" bp-back-button-sref="menu.paymentDetails({ id: invoiceId })">\n\n  <ion-content>\n\n    <div class="bp-alert" ng-show="unexpectedError">\n      <div class="bp-alert__icon-box bp-alert__icon-box--orange"><i class="icon ion-alert"></i></div>\n      <div class="bp-alert__content">\n        <span lcl>An unexpected error has occurred.</span>\n      </div>\n    </div>\n\n    <form bp-detect-submission name="refundForm"  novalidate ng-submit="next(refundForm)">\n\n      <div class="bp-panel" ng-hide="exceptionStatus">\n\n        <div class="bp-panel__body">\n\n          <div class="bp-panel__body__description">\n\n            <div class="bp-panel__body__name" lcl>Refund amount</div>\n\n            <p lcl>Please choose how much of this payment you would like to refund. If partial, you will have to enter the\n            amount manually.</p>\n\n            <p><b>Refundable total: </b>{{refund.fullAmount | currency:refundCurrencyObj}} {{refundCurrency}}</p>\n\n          </div>\n\n          <div class="bp-panel__body__content">\n\n            <div ng-disabled="onlyPartial">\n              <bp-radio ng-model="refund.type" value="full">\n                <div lcl>Full Refund</div>\n              </bp-radio>\n            </div>\n            <bp-radio ng-model="refund.type" value="partial">\n              <div lcl>Partial Refund</div>\n            </bp-radio>\n\n            <div ng-show="refund.type == \'partial\'" class="bp-margin-top-20">\n              <label class="bp-panel__field-wrapper">\n                <span class="bp-form__field-label" lcl>{{refundCurrency}} to be refunded</span>\n                <input type="number" class="bp-panel__field-wrapper__input-text" ng-model="refund.amount" ng-max="refund.maxAmount" required>\n              </label>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error signup--error"\n                 bp-val-msg-for="refund.amount">\n                <span class="dark padding-left" lcl>\n                  Please enter a valid amount less than the refundable total.\n                </span>\n              </i>\n            </div>\n\n          </div>\n\n        </div>\n      </div>\n\n      <div class="bp-panel">\n\n        <div class="bp-panel__body">\n\n          <div class="bp-panel__body__description">\n\n            <div class="bp-panel__body__name" lcl>Customer Email Address</div>\n            <p>The customer will receive a special link at this email address that will allow them to claim their refund.</p>\n\n          </div>\n\n          <div class="bp-panel__body__content">\n\n            <div ng-show="!noPurchaserEmail">\n              <bp-radio ng-model="refund.addressType" value="preset" ng-click="resetEmailToPreset()">\n                <div lcl>Use provided email address (recommended)</div>\n              </bp-radio>\n              <bp-radio ng-model="refund.addressType" value="specified">\n                <div lcl>Specify a different email address</div>\n              </bp-radio>\n            </div>\n\n            <div ng-show="refund.addressType == \'specified\' || noPurchaserEmail" class="bp-margin-top-20">\n              <label class="bp-panel__field-wrapper" style="margin-bottom: 0.5rem">\n                <span class="bp-form__field-label" lcl>Send refund email to</span>\n                <input type="email" class="bp-panel__field-wrapper__input-text" ng-model="refund.email" required>\n              </label>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error signup--error"\n                 bp-val-msg-for="refund.email">\n                <span class="dark padding-left" lcl>Please enter a valid email address.</span></i>\n            </div>\n\n          </div>\n\n        </div>\n      </div>\n\n      <div class="bp-panel">\n        <div class="bp-panel__body">\n          <div class="bp-panel__body__description">\n          </div>\n          <div class="bp-panel__body__content">\n            <button class="bp-big-action" ladda="submitting">\n              <span lcl>View Confirmation</span>\n              <i class="bp-padding-left icon ion-chevron-right"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n\n    </form>\n\n  </ion-content>\n</ion-view>\n'),e.put("components/payments/refund-confirm.html",'<ion-view view-title="Payment Refund" bp-back-button-sref="menu.paymentRefund({ id: invoiceId })">\n\n  <ion-content>\n\n    <div class="bp-alert" ng-show="serverError">\n      <div class="bp-alert__icon-box bp-alert__icon-box--orange"><i class="icon ion-alert"></i></div>\n      <div class="bp-alert__content">\n        <span lcl>{{serverError}}</span>\n      </div>\n    </div>\n\n    <div class="bp-alert" ng-show="alertUnconfirmed">\n      <div class="bp-alert__icon-box bp-alert__icon-box--orange"><i class="icon ion-alert"></i></div>\n      <div class="bp-alert__content">\n        <span lcl>This payment does not have 6 confirmations yet and cannot be refunded.</span>\n      </div>\n    </div>\n\n    <div class="bp-alert" ng-show="alertAlreadyRefunded">\n      <div class="bp-alert__icon-box bp-alert__icon-box--orange"><i class="icon ion-alert"></i></div>\n      <div class="bp-alert__content">\n        <span lcl>This payment has already been refunded.</span>\n      </div>\n    </div>\n\n    <form bp-detect-submission name="refundForm" novalidate ng-submit="refund(refundForm)">\n\n      <div class="bp-pd__card-container">\n        <div class="card bp-pd__card">\n\n          <div class="bp-pd__card__title">\n            <div lcl>Refund Details</div>\n          </div>\n\n          <div class="bp-panel">\n\n            <div class="bp-pd__section">\n              <div class="bp-panel__item">\n                <div class="bp-panel__item__label bp-pd__item-label">\n                  Email Address\n                </div>\n                <div class="bp-panel__item__field bp-pd__item-field">\n                  <span>{{email}}</span>\n                </div>\n              </div>\n              <div class="bp-panel__item">\n                <div class="bp-panel__item__label bp-pd__item-label">\n                  Refund Amount\n                </div>\n                <div class="bp-panel__item__field bp-pd__item-field">\n                  <bp-pd-price ng-if="invoice && !fixedRate && !thirtyDayRate" invoice-price="refundAmount" currency="invoice.currency" rate="invoice.computedFields.exchangeRate" transaction-currency="invoice.transactionCurrency"></bp-pd-price>\n                  <span ng-if="invoice && !fixedRate && thirtyDayRate">{{refundAmount | currency:usdCurrency}} {{refundCurrency}} <b>*</b></span>\n                  <span ng-if="fixedRate">{{refundAmount | currency:transactionCurrency}} {{invoice.transactionCurrency}}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class="item">\n\n            <div>\n              <label class="bp-panel__field-wrapper">\n                <div class="bp-form__field-label" lcl>\n\n                  <div ng-if="!invoice.exceptionStatus">\n                    <div class="bp-pd__card__text" ng-if="!orderSettings.buyerPaysRefundFee && refundFeeEstimate > 0">\n                      A <a href="https://bitcoin.org/en/glossary/transaction-fee" target="_blank" rel="noopener noreferrer">bitcoin miner fee</a> of {{refundFeeEstimate | currency:transactionCurrency}} {{invoice.transactionCurrency}} will be charged to your ledger when BitPay processes the refund.\n                    </div>\n                  </div>\n                  <div ng-if="thirtyDayRate" class="bp-pd__card__text"><b>*</b> Bitcoin amount to be refunded will be the current BTC equivalent of the USD value specified. See <a href="/about/terms">Terms of Use</a> for refund policy details.</div>\n                  <div class="bp-pd__card__text"><b>Note: </b>Once processed, bitcoin transactions are not reversible.</div>\n                  <div class="bp-pd__card__text">\n                    If you are sure you would like to refund this payment, please enter the refund amount\n                    <b>(\n\n                      <bp-pd-price ng-if="invoice && !fixedRate && !thirtyDayRate" show-only-invoice-currency="true" invoice-price="refundAmount" currency="invoice.currency" rate="invoice.computedFields.exchangeRate" transaction-currency="invoice.transactionCurrency"></bp-pd-price>\n                      <bp-pd-price ng-if="invoice && !fixedRate && thirtyDayRate" show-only-invoice-currency="true" invoice-price="refundAmount" currency="refundCurrency" rate="thirtyDayRate" transaction-currency="invoice.transactionCurrency"></bp-pd-price>\n\n                      <span ng-if="fixedRate">{{refundAmount | currency:transactionCurrency}} {{invoice.transactionCurrency}}</span>\n\n                      )</b>.\n                    </div>\n                </div>\n                <input type="text" placeholder="0.00" class="bp-panel__field-wrapper__input-text" ng-model="confirm.amount">\n              </label>\n            </div>\n\n            <button ng-disabled="!doesConfirmMatch()" class="bp-big-action bp-margin-top-20 bp-button--red bp-pd__card__button" ladda="submitting" lcl>Refund Payment</button>\n          </div>\n\n        </div>\n      </div>\n\n    </form>\n\n  </ion-content>\n</ion-view>\n'),e.put("components/payments/refund-disabled-reasons.html",'<div class="refund-disabled-reasons">\n  <div class="content" ng-show="originalScope.disabledReason == \'accountSuspended\'">\n    <div class="info-text">This BitPay account is currently suspended and cannot process refunds.</div>\n    <a class="confirm-text hidden" ng-click="confirm()">Ok</a>\n  </div>\n  <div class="content" ng-show="originalScope.disabledReason == \'alreadyRefunded\'">\n    <div class="info-text">This payment has already been refunded.</div>\n    <a class="confirm-text hidden" ng-click="confirm()">Ok</a>\n  </div>\n  <div class="content" ng-show="originalScope.disabledReason == \'pendingRefund\'">\n    <div class="info-text">This payment already has a pending refund. Refunds are typically processed within 24 hours.</div>\n    <a class="confirm-text hidden" ng-click="confirm()">Ok</a>\n  </div>\n  <div class="content" ng-show="originalScope.disabledReason == \'underpaid\'">\n    <div class="info-text">This invoice has been underpaid and must be resolved before it can be refunded.</div>\n    <a class="confirm-text" ng-click="confirm()">Resolve now</a>\n  </div>\n  <div class="content" ng-show="originalScope.disabledReason == \'overpaid\'">\n    <div class="info-text">This invoice has been overpaid and must be resolved before it can be refunded.</div>\n    <a class="confirm-text" ng-click="confirm()">Resolve now</a>\n  </div>\n  <div class="content" ng-show="originalScope.disabledReason == \'invalid\'">\n    <div class="info-text">This payment is invalid and cannot be refunded.</div>\n    <a class="confirm-text hidden" ng-click="confirm()">Ok</a>\n  </div>\n  <div class="content" ng-show="originalScope.disabledReason == \'permissions\'">\n    <div class="info-text">Your administrator has not granted you the ability to refund payments.</div>\n    <a class="confirm-text hidden" ng-click="confirm()">Ok</a>\n  </div>\n  <div class="content" ng-show="originalScope.disabledReason == \'confirmations\'">\n    <div class="info-text">This payment will be refundable once it has 6 confirmations. Check back soon.</div>\n    <a class="confirm-text hidden" ng-click="confirm()">Ok</a>\n  </div>\n  <div class="content" ng-show="originalScope.disabledReason == \'expired\'">\n    <div class="info-text">This invoice has expired and cannot be refunded.</div>\n    <a class="confirm-text hidden" ng-click="confirm()">Ok</a>\n  </div>\n</div>\n'),e.put("components/payments/resolve-exception.html",'<ion-view view-title="Resolve Payment Exception" bp-back-button-sref="menu.paymentDetails({ id: invoiceId })">\n\n  <ion-content>\n\n\n      <div class="bp-panel">\n\n        <div class="bp-panel__body">\n\n          <div class="bp-panel__body__description">\n            <div class="bp-panel__body__name" lcl>Resolution method</div>\n            <p>Please choose a method of resolving the discrepancy between the invoice total and the amount paid by the purchaser.</p>\n          </div>\n\n          <div class="bp-panel__body__content">\n\n            <form bp-detect-submission name="resolutionForm" novalidate ng-submit="next(resolutionForm)">\n\n            <div>\n\n              <bp-radio ng-show="isOverpaid" ng-model="resolution.type" value="refundOverpayment">\n                <div lcl>Refund Overpayment</div>\n                <div class="bp-radio__desc">Return the extra bitcoin paid back to the purchaser.</div>\n              </bp-radio>\n              <bp-radio ng-disabled="isThirtyDays" ng-show="isUnderpaid" ng-model="resolution.type" value="acceptUnderpayment">\n                <div lcl>Accept Underpayment</div>\n                <div ng-show="!isThirtyDays" class="bp-radio__desc">Credit the amount paid to your account and mark the invoice as paid.</div>\n                <div ng-show="isThirtyDays" class="bp-radio__desc">Unavailable because invoice is older than 30 days.</div>\n              </bp-radio>\n              <bp-radio ng-show="isUnderpaid" ng-model="resolution.type" value="refundUnderpayment">\n                <div lcl>Refund Underpayment</div>\n                <div class="bp-radio__desc">Return the bitcoin paid back to the purchaser and cancels the payment.</div>\n              </bp-radio>\n\n            </div>\n\n            <button class="bp-big-action bp-margin-top-20" ladda="submitting" lcl>\n              <span>Next</span>\n              <i class="bp-padding-left icon ion-chevron-right"></i>\n            </button>\n\n            </form>\n\n          </div>\n\n        </div>\n      </div>\n\n\n  </ion-content>\n</ion-view>\n\n'),e.put("components/process-settlement-settings-changes/process-settlement-settings-changes.html",'<ion-view view-title="Settlement Settings">\n\n  <ion-content>\n\n    <alert animation="slide-in-up" show="badCode" type="\'error\'" lcl>You have made changes to your settlement settings since this email was sent. Please click the link in the newer email.</alert>\n\n    <div class="bp-alert" ng-show="updateError">\n      <div class="bp-alert__icon-box bp-alert__icon-box--orange"><i class="icon ion-alert"></i></div>\n      <div class="bp-alert__content">\n        <span lcl>{{updateError}}</span>\n      </div>\n    </div>\n\n    <div ng-hide="badCode">\n\n      <div class="settlement-settings__current-info">\n\n        <div class="bp-section" ng-show="!bankInfo && !btcInfo">\n          <div class="bp-inside">\n            <h3 lcl>Reset Settlement Settings</h3>\n            <p>Your settlement settings will be reset.  In order to receive settlement you must re-enter and confirm them by email.</p>\n            <p>If you did not request the reset of your settlement settings, please contact <a href="mailto:support@bitpay.com?subject=Settlement%20Reset%20Request">support</a> immediately.</p>\n          </div>\n        </div>\n\n\n        <div class="bp-section" ng-show="settlementSettingsChanges.payoutPercentage > 0 && bankInfo">\n          <div class="bp-inside">\n\n            <p lcl>These are your pending changes. Are you sure you want to apply these changes?</p>\n\n\n            <h3 lcl>Bank Account</h3>\n\n            <div class="bank-account-card card row">\n              <div class="col col-25">\n                <img ng-src="img/currencies/{{settlementSettingsChanges.payoutCurrency}}.png">\n              </div>\n              <div class="col col-75">\n                <div class="list bank-fields">\n\n                  <div ng-if="bankFields.name">\n                    <div lcl>Name on Bank Account</div>\n                    <div>{{bankInfo.name}}</div>\n                  </div>\n\n                  <div ng-if="bankFields.routing">\n                    <div lcl>ACH Routing Number</div>\n                    <div>{{bankInfo.routing}}</div>\n                  </div>\n\n                  <div ng-if="bankFields.account">\n                    <div lcl>Account Number</div>\n                    <div>{{bankInfo.account}}</div>\n                  </div>\n\n                  <div ng-if="bankFields.clabe">\n                    <div lcl>CLABE</div>\n                    <div>{{bankInfo.account}}</div>\n                  </div>\n\n                  <div ng-if="bankFields.iban">\n                    <div lcl>IBAN</div>\n                    <div>{{bankInfo.account}}</div>\n                  </div>\n\n                  <div ng-if="bankFields.mercado">\n                    <div lcl>Mercado Bitcoin Account</div>\n                    <div>{{bankInfo.account}}</div>\n                  </div>\n\n                  <div ng-if="bankFields.swift">\n                    <div lcl>Bank SWIFT Code</div>\n                    <div>{{bankInfo.swift}}</div>\n                  </div>\n\n                  <div ng-if="bankFields.swiftCAD">\n                    <div lcl>Bank Transit Number</div>\n                    <div>{{bankInfo.swift}}</div>\n                  </div>\n\n                  <div ng-if="bankFields.bank">\n                    <div lcl>Name of Bank</div>\n                    <div>{{bankInfo.bank}}</div>\n                  </div>\n\n                  <div ng-if="bankFields.sort">\n                    <div lcl>Bank Sort Code</div>\n                    <div>{{bankInfo.sort}}</div>\n                  </div>\n\n                  <div ng-if="bankFields.bsb">\n                    <div lcl>BSB</div>\n                    <div>{{bankInfo.sort}}</div>\n                  </div>\n\n                  <div ng-if="bankFields.merchantEIN">\n                    <div lcl>US Tax Identification Number (EIN)</div>\n                    <div>{{bankInfo.merchantEIN}}</div>\n                  </div>\n\n                  <div ng-if="bankFields.address">\n                    <div lcl>Bank Street Address</div>\n                    <div>{{bankInfo.address}}</div>\n                  </div>\n\n                  <div ng-if="bankFields.city">\n                    <div lcl>Bank City</div>\n                    <div>{{bankInfo.city}}</div>\n                  </div>\n\n                  <div ng-if="bankFields.postal">\n                    <div lcl>Bank Postal Code</div>\n                    <div>{{bankInfo.postal}}</div>\n                  </div>\n\n                  <div ng-if="bankFields.dob">\n                    <div lcl>Date of Birth</div>\n                    <div>{{bankInfo.dob | date:short}}</div>\n                  </div>\n\n                </div>\n              </div>\n\n            </div>\n\n          </div>\n        </div>\n\n        <div class="bp-section" ng-show="settlementSettingsChanges.payoutPercentage > 0 && wireInfo">\n          <div class="bp-inside">\n\n            <p lcl>These are your pending changes. Are you sure you want to apply these changes?</p>\n\n\n            <h3 lcl>Wire Transfer</h3>\n\n            <div class="bank-account-card card row">\n              <div class="col col-25">\n                <img ng-src="img/currencies/{{settlementSettingsChanges.payoutCurrency}}.png">\n              </div>\n              <div class="col col-75">\n                <div class="list bank-fields">\n\n                  <div ng-if="wireFields.accountHolderName">\n                    <div lcl>Name on Bank Account</div>\n                    <div>{{wireInfo.accountHolderName}}</div>\n                  </div>\n\n                  <div ng-if="wireFields.accountHolderAddress">\n                    <div lcl>Account Holder Address</div>\n                    <div>{{wireInfo.accountHolderAddress}}</div>\n                  </div>\n\n                  <div ng-if="wireFields.accountHolderAddress2">\n                    <div lcl>Account Holder Address 2</div>\n                    <div>{{wireInfo.accountHolderAddress2}}</div>\n                  </div>\n\n                  <div ng-if="wireFields.accountHolderPostalCode">\n                    <div lcl>Account Holder Postal Code</div>\n                    <div>{{wireInfo.accountHolderPostalCode}}</div>\n                  </div>\n\n                  <div ng-if="wireFields.accountHolderCity">\n                    <div lcl>Account Holder City</div>\n                    <div>{{wireInfo.accountHolderCity}}</div>\n                  </div>\n\n                  <div ng-if="wireFields.accountHolderState">\n                    <div lcl>Account Holder State</div>\n                    <div>{{wireInfo.accountHolderState}}</div>\n                  </div>    \n\n                  <div ng-if="wireFields.accountHolderCountry">\n                    <div lcl>Account Holder Country</div>\n                    <div>{{wireInfo.accountHolderCountry}}</div>\n                  </div>    \n\n                  <div ng-if="wireFields.iban">\n                    <div lcl>IBAN</div>\n                    <div>{{wireInfo.iban}}</div>\n                  </div>\n\n                  <div ng-if="wireFields.nationalRoutingNumber">\n                    <div lcl>National Routing Number</div>\n                    <div>{{wireInfo.nationalRoutingNumber}}</div>\n                  </div>\n\n                  <div ng-if="wireFields.account">\n                    <div lcl>Bank Account Number</div>\n                    <div>{{wireInfo.account}}</div>\n                  </div>\n\n                  <div ng-if="wireFields.swift">\n                    <div lcl>BIC / SWIFT</div>\n                    <div>{{wireInfo.swift}}</div>\n                  </div>\n\n                  <div ng-if="wireFields.bankName">\n                    <div lcl>Name of Bank</div>\n                    <div>{{wireInfo.bankName}}</div>\n                  </div>\n\n                  <div ng-if="wireFields.bankAddress">\n                    <div lcl>Bank Street Address</div>\n                    <div>{{wireInfo.bankAddress}}</div>\n                  </div>\n\n                  <div ng-if="wireFields.bankAddress2">\n                    <div lcl>Bank Street Address 2</div>\n                    <div>{{wireInfo.bankAddress2}}</div>\n                  </div>\n\n                  <div ng-if="wireFields.bankCity">\n                    <div lcl>Bank City</div>\n                    <div>{{wireInfo.bankCity}}</div>\n                  </div>\n\n                  <div ng-if="wireFields.bankState">\n                    <div lcl>Bank State</div>\n                    <div>{{wireInfo.bankState}}</div>\n                  </div>\n\n                  <div ng-if="wireFields.bankCountry">\n                    <div lcl>Bank Country</div>\n                    <div>{{wireInfo.bankCountry}}</div>\n                  </div>\n\n                  <div ng-if="wireFields.additionalInformation">\n                    <div lcl>Additional Information</div>\n                    <div>{{wireInfo.additionalInformation}}</div>\n                  </div>\n\n                  <div ng-if="wireFields.label">\n                    <div lcl>Account Nickname</div>\n                    <div>{{wireInfo.label}}</div>\n                  </div>\n\n                </div>\n              </div>\n\n            </div>\n\n          </div>\n        </div>\n\n        <div class="bp-section" ng-show="settlementSettingsChanges.payoutPercentage < 100 && btcInfo">\n          <div class="bp-inside">\n            <h3 lcl>Bitcoin Address</h3>\n\n            <div class="bank-account-card card">\n              <div class="row">\n                <div class="col col-25">\n                  <img src="img/currencies/BTC.png" width="75%">\n                </div>\n                <div class="col col-75">\n                  <h3>{{btcInfo.label}}</h3>\n\n                  <div>{{ 100 - settlementSettingsChanges.payoutPercentage }}%</div>\n                </div>\n              </div>\n              <div class="center-content">\n                <p class="btc-address">{{ btcInfo.bitcoinAddress }}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n      <div class="bp-section">\n        <div class="bp-inside" style="display: flex">\n          <button ng-click="processChanges(\'accept\')" class="bp-big-action">Accept Changes</button>\n          <button ng-click="processChanges(\'reject\')" class="button-link">Reject Changes</button>\n        </div>\n      </div>\n\n\n    </div>\n\n  </ion-content>\n\n</ion-view>\n'),e.put("components/redirect/redirect.html",""),e.put("components/remove-account/remove-account.html",'<ion-view view-title="Delete Account" class="login">\n  <ion-content>\n    <div class="remove-account__container">\n      <div class="logo__container">\n        <img class="login__logo" src="img/bitpay-logo.svg">\n      </div>\n      <alert class="center-content" show="alert.type" type="alert.type">{{alert.message}}</alert>\n      <div ng-show="!accountDeleted">\n        <div lcl>Are you sure you want to delete the account associated with your email address? This will permanently delete your account.</div>\n        <a class="button button-assertive button-block" ng-click="removeUnauthorizedAccoutn()">Permanently Delete Account</a>\n      </div>\n    </div>\n  </ion-content>\n</ion-view>\n'),e.put("components/settings/edit/currencies.html",'<ion-view view-title="Accepted Currencies" bp-back-button-sref="menu.settings.general">\n        <ion-content>\n      \n          <div class="bp-alert" ng-show="saveSucceeded">\n            <div class="bp-alert__icon-box bp-alert__icon-box--green"><i class="icon ion-checkmark"></i></div>\n            <div class="bp-alert__content">\n              <span lcl>Your currency settings have been successfully updated.</span>\n            </div>\n          </div>\n          <div class="bp-alert" ng-show="unexpectedError">\n            <div class="bp-alert__icon-box bp-alert__icon-box--orange"><i class="icon ion-alert"></i></div>\n            <div class="bp-alert__content">\n              <span lcl>{{unexpectedError}}</span>\n            </div>\n          </div>\n      \n          <form name="currenciesForm" novalidate ng-submit="save(currenciesForm)">\n      \n            <div class="bp-panel">\n              <div class="bp-panel__header">\n                <div class="bp-panel__header__name" lcl>Accepted Currencies</div>\n              </div>\n              <div class="bp-panel__body">\n                <div class="bp-panel__body__description">\n                  <p lcl>Your customers have the option of paying with various BitPay supported currencies. If you\'d like to disable any, you can do that here (not recommended).</p>\n                </div>\n                <div class="bp-panel__body__content" style="margin-top: 0;">\n                <label class="bp-panel__field-wrapper bp-panel__field-wrapper--switch" ng-repeat="(key, value) in supportedTransactionCurrencies | toArray | orderBy:key" ng-disabled="value.disabledReason">\n                    <div class="bp-panel__field-wrapper__ion-toggle bp-panel__field-wrapper__switch">\n                      <div class="bp-panel__field-wrapper__switch__label">{{ currencyCodeMap[value.$key].name }} ({{ value.$key }})</div>\n                      <div class="toggle">\n                        <input type="checkbox" ng-model="value.enabled" ng-disabled="value.disabledReason">\n                        <div class="track">\n                          <div class="handle"></div>\n                        </div>\n                      </div>\n                    </div>\n                  </label>\n                </div>\n              </div>\n            </div>\n      \n            <div class="bp-panel">\n              <div class="bp-panel__body">\n                <div class="bp-panel__body__description">\n                  <div class="bp-panel__header__name"></div>\n                </div>\n                <div class="bp-panel__body__content">\n                  <button class="bp-big-action" ladda="submitting" lcl>Save</button>\n                </div>\n              </div>\n            </div>\n      \n          </form>\n      \n        </ion-content>\n      </ion-view>'),e.put("components/settings/edit/exceptions.html",'<ion-view view-title="Automatic Exception Handling" bp-back-button-sref="menu.settings.general">\n  <ion-content>\n\n    <div class="bp-alert" ng-show="saveSucceeded">\n      <div class="bp-alert__icon-box bp-alert__icon-box--green"><i class="icon ion-checkmark"></i></div>\n      <div class="bp-alert__content">\n        <span lcl>Your order settings have been successfully updated.</span>\n      </div>\n    </div>\n    <div class="bp-alert" ng-show="unexpectedError">\n      <div class="bp-alert__icon-box bp-alert__icon-box--orange"><i class="icon ion-alert"></i></div>\n      <div class="bp-alert__content">\n        <span lcl>An unexpected error has occurred.</span>\n      </div>\n    </div>\n\n    <form name="orderSettingsForm" novalidate ng-submit="save(orderSettingsForm)">\n\n      <div class="bp-panel {{user.planId > 2 ? \'\' : \'disabled\'}}">\n        <div class="bp-panel__header">\n          <div class="bp-panel__header__name" lcl>Underpayments</div>\n        </div>\n        <div class="bp-panel__body">\n          <div class="bp-panel__body__description">\n            <p lcl>An invoice price will be automatically adjusted down so it counts as fully paid if the underpaid amount is within the thresholds you define.</p>\n            <p lcl><strong>Deprecation Notice:</strong> Recent improvements to the BitPay platform have greatly reduced the incidence of underpayments. Consequently, to simplify our platform, we will remove the ability to accept underpayments in the near future.</p>\n          </div>\n          <div class="bp-panel__body__content">\n\n            <label class="bp-panel__field-wrapper">\n              <div class="bp-form__field-label">Automatically accept underpayments?</div>\n              <div class="bp-panel__field-wrapper__ion-toggle">\n                <div>No</div>\n                <div class="toggle">\n                  <input ng-disabled="{{user.planId < 2}}" type="checkbox" ng-model="es.acceptUnderpayments">\n\n                  <div class="track">\n                    <div class="handle"></div>\n                  </div>\n                </div>\n                <div>Yes</div>\n              </div>\n            </label>\n\n            <div ng-show="es.acceptUnderpayments">\n              <label class="bp-panel__field-wrapper">\n                <span class="bp-form__field-label">Maximum Percent Below Invoice Price</span>\n                  <div>\n                    <input class="bp-slider" style="float:left;margin-right:10px;" type="range" min="1" max="99" ng-model="es.underpaymentPercentage" name="es.underpaymentPercentage">\n                    <span>{{es.underpaymentPercentage}}%</span>\n                    <!-- <input type="number" class="bp-panel__field-wrapper__input-text" ng-model="es.underpaymentPercentage" ng-change="validateExceptionSettings()" name="es.underpaymentPercentage"> -->\n                  </div>\n              </label>\n            </div>\n\n            <div ng-show="es.acceptUnderpayments">\n              <span class="bp-form__field-label" >Do not accept if underpaid by more than</span>\n              <label class="bp-panel__field-wrapper" style="margin:0">\n                <input type="number" class="bp-panel__field-wrapper__input-text" ng-model="es.underpaymentThreshold" ng-change="validateExceptionSettings()" name="es.underpaymentThreshold" style="width: 100px; float:left; margin-right: 10px;">\n                </label>\n                <span class="bp-dropdown" style="float: left;">\n                  <select ng-model="es.underpaymentCurrency" ng-change="validateExceptionSettings()" style="width: 100px; font-size: small;">\n                    <option>EUR</option>\n                    <option>USD</option>\n                    <option>AUD</option>\n                    <option>CAD</option>\n                    <option>GBP</option>\n                    <option>MXN</option>\n                    <option>NZD</option>\n                    <option>ZAR</option>\n                    <option>BTC</option>\n                  </select>\n                </span>\n                <div style="clear:left;">\n                  <i ng-show="!es.underpaymentThresholdValid" class="generic-form-error icon-left assertive ion-android-close bp-error signup--error"  >\n                    <span class="dark padding-left" lcl>Must be more than {{underpaymentThreshold}} {{es.underpaymentCurrency}}</span>\n                  </i>\n                </div>\n              </label>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class="bp-panel">\n        <div class="bp-panel__body">\n          <div class="bp-panel__body__description">\n            <div class="bp-panel__header__name"></div>\n          </div>\n          <div class="bp-panel__body__content">\n            <button class="bp-big-action" ladda="submitting" ng-disabled="user.planId < 2 || !exceptionSettingsValid()" lcl>Save</button>\n          </div>\n        </div>\n      </div>\n\n    </form>\n\n  </ion-content>\n</ion-view>'),e.put("components/settings/edit/order.html",'<ion-view view-title="Order Settings" bp-back-button-sref="menu.settings.general">\n  <ion-content>\n\n    <div class="bp-alert" ng-show="saveSucceeded">\n      <div class="bp-alert__icon-box bp-alert__icon-box--green"><i class="icon ion-checkmark"></i></div>\n      <div class="bp-alert__content">\n        <span lcl>Your order settings have been successfully updated.</span>\n      </div>\n    </div>\n    <div class="bp-alert" ng-show="unexpectedError">\n      <div class="bp-alert__icon-box bp-alert__icon-box--orange"><i class="icon ion-alert"></i></div>\n      <div class="bp-alert__content">\n        <span lcl>An unexpected error has occurred.</span>\n      </div>\n    </div>\n\n    <form bp-detect-submission name="orderSettingsForm" novalidate ng-submit="save(orderSettingsForm)">\n\n      <div class="bp-panel">\n\n        <div class="bp-panel__header">\n          <div class="bp-panel__header__name" lcl>Payment Notification</div>\n        </div>\n\n        <div class="bp-panel__body">\n\n          <div class="bp-panel__body__description">\n            <div class="bp-panel__header__body">\n              <p lcl>When invoices are paid, we send notifications via email and/or web hook. You may choose a specific\n                email at which to receive these notifications or choose not to receive them at all.</p>\n            </div>\n          </div>\n\n          <div class="bp-panel__body__content">\n\n            <bp-radio ng-model="orderSettings.orderEmailPreference" value="primaryContacts">\n              <span lcl>Send notifications to {{user.email}}</span>\n            </bp-radio>\n            <bp-radio ng-model="orderSettings.orderEmailPreference" value="specified">\n              <span lcl>Send notifications to a different email</span>\n            </bp-radio>\n            <bp-radio ng-model="orderSettings.orderEmailPreference" value="disabled">\n              <span lcl>Do not send me notifications via email</span>\n            </bp-radio>\n\n            <div ng-show="orderSettings.orderEmailPreference == \'specified\'" class="bp-margin-top-20">\n              <label class="bp-panel__field-wrapper">\n                <span class="bp-form__field-label" lcl>Notification Email</span>\n                <input type="email" class="bp-panel__field-wrapper__input-text" ng-model="orderSettings.orderEmail">\n              </label>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error signup--error"\n                 bp-val-msg-for="orderSettings.orderEmail">\n                <span class="dark padding-left" lcl>Please enter a valid email address.</span></i>\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n\n      <div class="bp-panel">\n        <div class="bp-panel__header">\n          <div class="bp-panel__header__name" lcl>Transaction Speed &amp; Risk</div>\n        </div>\n        <div class="bp-panel__body">\n          <div class="bp-panel__body__description">\n            <p lcl>This setting changes the length of time we wait before notifying you of a payment. The medium\n              setting is recommended for most merchants as it is considered safe for most transactions. On average, medium speed payments are confirmed in 10 minutes.</p>\n\n            <p lcl>If you want an immediate notification for a payment, you can use the high speed setting. However,\n              this setting makes you more susceptible to receiving fraudulent payments, so it is not recommended.</p>\n\n            <p class="bp-italic" lcl>Regardless of this setting, a fully paid invoice is credited to your account only after the transaction has accrued the number of confirmations at which BitPay considers the payment fully settled.\n            </p>\n\n            <a href="https://support.bitpay.com/hc/en-us/articles/202943915-What-does-the-Transaction-Speed-setting-do-" target="_blank"\n               rel="noopener noreferrer" lcl>More info</a>\n\n          </div>\n          <div class="bp-panel__body__content">\n\n            <bp-radio ng-model="orderSettings.transactionSpeed" value="high">\n              <div>High</div>\n              <p>Invoice will be confirmed immediately when payment is received on the network.</p>\n            </bp-radio>\n            <bp-radio ng-model="orderSettings.transactionSpeed" value="medium">\n              <div>Medium (Recommended for most merchants)</div>\n              <p>Invoice will be confirmed when full payment has been confirmed by one block on the network.\n              </p>\n            </bp-radio>\n            <bp-radio ng-model="orderSettings.transactionSpeed" value="low">\n              <div>Low</div>\n              <p>Invoice will be confirmed when full payment has been confirmed to the confirmation number at which BitPay considers it fully settled.\n              </p>\n            </bp-radio>\n\n          </div>\n        </div>\n      </div>\n\n      <div class="bp-panel" ng-show="orderSettings.transactionSpeed === \'high\'">\n        <div class="bp-panel__body">\n          <div class="bp-panel__body__description">\n            <p lcl>\n              If BitPay determines that an incoming payment is a potential double-spend or has a higher risk of not\n              being confirmed, I want BitPay to downgrade my transaction speed from High to Medium. I will not be\n              notified of a “confirmed” payment until the transaction has one confirmation.\n            </p>\n          </div>\n          <div class="bp-panel__body__content">\n\n            <label class="item bp-item-nowrap item-checkbox">\n              <div class="checkbox checkbox-input-hidden disable-pointer-events">\n                <input type="checkbox" ng-model="orderSettings.delayNotifyZeroFeeTx">\n                <i class="checkbox-icon"></i>\n              </div>\n              <div lcl>High-Speed Risk Mitigation</div>\n              <p lcl>\n                This is recommended for most organizations. By turning this off, I want all my transactions accepted at\n                High speed, even if they are higher risk.\n              </p>\n            </label>\n\n          </div>\n        </div>\n      </div>\n\n      <div class="bp-panel">\n        <div class="bp-panel__header">\n          <div class="bp-panel__header__name" lcl>Refund Exchange Rate Policy</div>\n        </div>\n        <div class="bp-panel__body">\n          <div class="bp-panel__body__description">\n            <p lcl>As the price of bitcoin can fluctuate, it’s important that bitcoin-accepting merchants maintain a clear refund policy.</p>\n            <p lcl>We recommend the “Current Rate Refunds” policy, which does not expose merchants to bitcoin price changes occurring between the time the payment is made and the time the refund is issued.</p>\n            <p lcl>While the refund policy determines the method by which bitcoin refund amounts are calculated, BitPay enables merchants to issue full or partial refunds for all transactions.</p>\n          </div>\n          <div class="bp-panel__body__content">\n\n            <bp-radio ng-model="orderSettings.refundPolicy" value="invoice">\n              <div>Current Rate Refunds (recommended)</div>\n              <p>The refunded bitcoin amount will be calculated using the BBB rate at the time the refund is made. The\n                precise bitcoin amount will likely be different than the original amount sent, but it’s value will be\n                equivalent in the pricing currency.</p>\n            </bp-radio>\n            <bp-radio ng-model="orderSettings.refundPolicy" value="bitcoin">\n              <div>Fixed Rate Refunds</div>\n              <p>The refunded bitcoin amount will be calculated using the BBB rate at the time of purchase. Fixed Rate\n                Refunds may cost a merchant more to issue than the original value of the payment, and this policy is not\n                recommended for merchants without other means of hedging bitcoin price volatility.</p>\n            </bp-radio>\n\n          </div>\n        </div>\n      </div>\n\n      <div class="bp-panel">\n        <div class="bp-panel__body">\n          <div class="bp-panel__body__description">\n            <div class="bp-panel__header__name"></div>\n          </div>\n          <div class="bp-panel__body__content">\n            <button class="bp-big-action" ladda="submitting" lcl>Save</button>\n          </div>\n        </div>\n      </div>\n\n    </form>\n\n  </ion-content>\n</ion-view>'),e.put("components/settings/edit/plan.html",'<ion-view view-title="Change Plan" bp-back-button-sref="menu.settings.general">\n  <ion-content>\n\n    <div class="bp-panel bp-padding-20 bp-plan__constrain" ng-class="{\'bp-plan__constrain\': planId != 4, \'bp-plan__constrain-enterprise\': planId == 4}">\n\n      <div ng-show="planId == 3">\n        <div class="bp-plan__subheader"><strong>Just need the basics?</strong> Switch back to our <a ui-sref="menu.starterPlanConfirm">Starter Plan</a></div>\n      </div>\n\n      <div class="bp-flex-col bp-lg-flex-row bp-lg-flex-align-items-start bp-lg-flex-justify-content-space-between bp-margin-top-20">\n\n        <div class="bp-selectable-card bp-lg-flex-grow bp-lg-basis-1 bp-lg-margin-right-10 bp-flex-col bp-plan-shadow" ng-class="{\'bp-selectable-card--selected\': planId == 1 }" ng-show="planId == 1">\n          <div class="bp-plan__title bp-sm-text-left">\n            <span lcl>STARTER</span>\n            <div class="bp-plan__title__status" ng-show="planId == 1">Current Plan</div>\n          </div>\n\n          <div class="bp-flex-row bp-sm-flex-align-items-center bp-lg-flex-align-items-stretch bp-selectable-card__content">\n            <div class="bp-plan__price" style="padding-top: 62px; padding-bottom: 61px;">Free\n              <ul class="bp-plan__list bp-padding-10">\n                <li class="bp-plan__list__item--bold" lcl>30 transactions / month</li>\n                <li lcl>Up to $1,000 / day</li>\n              </ul>\n            </div>\n            <div class="bp-sm-flex-grow">\n              <ul class="bp-plan__list bp-padding-10" style="margin-top: 30px;">\n                <li lcl>Single User Login Access</li>\n                <li lcl>Email Support</li>\n                <li lcl>Core Features</li>\n                <li class="bp-plan__list__item--bold" lcl>Settlement Options</li>\n                <li lcl>Daily Bitcoin Settlements</li>\n                <li lcl>Weekly Bank Settlement via:</li>\n                <li class="bp-plan__list__item--inherited" lcl>ACH to USA Banks</li>\n                <li class="bp-plan__list__item--inherited" lcl>SEPA to Euro Banks</li>\n              </ul>\n            </div>\n\n          </div>\n        </div>\n\n        <div class="bp-selectable-card bp-lg-flex-grow bp-lg-basis-1 bp-lg-margin-left-10 bp-lg-margin-right-10 bp-flex-col bp-plan-shadow" ng-class="{\'bp-selectable-card--selected\': planId == 3 }" ng-hide="planId == 4">\n          <div class="bp-plan__title bp-plan__title__business">\n            <span lcl>Business</span>\n            <div class="bp-plan__title__status" ng-show="planId == 3">Current Plan</div>\n          </div>\n\n          <div class="bp-flex-row bp-sm-flex-align-items-center bp-lg-flex-align-items-stretch bp-selectable-card__content">\n            <div class="bp-plan__price">\n              <span class="bp-plan__price__percent">1%</span>\n              <span class="bp-plan__price__percent-label">Service fee</span>\n              <ul class="bp-plan__list bp-padding-10" style="margin-top: -20px;">\n                <li class="bp-plan__list__item--bold" lcl>Unlimited Transactions</li>\n              </ul>\n              <div class="bp-big-action bp-plan__btn-upgrade" ng-show="planId == 1" ui-sref="menu.businessPlanConfirm">Select</div>\n            </div>\n            <div class="bp-sm-flex-grow">\n              <ul class="bp-plan__list bp-padding-10" style="margin-top: 30px;">\n                <li lcl>Automatic Payment Exception Handling</li>\n                <li lcl>Multi-User Login Access</li>\n                <li lcl>Email Support</li>\n                <li lcl>Core Features</li>\n\n                <li class="bp-plan__list__item--bold" lcl>Settlement Options</li>\n                <li class="bp-plan__list__item--inherited" lcl>Daily Bitcoin Settlements</li>\n                <li class="bp-plan__list__item--inherited" lcl>Daily Bank Settlements via:</li>\n                <li class="bp-plan__list__item--inherited" lcl>ACH to USA Banks</li>\n                <li class="bp-plan__list__item--inherited" lcl>SEPA to Euro Banks</li>\n                <li class="bp-plan__list__item--inherited" lcl>SPEI to Mexico Banks</li>\n                <li class="bp-plan__list__item--bold" lcl>Bank transfer to:</li>\n                <li class="bp-plan__list__item--inherited" lcl>UK, Brazil, South Africa,</li>\n                <li class="bp-plan__list__item--inherited" lcl>Australia, New Zealand</li>\n                <li class="bp-plan__list__item--bold" lcl>Integrations</li>\n                <li class="bp-plan__list__item--inherited" lcl>Quickbooks IIF Download</li>\n              </ul>\n            </div>\n\n          </div>\n        </div>\n\n    </div>\n\n    <div class="bp-plan__need-more" ng-show="planId == 1">\n      <strong>Need more?</strong> <a ui-sref="menu.enterprisePlanConfirm">Contact us</a> about our Enterprise plan.\n      <div class="bp-big-action bp-plan__btn-upgrade bp-plan_btn-enterprise" ui-sref="menu.enterprisePlanConfirm">Contact us</div>\n    </div>\n\n  </ion-content>\n</ion-view>\n'),e.put("components/settings/edit/plan/business.html",'<ion-view view-title="Confirm Business Plan" bp-back-button-sref="menu.planSettings">\n  <ion-content>\n\n    <div class="bp-pd__card-container" ng-hide="confirmSuccess">\n      <div class="card bp-pd__card">\n\n        <div class="bp-pd__card__title">\n          <div lcl>Plan Change Details</div>\n        </div>\n\n        <div class="item" style="border-top: 0;">\n\n          <div>\n            <label class="bp-panel__field-wrapper">\n              <div class="bp-form__field-label" lcl>\n                <p style="margin-bottom: 12px;width: auto; white-space: normal">You have chosen to switch from the <span class="bp-bold">Starter</span> plan to the <span class="bp-bold">Business</span> plan. The charge for this plan is <span class="bp-bold">1%</span> per transaction.</p>\n                <p style="margin-bottom: 12px;width: auto; white-space: normal">You\'ll have immediate access to additional features, and the 1% processing fee will be applied beginning with your next invoice.</p>\n              </div>\n            </label>\n          </div>\n\n          <button ng-click="changePlan(3)" style="width: 100%" class="bp-big-action bp-margin-top-20" ladda="submitting" lcl>Upgrade to Business Plan</button>\n        </div>\n\n      </div>\n    </div>\n\n    <div class="bp-panel bp-padding-20 bp-plan-change-success" ng-if="confirmSuccess">\n      <img src="img/settings/bigcheckmark.svg">\n      <div class="bp-plan-change-success__text">You are now on the Business Plan.</div>\n      <div class="bp-margin-top-20 bp-md-text-center" ng-switch on="preUpgradeState.name">\n        <button ng-click="returnToPreUpgradeState();" class="bp-big-action" ng-switch-when="menu.verification2">Continue Applying for Tier 2</button>\n        <button ng-click="returnToPreUpgradeState();" class="bp-big-action" ng-switch-when="menu.verification3">Continue Applying for Tier 3</button>\n        <button ng-click="returnToPreUpgradeState();" class="bp-big-action" ng-switch-when="menu.settlement.settlementSettingsAddBank">Add a Bank Account</button>\n        <button ui-sref="menu.settings.general" class="bp-big-action" ng-switch-default>Back to Settings</button>\n      </div>\n    </div>\n\n  </ion-content>\n</ion-view>\n'),e.put("components/settings/edit/plan/enterprise.html",'<ion-view view-title="Enterprise Plan" bp-back-button-sref="menu.planSettings">\n  <ion-content>\n\n    <div class="bp-panel bp-padding-20">\n\n      <p>Please contact us at <a href="mailto:sales@bitpay.com">sales@bitpay.com</a> for a quote.</p>\n\n    </div>\n\n  </ion-content>\n</ion-view>\n'),e.put("components/settings/edit/plan/starter.html",'<ion-view view-title="Confirm Starter Plan" bp-back-button-sref="menu.planSettings">\n  <ion-content>\n\n    <div class="bp-alert" ng-show="needsSettlementChange">\n      <div class="bp-alert__icon-box bp-alert__icon-box--orange"><i class="icon ion-alert"></i></div>\n      <div class="bp-alert__content">\n        <span lcl>To use the Starter plan, you need to receive payment in BTC, USD, or EUR. <a bp-facade="orgAdmin" ui-sref="menu.settings.settlement">Edit your settlement settings</a>.</span>\n      </div>\n    </div>\n\n    <div class="bp-alert" ng-show="needsUserChange">\n      <div class="bp-alert__icon-box bp-alert__icon-box--orange"><i class="icon ion-alert"></i></div>\n      <div class="bp-alert__content">\n        <span lcl>To use the Starter plan, you are only allowed to have one user in your organization. <a bp-facade="orgAdmin" ui-sref="menu.settings.users">Manage Users</a>.</span>\n      </div>\n    </div>\n\n    <div class="bp-pd__card-container" ng-hide="confirmSuccess" ng-disabled="needsSettlementChange || needsUserChange">\n      <div class="card bp-pd__card">\n\n        <div class="bp-pd__card__title">\n          <div lcl>Plan Change Details</div>\n        </div>\n\n        <div class="item" style="border-top: 0;">\n\n          <div>\n            <label class="bp-panel__field-wrapper">\n              <div class="bp-form__field-label" lcl>\n                <p style="margin-bottom: 12px;width: auto; white-space: normal">You have chosen to switch from the <span class="bp-bold">Business</span>\n                  plan to the <span class="bp-bold">Starter</span>\n                  plan.\n                  <br>\n                  <br>\n                  The Starter plan provides 30 free transactions per month. If your volume exceeds 30 transactions in a given month,\n                  a 1% fee will be applied to your remaining transactions.\n                </p>\n              </div>\n            </label>\n          </div>\n\n          <button ng-click="changePlan(1)" style="width: 100%" class="bp-big-action bp-margin-top-20" ladda="submitting" lcl>Downgrade to Starter Plan</button>\n        </div>\n\n      </div>\n    </div>\n\n    <div class="bp-padding-20 bp-plan-change-success" ng-if="confirmSuccess">\n      <img src="img/settings/bigcheckmark.svg">\n      <div class="bp-plan-change-success__text">You are now on the Starter Plan.</div>\n      <div class="bp-margin-top-20 bp-md-text-center">\n        <button class="bp-big-action" ui-sref="menu.settings.general">Back to Settings</button>\n      </div>\n    </div>\n\n  </ion-content>\n</ion-view>\n'),e.put("components/settings/edit/profile.html",'<ion-view view-title="Merchant Profile" bp-back-button-sref="menu.settings.general">\n  <ion-content>\n\n    <div class="bp-alert" ng-show="saveSucceeded">\n      <div class="bp-alert__icon-box bp-alert__icon-box--green"><i class="icon ion-checkmark"></i></div>\n      <div class="bp-alert__content">\n        <span lcl>Your profile has been successfully updated.</span>\n      </div>\n    </div>\n\n    <div class="bp-alert" ng-show="unexpectedError">\n      <div class="bp-alert__icon-box bp-alert__icon-box--orange"><i class="icon ion-alert"></i></div>\n      <div class="bp-alert__content">\n        <span lcl>An unexpected error has occurred.</span>\n      </div>\n    </div>\n\n    <form bp-detect-submission name="editprofile" novalidate  ng-submit="save(editprofile)">\n\n\n      <div class="bp-panel">\n        <div class="bp-panel__body">\n\n          <div class="bp-panel__body__description">\n            <div class="bp-panel__header__name" lcl>Organization Info</div>\n            <p>If you need to update any locked organization fields please contact <a href="mailto:support@bitpay.com">support@bitpay.com</a>.</p>\n          </div>\n\n          <div class="bp-panel__body__content">\n\n            <label class="bp-panel__field-wrapper">\n              <span class="bp-form__field-label" lcl>Name</span>\n              <input type="text" class="bp-panel__field-wrapper__input-text" ng-model="profile.name" readonly>\n            </label>\n\n            <label class="bp-panel__field-wrapper">\n              <span class="bp-form__field-label" lcl>Description</span>\n              <textarea class="bp-panel__field-wrapper__input-text" ng-model="profile.description" readonly></textarea>\n            </label>\n\n            <label class="bp-panel__field-wrapper">\n              <span class="bp-form__field-label" lcl>Industry</span>\n              <input type="text" class="bp-panel__field-wrapper__input-text" ng-model="profile.industry" readonly>\n            </label>\n            <label class="bp-panel__field-wrapper">\n              <span class="bp-form__field-label" lcl>Website</span>\n              <input type="text" class="bp-panel__field-wrapper__input-text" ng-model="profile.website" readonly>\n            </label>\n            <!--\n            <label class="bp-panel__field-wrapper">\n              <div class="bp-form__field-label">Would you like to be listed in the directory?</div>\n              <div class="bp-panel__field-wrapper__ion-toggle">\n                <div>No</div>\n                <div class="toggle">\n                  <input type="checkbox" ng-model="profile.listPublicly">\n\n                  <div class="track">\n                    <div class="handle"></div>\n                  </div>\n                </div>\n                <div>Yes</div>\n              </div>\n            </label>\n\n            <label class="bp-panel__field-wrapper">\n              <div class="bp-form__field-label">Do you accept bitcoin online?</div>\n              <div class="bp-panel__field-wrapper__ion-toggle">\n                <div>No</div>\n                <div class="toggle">\n                  <input type="checkbox" ng-model="profile.acceptOnline">\n\n                  <div class="track">\n                    <div class="handle"></div>\n                  </div>\n                </div>\n                <div>Yes</div>\n              </div>\n            </label>\n\n            <label class="bp-panel__field-wrapper" ng-show="profile.acceptOnline">\n              <span class="bp-form__field-label">Storefront URL</span>\n              <input type="text" class="bp-panel__field-wrapper__input-text" ng-model="profile.name" ng-required="true">\n            </label>\n            <i class="generic-form-error icon-left assertive ion-android-close bp-error signup--error" bp-val-msg-for="profile.storefrontUrl">\n              <span class="dark padding-left" lcl>Please enter the name of your organization.</span></i>\n            -->\n\n          </div>\n\n        </div>\n      </div>\n      <div class="bp-panel">\n        <div class="bp-panel__body">\n\n          <div class="bp-panel__body__description">\n            <div class="bp-panel__header__name" lcl>Support Contact Info</div>\n            <p>Providing support contact information during the checkout process can improve conversion rates and customer satisfaction. Contact information provided here will be displayed on your BitPay invoices and receipts.</p>\n          </div>\n\n          <div class="bp-panel__body__content">\n\n            <label class="bp-panel__field-wrapper">\n              <span class="bp-form__field-label" lcl>Support Phone</span>\n              <input type="tel" class="bp-panel__field-wrapper__input-text" ng-model="profile.phone">\n            </label>\n            <i class="generic-form-error icon-left assertive ion-android-close bp-error signup--error" bp-val-msg-for="profile.phone">\n              <span class="dark padding-left" lcl>Please enter a valid phone number.</span></i>\n\n\n            <label class="bp-panel__field-wrapper">\n              <div class="bp-form__field-label">Preferred Contact Method</div>\n              <div class="bp-panel__field-wrapper__ion-toggle">\n                <div>Email</div>\n                <div class="toggle">\n                  <input type="checkbox" ng-model="profile.preferredSupportChannel" ng-true-value="\'website\'" ng-false-value="\'email\'">\n\n                  <div class="track">\n                    <div class="handle"></div>\n                  </div>\n                </div>\n                <div>Website</div>\n              </div>\n            </label>\n\n            <div ng-show="profile.preferredSupportChannel === \'email\'">\n              <label class="bp-panel__field-wrapper">\n                <span class="bp-form__field-label" lcl>Support Email</span>\n                <input type="email" class="bp-panel__field-wrapper__input-text" ng-model="profile.email" ng-required="profile.preferredSupportChannel === \'email\'">\n              </label>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error signup--error" bp-val-msg-for="profile.email">\n                <span class="dark padding-left" lcl>Please enter a valid email address.</span></i>\n            </div>\n\n            <div ng-show="profile.preferredSupportChannel === \'website\'">\n              <label class="bp-panel__field-wrapper">\n                <span class="bp-form__field-label" lcl>Support Website</span>\n                <input type="text" class="bp-panel__field-wrapper__input-text" ng-model="profile.supportWebsite"\n                       ng-required="profile.preferredSupportChannel === \'website\'"\n                       ng-pattern="/^(?!mailto:)(?:(?:https?|ftp):\\/\\/)?(?:\\S+(?::\\S*)?@)?(?:(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))|localhost)(?::\\d{2,5})?(?:\\/[^\\s]*)?$/i" >\n              </label>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error signup--error" bp-val-msg-for="profile.supportWebsite">\n                <span class="dark padding-left" lcl>Please enter a valid url.</span></i>\n            </div>\n\n          </div>\n\n        </div>\n      </div>\n\n      <div class="bp-panel">\n\n        <div class="bp-panel__body">\n\n          <div class="bp-panel__body__description">\n            <div class="bp-panel__header__name">Retail Location</div>\n          </div>\n\n          <div class="bp-panel__body__content">\n\n            <label class="bp-panel__field-wrapper">\n              <div class="bp-form__field-label">Do you accept bitcoin at a retail location?</div>\n              <div class="bp-panel__field-wrapper__ion-toggle">\n                <div>No</div>\n                <div class="toggle">\n                  <input type="checkbox" ng-model="profile.locations.hasRetail" ng-change="setCountryCode(countryName_retail, \'retail\')">\n\n                  <div class="track">\n                    <div class="handle"></div>\n                  </div>\n                </div>\n                <div>Yes</div>\n              </div>\n            </label>\n\n            <div ng-show="profile.locations.hasRetail">\n\n            <label class="bp-panel__field-wrapper">\n              <span class="bp-form__field-label">Address Line 1</span>\n              <input type="text" class="bp-panel__field-wrapper__input-text" ng-model="profile.locations.retail.streetAddress1">\n            </label>\n            <i class="generic-form-error icon-left assertive ion-android-close bp-error signup--error" bp-val-msg-for="profile.locations.retail.streetAddress1">\n              <span class="dark padding-left" lcl>Please enter a valid address.</span></i>\n\n            <label class="bp-panel__field-wrapper">\n              <span class="bp-form__field-label">Address Line 2</span>\n              <input type="text" class="bp-panel__field-wrapper__input-text" ng-model="profile.locations.retail.streetAddress2">\n            </label>\n            <i class="generic-form-error icon-left assertive ion-android-close bp-error signup--error" bp-val-msg-for="profile.locations.retail.streetAddress2">\n              <span class="dark padding-left" lcl>Please enter a valid address.</span></i>\n\n            <label class="bp-panel__field-wrapper">\n              <span class="bp-form__field-label">City</span>\n              <input type="text" class="bp-panel__field-wrapper__input-text" ng-model="profile.locations.retail.addressLocality">\n            </label>\n            <i class="generic-form-error icon-left assertive ion-android-close bp-error signup--error" bp-val-msg-for="profile.locations.retail.addressLocality">\n              <span class="dark padding-left" lcl>Please enter a valid city.</span></i>\n\n            <label class="bp-panel__field-wrapper">\n              <span class="bp-form__field-label">State/Province</span>\n              <input type="text" class="bp-panel__field-wrapper__input-text" ng-model="profile.locations.retail.addressRegion">\n            </label>\n            <i class="generic-form-error icon-left assertive ion-android-close bp-error signup--error" bp-val-msg-for="profile.locations.retail.addressRegion">\n              <span class="dark padding-left" lcl>Please enter a valid state or province.</span></i>\n\n            <label class="bp-panel__field-wrapper">\n              <span class="bp-form__field-label">ZIP / Postal Code</span>\n              <input type="text" class="bp-panel__field-wrapper__input-text" ng-model="profile.locations.retail.postalCode">\n            </label>\n            <i class="generic-form-error icon-left assertive ion-android-close bp-error signup--error" bp-val-msg-for="profile.locations.retail.postalCode">\n              <span class="dark padding-left" lcl>Please enter a valid zip or postal code.</span></i>\n\n            <label class="bp-panel__field-wrapper">\n              <span class="bp-form__field-label">Country</span>\n              <input type="text" class="bp-panel__field-wrapper__input-text" bp-country-input lcl-attr="placeholder" placeholder="Begin typing..." ng-model="countryName_retail" ng-change="setCountryCode(countryName_retail, \'retail\')" typeahead="c.name for c in countries | typeaheadFilter:$viewValue" autocomplete=\'off\'/>\n            </label>\n            <i class="generic-form-error icon-left assertive ion-android-close bp-error signup--error" bp-val-msg-for="profile.locations.retail.addressCountry">\n              <span class="dark padding-left" lcl>Please enter a valid country.</span></i>\n            </div>\n          </div>\n\n        </div>\n      </div>\n\n      <div class="bp-panel">\n\n        <div class="bp-panel__body">\n\n          <div class="bp-panel__body__description">\n            <div class="bp-panel__header__name">Invoice Location</div>\n          </div>\n\n          <div class="bp-panel__body__content">\n            <label class="bp-panel__field-wrapper">\n              <div class="bp-form__field-label">Do you want to display your address on your bills?</div>\n              <div class="bp-panel__field-wrapper__ion-toggle">\n                <div>No</div>\n                <div class="toggle">\n                  <input type="checkbox" ng-model="profile.showAddressOnBill" ng-change="profile.locations.hasInvoice=false">\n\n                  <div class="track">\n                    <div class="handle"></div>\n                  </div>\n                </div>\n                <div>Yes</div>\n              </div>\n            </label>\n            <div ng-show="profile.showAddressOnBill">\n\n            <label class="bp-panel__field-wrapper">\n              <div class="bp-form__field-label">Do you want to specify an address different from your organization address?</div>\n              <div class="bp-panel__field-wrapper__ion-toggle">\n                <div>No</div>\n                <div class="toggle">\n                  <input type="checkbox" ng-model="profile.locations.hasInvoice" ng-change="setCountryCode(countryName_invoice, \'invoice\')">\n\n                  <div class="track">\n                    <div class="handle"></div>\n                  </div>\n                </div>\n                <div>Yes</div>\n              </div>\n            </label>\n\n            <div ng-show="!profile.locations.hasInvoice">\n\n              <label class="bp-panel__field-wrapper">\n                <span class="bp-form__field-label">Address Line 1</span>\n                <input readonly type="text" class="bp-panel__field-wrapper__input-text" ng-model="profile.locations.merchant.streetAddress1">\n              </label>\n\n              <label class="bp-panel__field-wrapper">\n                <span class="bp-form__field-label">Address Line 2</span>\n                <input readonly type="text" class="bp-panel__field-wrapper__input-text" ng-model="profile.locations.merchant.streetAddress2">\n              </label>\n\n              <label class="bp-panel__field-wrapper">\n                <span class="bp-form__field-label">City</span>\n                <input readonly type="text" class="bp-panel__field-wrapper__input-text" ng-model="profile.locations.merchant.addressLocality">\n              </label>\n\n              <label class="bp-panel__field-wrapper">\n                <span class="bp-form__field-label">State/Province</span>\n                <input readonly type="text" class="bp-panel__field-wrapper__input-text" ng-model="profile.locations.merchant.addressRegion">\n              </label>\n\n              <label class="bp-panel__field-wrapper">\n                <span class="bp-form__field-label">ZIP / Postal Code</span>\n                <input readonly type="text" class="bp-panel__field-wrapper__input-text" ng-model="profile.locations.merchant.postalCode">\n              </label>\n\n              <label class="bp-panel__field-wrapper">\n                <span class="bp-form__field-label">Country</span>\n                <input readonly type="text" class="bp-panel__field-wrapper__input-text" ng-model="profile.locations.merchant.addressCountry" />\n              </label>\n\n            </div>\n\n            <div ng-show="profile.locations.hasInvoice">\n\n              <label class="bp-panel__field-wrapper">\n                <span class="bp-form__field-label">Address Line 1</span>\n                <input type="text" class="bp-panel__field-wrapper__input-text" ng-model="profile.locations.invoice.streetAddress1">\n              </label>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error signup--error" bp-val-msg-for="profile.locations.invoice.streetAddress1">\n                <span class="dark padding-left" lcl>Please enter a valid address.</span></i>\n\n              <label class="bp-panel__field-wrapper">\n                <span class="bp-form__field-label">Address Line 2</span>\n                <input type="text" class="bp-panel__field-wrapper__input-text" ng-model="profile.locations.invoice.streetAddress2">\n              </label>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error signup--error" bp-val-msg-for="profile.locations.invoice.streetAddress2">\n                <span class="dark padding-left" lcl>Please enter a valid address.</span></i>\n\n              <label class="bp-panel__field-wrapper">\n                <span class="bp-form__field-label">City</span>\n                <input type="text" class="bp-panel__field-wrapper__input-text" ng-model="profile.locations.invoice.addressLocality">\n              </label>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error signup--error" bp-val-msg-for="profile.locations.invoice.addressLocality">\n                <span class="dark padding-left" lcl>Please enter a valid city.</span></i>\n\n              <label class="bp-panel__field-wrapper">\n                <span class="bp-form__field-label">State/Province</span>\n                <input type="text" class="bp-panel__field-wrapper__input-text" ng-model="profile.locations.invoice.addressRegion">\n              </label>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error signup--error" bp-val-msg-for="profile.locations.invoice.addressRegion">\n                <span class="dark padding-left" lcl>Please enter a valid state or province.</span></i>\n\n              <label class="bp-panel__field-wrapper">\n                <span class="bp-form__field-label">ZIP / Postal Code</span>\n                <input type="text" class="bp-panel__field-wrapper__input-text" ng-model="profile.locations.invoice.postalCode">\n              </label>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error signup--error" bp-val-msg-for="profile.locations.invoice.postalCode">\n                <span class="dark padding-left" lcl>Please enter a valid zip or postal code.</span></i>\n\n              <label class="bp-panel__field-wrapper">\n                <span class="bp-form__field-label">Country</span>\n                <input type="text" class="bp-panel__field-wrapper__input-text" bp-country-input lcl-attr="placeholder" placeholder="Begin typing..." ng-model="countryName_invoice" ng-change="setCountryCode(countryName_invoice, \'invoice\')" typeahead="c.name for c in countries | typeaheadFilter:$viewValue" autocomplete=\'off\'/>\n              </label>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error signup--error" bp-val-msg-for="profile.locations.invoice.addressCountry">\n                <span class="dark padding-left" lcl>Please enter a valid country.</span></i>\n            </div>\n          </div>\n\n        </div>\n      </div>\n\n      <div class="bp-panel">\n        <div class="bp-panel__body">\n          <div class="bp-panel__body__description">\n            <div class="bp-panel__header__name"></div>\n          </div>\n          <div class="bp-panel__body__content">\n            <button class="bp-big-action" ladda="submitting" lcl>Save</button>\n          </div>\n        </div>\n      </div>\n\n    </form>\n\n  </ion-content>\n</ion-view>\n'),e.put("components/settings/general.html",'<ion-content class="bp-has-top-toolbar bp-general">\n\n  <div class="bp-panel" ng-show="user.merchantReverify">\n    <div class="bp-panel__body">\n      <div class="bp-panel__body__description">\n        <div class="bp-panel__header__name" lcl>Merchant Verification</div>\n      </div>\n      <div class="bp-panel__body__content">\n        <a class="bp-outline-button--inline bp-margin-top-20" ui-sref="menu.verification0">\n          <span lcl>Edit Basic Verification Data</span>\n          <i class="bp-padding-left icon ion-chevron-right"></i>\n        </a>\n      </div>\n    </div>\n  </div>\n\n  <div class="bp-panel">\n    <div class="bp-panel__header">\n      <div class="bp-panel__header__name" lcl>Merchant Profile</div>\n      <a class="bp-panel__header__edit-btn" ui-sref="menu.profileSettings" bp-facades>\n        <span lcl>Edit</span>\n        <i class="bp-padding-left icon ion-chevron-right" ng-show="!bpFacadesUnauthorized"></i>\n        <i class="bp-padding-left icon ion-locked" ng-show="bpFacadesUnauthorized"></i>\n      </a>\n    </div>\n\n    <div class="bp-panel__body">\n\n      <div class="bp-panel__body__description"></div>\n\n      <div class="bp-panel__body__content">\n\n        <div class="bp-panel__item">\n          <div class="bp-panel__item__label">Name</div>\n          <div class="bp-panel__item__field">{{profile.name}}</div>\n        </div>\n        <div class="bp-panel__item">\n          <div class="bp-panel__item__label">Industry</div>\n          <div class="bp-panel__item__field">{{profile.industry}}</div>\n        </div>\n        <div class="bp-panel__item">\n          <div class="bp-panel__item__label">Website</div>\n          <div class="bp-panel__item__field">{{profile.website}}</div>\n        </div>\n        <div class="bp-panel__item">\n          <div class="bp-panel__item__label">Support Phone</div>\n          <div class="bp-panel__item__field">{{profile.phone}}</div>\n        </div>\n        <div class="bp-panel__item">\n          <div class="bp-panel__item__label">Support Email</div>\n          <div class="bp-panel__item__field">{{profile.email}}</div>\n        </div>\n\n      </div>\n\n    </div>\n  </div>\n  \n  <div class="bp-panel">\n\n    <div class="bp-panel__body">\n\n      <div class="bp-panel__body__description">\n        <div class="bp-panel__header__name" lcl>Approved Volume</div></div>\n\n      <div class="bp-panel__body__content">\n        <div class="bp-panel__item">\n          <div class="bp-panel__item__label">Tier</div>\n          <div class="bp-panel__item__field">{{approvedVolume.tier}}</div>\n        </div>\n        <div class="bp-panel__item">\n          <div class="bp-panel__item__label">Daily</div>\n          <div class="bp-panel__item__field" ng-show="approvedVolume.daily">{{approvedVolume.daily}}</div>\n        </div>\n        <div class="bp-panel__item">\n          <div class="bp-panel__item__label">Annual</div>\n          <div class="bp-panel__item__field" ng-show="approvedVolume.annual">{{approvedVolume.annual}}</div>\n        </div>\n        <a class="bp-outline-button--inline bp-margin-top-20" ui-sref="menu.verification" bp-facades ng-hide="approvedVolume.tier === 4">\n          <span lcl>Increase Processing Volume</span>\n          <i class="bp-padding-left icon ion-chevron-right" ng-show="!bpFacadesUnauthorized"></i>\n          <i class="bp-padding-left icon ion-locked" ng-show="bpFacadesUnauthorized"></i>\n\n        </a>\n      </div>\n    </div>\n  </div>\n\n  <div class="bp-panel" ng-if="user.planId < 2">\n\n    <div class="bp-panel__body">\n\n      <div class="bp-panel__body__description">\n        <div class="bp-panel__header__name" lcl>Plan</div></div>\n\n      <div class="bp-panel__body__content">\n        <div class="bp-panel__item">\n          <div class="bp-panel__item__label">Name of Plan</div>\n          <div class="bp-panel__item__field">{{planConfig.name}}</div>\n        </div>\n        <div class="bp-panel__item" ng-show="planConfig.price">\n          <div class="bp-panel__item__label">Charge</div>\n          <div class="bp-panel__item__field">{{planConfig.price}}</div>\n        </div>\n        <div class="bp-panel__item" ng-show="planConfig.billingDate">\n          <div class="bp-panel__item__label">Next Bill Date</div>\n          <div class="bp-panel__item__field">{{planConfig.billingDate | date: \'mediumDate\'}}</div>\n        </div>\n        <a class="bp-outline-button--inline bp-margin-top-20" ui-sref="menu.planSettings" bp-facades>\n          <span lcl>Change Plan</span>\n          <i class="bp-padding-left icon ion-chevron-right" ng-show="!bpFacadesUnauthorized"></i>\n          <i class="bp-padding-left icon ion-locked" ng-show="bpFacadesUnauthorized"></i>\n        </a>\n      </div>\n    </div>\n  </div>\n\n  <div class="bp-panel" ng-if="moreThanOneSupportedCurrency">\n      <div class="bp-panel__header">\n        <div class="bp-panel__header__name" lcl>Accepted Currencies</div>\n        <a class="bp-panel__header__edit-btn" ui-sref="menu.currencySettings" bp-facades>\n          <span lcl>Edit</span>\n          <i class="bp-padding-left icon ion-chevron-right" ng-show="!bpFacadesUnauthorized"></i>\n          <i class="bp-padding-left icon ion-locked" ng-show="bpFacadesUnauthorized"></i>\n        </a>\n      </div>\n  \n      <div class="bp-panel__body">\n  \n        <div class="bp-panel__body__description"></div>\n  \n        <div class="bp-panel__body__content">\n\n          <div class="bp-panel__item" ng-repeat="(key, value) in supportedTransactionCurrencies | toArray | orderBy:key">\n            <div class="bp-panel__item__label">{{ currencyCodeMap[value.$key].name }} ({{ value.$key }})</div>\n            <div class="bp-panel__item__field">\n              <span ng-if="value.enabled">Enabled</span>\n              <span ng-if="!value.enabled">Disabled</span>\n            </div>\n          </div>\n  \n        </div>\n  \n      </div>\n    </div>\n\n  <div class="bp-panel">\n    <div class="bp-panel__header">\n      <div class="bp-panel__header__name" lcl>Order Settings</div>\n      <a class="bp-panel__header__edit-btn" ui-sref="menu.orderSettings" bp-facades>\n        <span lcl>Edit</span>\n        <i class="bp-padding-left icon ion-chevron-right" ng-show="!bpFacadesUnauthorized"></i>\n        <i class="bp-padding-left icon ion-locked" ng-show="bpFacadesUnauthorized"></i>\n      </a>\n    </div>\n\n    <div class="bp-panel__body">\n      <div class="bp-panel__body__description">\n      </div>\n      <div class="bp-panel__body__content">\n        <div class="bp-panel__item">\n          <div class="bp-panel__item__label" lcl>Speed</div>\n          <div class="bp-panel__item__field" style="text-transform: capitalize">{{orderSettings.transactionSpeed}}</div>\n        </div>\n        <div class="bp-panel__item">\n          <div class="bp-panel__item__label" lcl>Immediately send notifications for payments without a sufficient fee</div>\n          <div class="bp-panel__item__field" ng-show="orderSettings.delayZeroFeeTransactions">Disabled (recommended)</div>\n          <div class="bp-panel__item__field" ng-hide="orderSettings.delayZeroFeeTransactions">Enabled (not recommended)</div>\n        </div>\n        <div class="bp-panel__item">\n          <div class="bp-panel__item__label" lcl>Send notifications to</div>\n          <div class="bp-panel__item__field">{{orderSettings.notificationEmail}}</div>\n        </div>\n        <div class="bp-panel__item">\n          <div class="bp-panel__item__label" lcl>Refund Exchange Rate Policy</div>\n          <div class="bp-panel__item__field" ng-show="orderSettings.refundPolicy == \'invoice\'" lcl>Current Rate Refunds</div>\n          <div class="bp-panel__item__field" ng-show="orderSettings.refundPolicy == \'bitcoin\'" lcl>Fixed Rate Refunds</div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class="bp-panel">\n    <div class="bp-panel__header">\n      <div class="bp-panel__header__name" lcl>Automatic Exception Handling</div>\n      <a class="bp-panel__header__edit-btn" ui-sref="menu.exceptionSettings" bp-facades>\n        <span lcl>Edit</span>\n        <i class="bp-padding-left icon ion-chevron-right" ng-show="!bpFacadesUnauthorized"></i>\n        <i class="bp-padding-left icon ion-locked" ng-show="bpFacadesUnauthorized"></i>\n      </a>\n    </div>\n\n    <div class="bp-panel__body">\n      <div class="bp-panel__body__description">\n      </div>\n      <div class="bp-panel__body__content">\n        <div class="bp-panel__item" ng-show=\'user.planId < 2\'>\n          <div class="bp-panel__item__label" lcl>Overpayments &amp; Underpayments</div>\n          <div class="bp-panel__item__field">\n            <span lcl>Requires <a bp-facade="orgAdmin" ui-sref="menu.planSettings">upgrade to Business plan</a></span>\n          </div>\n        </div>\n        <div class="bp-panel__item" ng-show=\'user.planId > 2\'>\n          <div class="bp-panel__item__label" lcl>Underpayments</div>\n          <div class="bp-panel__item__field">{{handleUnderpayments}}</div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n\n\n\n</ion-content>\n'),e.put("components/settings/settings.html",'<ion-view view-title="Settings">\n\n  <div class="bp-tabs bp-top-toolbar bp-lg-pad-sides-50 has-header bp-contrain" ng-show="isCompleteMenu">\n    <a class="bp-tabs__item" ui-sref="menu.settings.general" bp-facades ui-sref-active="bp-tabs__item--selected" lcl>\n      <span>General</span>\n      <i class="icon ion-locked" ng-show="bpFacadesUnauthorized"></i>\n    </a>\n    <a class="bp-tabs__item" ui-sref="menu.settings.settlement" ui-sref-active="bp-tabs__item--selected" bp-facades>\n      <span lcl>Settlement</span>\n      <i class="icon ion-locked" ng-show="bpFacadesUnauthorized"></i></a>\n    <a class="bp-tabs__item" ui-sref="menu.settings.users" ui-sref-active="bp-tabs__item--selected" ng-show="hasPaidPlan()" bp-facades>\n      <span lcl>Users</span>\n      <i class="icon ion-locked" ng-show="bpFacadesUnauthorized"></i>\n    </a>\n  </div>\n\n  <ui-view></ui-view>\n\n</ion-view>\n'),e.put("components/settlement-settings/add-bank-acct.html",'<ion-view view-title="{{isAdd ? \'Add new bank account\' : \' Edit bank account\'}}" bp-back-button-sref="menu.settings.settlement">\n\n  <ion-content class="add-bank">\n    <form ng-if="!displayWireForm" bp-detect-submission class="bp-form" name="bankAcctForm" ng-submit="saveBankInfo(bankAcctForm)"\n      novalidate>\n      <alert animation="slide-in-up" show="alert.type" type="alert.type">{{alert.message}}</alert>\n\n      <div class="bp-section">\n        <div class="bp-inside">\n\n          <label class="textfield">\n                     <div class="textfield-label" lcl>Country</div>\n                       <input type="text"\n                              name="country"\n                              bp-country-input\n                              lcl-attr="placeholder"\n                              placeholder="Begin typing..." ng-model="currencyDetails.bankCountry" typeahead="country.name as country.name for country in countries | typeaheadFilter:$viewValue"\n                              autocomplete="off"\n                              ng-change="countryChanged(bankAcctForm)"\n                              ng-disabled="merchantCountryAlreadySet"\n                              required/>\n          </label>\n\n          <div class="country-explanation">\n            <div ng-show="bankAcctForm.country.$valid && currencyDetails.bankCurrency">\n              <p>\n                For bank acounts located in <span ng-show="definiteArticleRequiredForCountry">the</span> {{currencyDetails.bankCountry}},\n                bank settlements are available in {{supportedCurrencies[0]}}<span ng-show="supportedCurrencies.length === 2"> and {{supportedCurrencies[1]}}</span>.\n                Merchants located in <span ng-show="definiteArticleRequiredForCountry">the</span> {{currencyDetails.bankCountry}}\n                can also choose to <a ui-sref="menu.settlement.settlementSettingsAddBitcoin">take all or part of their settlement in bitcoin</a>.\n              </p>\n\n              <p ng-show="merchantCountryAlreadySet && !accountVerificationComplete">\n                To settle to a bank account in another country, please <a ui-sref="menu.verification0">verify your BitPay account</a>                with the information for your entity in that country.\n              </p>\n              <div ng-if="settlementWiresEnabled && !basicPlan && !displayWireForm" ng-click="setWireFormDisplay(true)" class="wireToggle">\n                <a>Settlement via SWIFT wire</a>\n              </div>\n\n              <div ng-if="displayWireForm" ng-click="setWireFormDisplay(false)" class="wireToggle">\n                <a>Settlement via bank</a>\n              </div>\n            </div>\n\n            <div ng-show="!currencyDetails.bankCurrency && bankAcctForm.country.$valid">\n              <p>\n                Bank settlements are currently not available to bank accounts located in <span ng-show="definiteArticleRequiredForCountry">the</span>                {{currencyDetails.bankCountry}}. Have you considered <a ui-sref="menu.settlement.settlementSettingsAddBitcoin">accepting settlement in bitcoin</a>?\n              </p>\n              <p ng-show="merchantCountryAlreadySet && !accountVerificationComplete">\n\n                It is not possible to settle to bank accounts outside of the country where a merchant is registered. To settle to a bank\n                account in another country, please <a ui-sref="menu.verification0">verify your BitPay account</a>                with the information for your entity in that country.\n              </p>\n            </div>\n          </div>\n\n          <div ng-show="supportedCurrencies.length == 2 && bankAcctForm.country.$valid">\n            <br>\n            <div class="textfield-label" lcl>Select Currency</div>\n            <span class="bp-dropdown">\n                      <select ng-model="settlementSettings.payoutCurrency" ng-change="setCurrency()">\n                        <option ng-repeat="currency in supportedCurrencies">{{currency}}</option>\n                      </select>\n                    </span>\n          </div>\n\n          <i ng-show="basicPlan && upgradeRequired" class="generic-form-error icon-left assertive ion-android-close bp-error">\n            <span class="dark padding-left" lcl>Requires\n              <a bp-facade="orgAdmin" ng-click="initiatePlanUpgradeFlow();" >upgrade to Business plan</a>\n            </span>\n          </i>\n        </div>\n      </div>\n\n      <div class="bp-section" ng-class="{disabled: (basicPlan && upgradeRequired)}" ng-hide="bankAcctForm.country.$invalid || countryNotFiatSettlable">\n        <div class="bp-inside">\n          <h3><i class="bp-icon add bp-icon-details"></i>\n            <span lcl>Account Details</span>\n          </h3>\n\n          <div class="list account-detail">\n\n            <label>\n              <div class="textfield-label" lcl>Name on Bank Account</div>\n              <input type="text" name="fullLegalNameofAccountHolder" placeholder="" ng-model="newBankInfo.name" required>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error" ng-show="(bankAcctForm.fullLegalNameofAccountHolder.$invalid && bankAcctForm.fullLegalNameofAccountHolder.hasVisited) || invalidFields.name">\n              <span class="dark padding-left" lcl>Please enter the full legal name of the account holder.</span></i>\n            </label>\n\n            <label ng-if="bankFields.routing">\n              <div class="textfield-label" lcl>ACH Routing Number</div>\n              <input type="text" name="routingNumber" placeholder="" ng-model="newBankInfo.routing" ng-pattern="routingNumber" required>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error" ng-show="!routingValid && bankAcctForm.routingNumber.hasVisited">\n                <span class="dark padding-left" lcl>Please enter a valid routing number.</span>\n              </i>\n              <i class="generic-form-error icon-left ion-checkmark-circled bp-error bp-green" ng-show="routingValid">\n                <span class="padding-top" bp-resolve-routing-number="newBankInfo.routing" on-resolve="routingValid = true" on-resolve-fail="routingValid = false"></span>\n              </i>\n\n            </label>\n\n            <label ng-if="bankFields.account">\n              <div class="textfield-label" lcl>Account Number</div>\n              <input type="text" name="accountNumber" placeholder="" ng-model="newBankInfo.account" ng-pattern="onlyNumbersAndDashes" required>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error" ng-show="(bankAcctForm.accountNumber.$invalid && bankAcctForm.accountNumber.hasVisited) || invalidFields.account">\n                <span class="dark padding-left" lcl>Please enter a valid account number.</span></i>\n            </label>\n\n            <label ng-if="bankFields.clabe">\n              <div class="textfield-label" lcl>CLABE</div>\n              <input type="text" name="clabeNum" placeholder="" ng-model="newBankInfo.account" required>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error" ng-show="(bankAcctForm.clabeNum.$invalid && bankAcctForm.clabeNum.hasVisited) || invalidFields.account">\n              <span class="dark padding-left" lcl>Please enter a valid CLABE Code.</span></i>\n            </label>\n\n            <label ng-if="bankFields.iban">\n              <div class="textfield-label" lcl>IBAN</div>\n              <input type="text" name="accountNumber" placeholder="" ng-model="newBankInfo.account" required ng-iban>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error" ng-show="(bankAcctForm.accountNumber.$invalid && bankAcctForm.accountNumber.hasVisited) || invalidFields.account">\n                <span class="dark padding-left" lcl>Please enter a valid account number.</span></i>\n            </label>\n\n            <label ng-if="bankFields.mercado">\n              <div class="textfield-label" lcl>Mercado Bitcoin Account</div>\n              <input type="text" name="MercadoBitcoinAccount" placeholder="" ng-model="newBankInfo.mercado" required>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error" ng-show="(bankAcctForm.MercadoBitcoinAccount.$invalid && bankAcctForm.MercadoBitcoinAccount.hasVisited) || invalidFields.mercado">\n              <span class="dark padding-left" lcl>Please enter a valid Mercado Bitcoin account.</span></i>\n            </label>\n\n            <label ng-if="bankFields.swift">\n              <div class="textfield-label" lcl>Bank SWIFT Code</div>\n              <input type="text" name="swift" placeholder="{{settlementSettings.payoutCurrency === \'MXN\' ? \'Optional\' : \'\'}}" ng-model="newBankInfo.swift" ng-pattern="/^[A-Z]{6}[A-Z0-9]{2}([A-Z0-9]{3})?$/" ng-required="settlementSettings.payoutCurrency !== \'MXN\'">\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error" ng-show="(bankAcctForm.swift.$invalid && bankAcctForm.swift.hasVisited) || invalidFields.swift">\n                <span class="dark padding-left" lcl>Please enter a valid SWIFT Code.</span></i>\n            </label>\n\n            <label ng-if="bankFields.swiftCAD">\n              <div class="textfield-label" lcl>Bank Transit Number</div>\n              <div class="bp-padding-bottom" style="padding-bottom: 12px;">\n                Transit Numbers have the following form on checks: "XXXXX-YYY". Please use the Electronic Fund Transfer (EFT) format. For example if a check reads XXXXX-YYY, the corresponding EFT code would be 0YYYXXXXX.\n              </div>\n              <input type="text" name="swift" placeholder="0YYYXXXXX" ng-model="newBankInfo.swift" ng-pattern="/^0\\d{8}$/" required>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error" ng-show="(bankAcctForm.swift.$invalid && bankAcctForm.swift.hasVisited) || invalidFields.swift">\n                <span class="dark padding-left" lcl>Please enter a valid bank transit number (CAD).</span></i>\n            </label>\n\n            <label ng-if="bankFields.bank">\n              <div class="textfield-label" lcl>Name of Bank</div>\n              <input type="text" name="nameOfBank" placeholder="" ng-model="newBankInfo.bank" ng-pattern="onlyLettersNumbersSymbols" required>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error" ng-show="(bankAcctForm.nameOfBank.$invalid && bankAcctForm.nameOfBank.hasVisited) || invalidFields.bank">\n              <span class="dark padding-left" lcl>Please enter a valid Bank Name.</span></i>\n            </label>\n\n            <label ng-if="bankFields.sort">\n              <div class="textfield-label" lcl>Bank Sort Code</div>\n              <input type="text" name="sortCode" placeholder="" ng-model="newBankInfo.sort" ng-pattern="onlyNumbersAndDashes" required>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error" ng-show="(bankAcctForm.sortCode.$invalid && bankAcctForm.sortCode.hasVisited) || invalidFields.sort">\n              <span class="dark padding-left" lcl>Please enter a valid sort code without spaces or dashes.</span></i>\n            </label>\n\n            <label ng-if="bankFields.bsb">\n              <div class="textfield-label" lcl>BSB Code</div>\n              <input type="text" name="bsbCode" placeholder="" ng-model="newBankInfo.sort" required>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error" ng-show="(bankAcctForm.bsbCode.$invalid && bankAcctForm.bsbCode.hasVisited) || invalidFields.sort">\n              <span class="dark padding-left" lcl>Please enter a valid BSB Code.</span></i>\n            </label>\n\n            <label ng-if="bankFields.merchantEIN">\n              <div class="textfield-label" lcl style="margin-right: 0px;">\n                US EIN\n                <btn class="whats-this-link" type="button" on-touch="toggleWhatsThis()">\n                  What\'s this?\n                  <i class="ion-android-arrow-dropdown whats-this-link__arrow" ng-class="{\'whats-this-link__arrow__up\': whatsThisOpen}"></i>\n                </btn>\n              </div>\n              <div class="whats-this-content" ng-class="{\'whats-this-content__open\': whatsThisOpen}">\n                <p style="padding-right: 15px;">\n                  An EIN (Employer Identification Number) is required to settle to US banks. You can <a href="https://www.irs.gov/Businesses/Small-Businesses-&-Self-Employed/Apply-for-an-Employer-Identification-Number-(EIN)-Online" target="blank">apply for an EIN online</a> in less than 15 minutes.\n                </p>\n                <div class="whats-this-content__border"></div>\n              </div>\n              <input type="text" name="ein" ui-mask="99-9999999" ng-model="newBankInfo.merchantEIN" ng-change="einChanged()" required ng-click="nothing">\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error" ng-show="(bankAcctForm.ein.$invalid && bankAcctForm.ein.hasVisited) || invalidFields.merchantEIN">\n              <span class="dark padding-left" lcl>Please enter a valid EIN (xx-xxxxxxx). </span></i>\n            </label>\n\n            <label ng-if="bankFields.address">\n              <div class="textfield-label" lcl>Bank Street Address</div>\n              <input type="text" name="bankStreetAddress" placeholder="" ng-model="newBankInfo.address" ng-pattern="onlyLettersAndNumbers" required>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error" ng-show="(bankAcctForm.bankStreetAddress.$invalid && bankAcctForm.bankStreetAddress.hasVisited) || invalidFields.address">\n              <span class="dark padding-left" lcl>Please enter a valid bank address.</span></i>\n            </label>\n\n            <label ng-if="bankFields.city">\n              <div class="textfield-label" lcl>Bank City</div>\n              <input type="text" name="bankCity" placeholder="" ng-model="newBankInfo.city" ng-pattern="onlyLetters" required>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error" ng-show="(bankAcctForm.bankCity.$invalid && bankAcctForm.bankCity.hasVisited) || invalidFields.city">\n              <span class="dark padding-left" lcl>Please enter a valid city.</span></i>\n            </label>\n\n            <label ng-if="bankFields.postal">\n              <div class="textfield-label" lcl>Bank Postal Code</div>\n              <input type="text" name="bankPostalCode" placeholder="" ng-model="newBankInfo.postal" required>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error" ng-show="(bankAcctForm.bankPostalCode.$invalid && bankAcctForm.bankPostalCode.hasVisited) || invalidFields.postal">\n              <span class="dark padding-left" lcl>Please enter a valid postal code.</span></i>\n            </label>\n\n            <div class="bp-dob-wrapper general-input" ng-if="bankFields.dob">\n              <div class="textfield-label" lcl>Date of Birth</div>\n              <bp-dob-picker dob="newBankInfo.dob" error="dobError" dob-visited="dobVisited"></bp-dob-picker>\n\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error" ng-show="(dobVisited || bankAcctForm.submissionAttempted) && (dobError || invalidFields.dob || !newBankInfo.dob)">\n                  <span class="dark padding-left" ng-show="dobError === 9002">\n                    Please enter your date of birth.\n                  </span>\n                  <span class="dark padding-left" ng-switch="dobError" ng-hide="dobError === 9002">\n                    <span>Hmm, the date doesn\'t look right.</span>\n                    <span ng-switch-default>\n                       Be sure to use your actual date of birth.\n                    </span>\n                    <span ng-switch-when="2">\n                      Be sure to use a 2-digit number that is a day of the selected month.\n                    </span>\n                  </span>\n                </i>\n            </div>\n\n            <label>\n              <div class="textfield-label" lcl>Account Nickname</div>\n              <input type="text" name="AccountName" placeholder="" ng-model="newBankInfo.label" required>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error" bp-show="bankAcctForm.AccountName.$invalid && bankAcctForm.AccountName.hasVisited"><span class="dark padding-left">Please enter an account nickname</span></i>\n            </label>\n\n          </div>\n          <button class="bp-big-action" ladda="submitting" lcl>Save</button>\n        </div>\n        <button ng-show="selectedBankAccountIndex != undefined && !bankAccounts[selectedBankAccountIndex].isActive" type="button"\n          class="button button-assertive" ng-click="delete(selectedBankAccountIndex)">Delete</button>\n\n      </div>\n\n    </form>\n\n    <form ng-if="displayWireForm" bp-detect-submission class="bp-form" name="wireForm" ng-submit="saveWireInfo(wireForm)" novalidate>\n      <alert animation="slide-in-up" show="alert.type" type="alert.type">{{alert.message}}</alert>\n\n      <div class="bp-section">\n        <div class="bp-inside">\n\n          <label class="textfield">\n                     <div class="textfield-label" lcl>Country</div>\n                       <input type="text"\n                              name="country"\n                              bp-country-input\n                              lcl-attr="placeholder"\n                              placeholder="Begin typing..." ng-model="currencyDetails.bankCountry" typeahead="country.name as country.name for country in countries | typeaheadFilter:$viewValue"\n                              autocomplete="off"\n                              ng-change="countryChanged(wireForm)"\n                              ng-disabled="merchantCountryAlreadySet"\n                              required/>\n          </label>\n\n          <div class="country-explanation">\n            <div ng-show="wireForm.country.$valid && currencyDetails.bankCurrency">\n              <p>\n                For bank acounts located in <span ng-show="definiteArticleRequiredForCountry">the</span> {{currencyDetails.bankCountry}},\n                bank settlements are available in {{supportedCurrencies[0]}}<span ng-show="supportedCurrencies.length === 2"> and {{supportedCurrencies[1]}}</span>.\n                Merchants located in <span ng-show="definiteArticleRequiredForCountry">the</span> {{currencyDetails.bankCountry}}\n                can also choose to <a ui-sref="menu.settlement.settlementSettingsAddBitcoin">take all or part of their settlement in bitcoin</a>.\n              </p>\n\n              <p ng-show="merchantCountryAlreadySet && !accountVerificationComplete">\n                To settle to a bank account in another country, please <a ui-sref="menu.verification0">verify your BitPay account</a>                with the information for your entity in that country.\n              </p>\n              <div ng-if="settlementWiresEnabled && !basicPlan && !displayWireForm" ng-click="setWireFormDisplay(true)" class="wireToggle">\n                <a>Settlement via SWIFT wire</a>\n              </div>\n\n              <div ng-if="displayWireForm" ng-click="setWireFormDisplay(false)" class="wireToggle">\n                <a>Settlement via bank</a>\n              </div>\n            </div>\n\n            <div ng-show="!currencyDetails.bankCurrency && wireForm.country.$valid">\n              <p>\n                Bank settlements are currently not available to bank accounts located in <span ng-show="definiteArticleRequiredForCountry">the</span>                {{currencyDetails.bankCountry}}. Have you considered <a ui-sref="menu.settlement.settlementSettingsAddBitcoin">accepting settlement in bitcoin</a>?\n              </p>\n              <p ng-show="merchantCountryAlreadySet && !accountVerificationComplete">\n\n                It is not possible to settle to bank accounts outside of the country where a merchant is registered. To settle to a bank\n                account in another country, please <a ui-sref="menu.verification0">verify your BitPay account</a>                with the information for your entity in that country.\n              </p>\n            </div>\n          </div>\n\n          <div ng-show="supportedCurrencies.length == 2 && wireForm.country.$valid">\n            <br>\n            <div class="textfield-label" lcl>Select Currency</div>\n            <span class="bp-dropdown">\n                      <select ng-model="settlementSettings.payoutCurrency" ng-change="setCurrency()">\n                        <option ng-repeat="currency in supportedCurrencies">{{currency}}</option>\n                      </select>\n                    </span>\n          </div>\n\n          <i ng-show="basicPlan && upgradeRequired" class="generic-form-error icon-left assertive ion-android-close bp-error">\n            <span class="dark padding-left" lcl>Requires\n              <a bp-facade="orgAdmin" ng-click="initiatePlanUpgradeFlow();" >upgrade to Business plan</a>\n            </span>\n          </i>\n        </div>\n      </div>\n      <div class="bp-section" ng-class="{disabled: (basicPlan && upgradeRequired)}" ng-hide="wireForm.country.$invalid || countryNotFiatSettlable">\n        <div class="bp-inside">\n\n          <h3><i class="bp-icon add bp-icon-details"></i>\n            <span lcl>Bank Information</span>\n          </h3>\n\n          <div class="list account-detail">\n\n            <label>\n              <div class="textfield-label" lcl>Name of Bank*</div>\n              <input type="text" maxlength="140" name="nameOfBank" placeholder="" ng-model="wireData.bankName" ng-pattern="onlyLettersNumbersSymbols" required>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error" ng-show="(wireForm.nameOfBank.$invalid && wireForm.nameOfBank.hasVisited) || invalidFields.bankName">\n              <span class="dark padding-left" lcl>Please enter a valid bank name.</span></i>\n            </label>\n\n            <label>\n              <div class="textfield-label" lcl>Bank Country*</div>\n              <input type="text" name="bankCountry" lcl-attr="placeholder" ng-pattern="onlyLetters" placeholder="Begin typing..." ng-model="wireData.bankCountry" typeahead="country.name as country.name for country in countries | typeaheadFilter:$viewValue" autocomplete=\'off\' required/>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error" ng-show="(wireForm.bankCountry.$invalid && wireForm.bankCountry.hasVisited) || invalidFields.bankCountry">\n              <span class="dark padding-left" lcl>Please enter a valid country.</span></i>\n            </label>\n\n            <label>\n              <div class="textfield-label" lcl>Bank Address*</div>\n              <input type="text" name="bankAddress" placeholder="" max-length="35" ng-model="wireData.bankAddress" required>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error" ng-show="(wireForm.bankAddress.$invalid && wireForm.bankAddress.hasVisited) || invalidFields.bankAddress">\n              <span class="dark padding-left" lcl>Please enter a valid bank address.</span></i>\n            </label>\n\n            <label>\n              <div class="textfield-label" lcl>Bank Address Line 2</div>\n              <input type="text" name="bankAddress2" placeholder="" max-length="35" ng-model="wireData.bankAddress2">\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error" ng-show="(wireForm.bankAddress2.$invalid && wireForm.bankAddress2.hasVisited) || invalidFields.bankAddress2">\n              <span class="dark padding-left" lcl>Please enter a valid bank address.</span></i>\n            </label>\n\n            <label>\n              <div class="textfield-label" lcl>BIC / Swift*</div>\n              <input type="text" name="swift" placeholder="" ng-model="wireData.swift" ng-pattern="swiftCheck" required>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error" ng-show="(wireForm.swift.$invalid && wireForm.swift.hasVisited) || invalidFields.swift">\n              <span class="dark padding-left" lcl>Please enter a valid SWIFT / BIC.</span></i>\n            </label>\n\n            <div class="alignSettlement">\n              <label>\n                <div class="textfield-label" lcl>Settlement Currency</div>\n                <div class="bp-dropdown bp-bills__dropdown">\n                  <select name="settlementCurrency" ng-model="settlementSettings.payoutCurrency" required>\n                    <option value="USD">USD</option>\n                    <option value="EUR">EUR</option>\n                    <option value="GBP">GBP</option>        \n                  </select>\n                </div>\n                <i class="generic-form-error icon-left assertive ion-android-close bp-error" ng-show="(wireForm.settlementCurrency.$invalid && wireForm.settlementCurrency.hasVisited) || invalidFields.settlementCurrency">\n                <span class="dark padding-left" lcl>Please enter a settlement currency.</span></i>\n              </label>\n            </div>\n\n            <!--<label ng-if="wireData.bankCountry === \'Canada\'">\n              <div class="textfield-label" lcl>Transit Number (Canada Only)</div>\n              <input type="text" name="transitNumber" placeholder="" ng-model="wireData.transitNumber" ng-pattern="/^[0-9]{5}$/" required>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error" ng-show="(wireForm.transitNumber.$invalid && wireForm.transitNumber.hasVisited) || invalidFields.transitNumber">\n              <span class="dark padding-left" lcl>Please enter a valid Transit Number.</span></i>\n            </label>\n\n            <label ng-if="wireData.bankCountry === \'Canada\'">\n              <div class="textfield-label" lcl>Financial Institution Number (Canada Only)</div>\n              <input type="text" name="institutionNumber" placeholder="" ng-model="wireData.institutionNumber" ng-pattern="/^[0-9]{3}$/" required>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error" ng-show="(wireForm.institutionNumber.$invalid && wireForm.institutionNumber.hasVisited) || invalidFields.institutionNumber">\n              <span class="dark padding-left" lcl>Please enter a valid Financial Institution Number.</span></i>\n            </label>-->\n\n          </div>\n\n          <h3>\n            <span lcl>Merchant Information\n                <div class="question question-big">?\n                  <span id="address-help-big" class="tooltiptext">\n                    <p><i class="arrow-left-big"></i></p>Enter your information as registered at your bank.\n                  </span>\n                </div>\n            </span>\n          </h3>\n\n          <div class="list account-detail">\n            \n            <label>\n              <div class="textfield-label" lcl>Account Holder Name*</div>\n              <input type="text" maxlength="140" name="accountHolderName" placeholder="" ng-model="wireData.accountHolderName" ng-pattern="onlyLettersNumbersSymbols" required>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error" ng-show="(wireForm.accountHolderName.$invalid && wireForm.accountHolderName.hasVisited) || invalidFields.accountHolderName">\n              <span class="dark padding-left" lcl>Please enter a valid name.</span></i>\n            </label>\n\n            <label>\n              <div class="textfield-label" lcl>\n                Account Holder Address*\n              </div>\n              <input type="text" name="accountHolderAddress" maxlength="35" placeholder="" ng-model="wireData.accountHolderAddress" required>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error" ng-show="(wireForm.accountHolderAddress.$invalid && wireForm.accountHolderAddress.hasVisited) || invalidFields.accountHolderAddress">\n              <span class="dark padding-left" lcl>Please enter a valid address.</span></i>\n            </label>\n\n            <label>\n              <div class="textfield-label" lcl>Account Holder Address Line 2</div>\n              <input type="text" name="accountHolderAddress2" maxlength="35" placeholder="" ng-model="wireData.accountHolderAddress2">\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error" ng-show="(wireForm.accountHolderAddress2.$invalid && wireForm.accountHolderAddress2.hasVisited) || invalidFields.accountHolderAddress2">\n              <span class="dark padding-left" lcl>Please enter a valid address.</span></i>\n            </label>\n\n            <label>\n              <div class="textfield-label" lcl>Account Holder Postal Code</div>\n              <input type="text" name="accountHolderPostalCode" placeholder="" ng-model="wireData.accountHolderPostalCode">\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error" ng-show="(wireForm.accountHolderPostalCode.$invalid && wireForm.accountHolderPostalCode.hasVisited) || invalidFields.accountHolderPostalCode">\n              <span class="dark padding-left" lcl>Please enter a valid postal code.</span></i>\n            </label>\n\n            <label>\n              <div class="textfield-label" lcl>Account Holder City</div>\n              <input type="text" name="accountHolderCity" placeholder="" ng-model="wireData.accountHolderCity" ng-pattern="onlyLetters">\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error" ng-show="(wireForm.accountHolderCity.$invalid && wireForm.accountHolderCity.hasVisited) || invalidFields.accountHolderCity">\n              <span class="dark padding-left" lcl>Please enter a valid city.</span></i>\n            </label>\n\n            <label>\n              <div class="textfield-label" lcl>Account Holder Country*</div>\n              <input type="text" name="accountHolderCountry" ng-model="wireData.accountHolderCountry" ng-pattern="onlyLetters" lcl-attr="placeholder" placeholder="Begin typing..." typeahead="country.name as country.name for country in countries | typeaheadFilter:$viewValue" autocomplete=\'off\' required>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error" ng-show="(wireForm.accountHolderCountry.$invalid && wireForm.accountHolderCountry.hasVisited) || invalidFields.accountHolderCountry">\n              <span class="dark padding-left" lcl>Please enter a valid country.</span></i>\n            </label>\n\n          </div>\n\n          <h3>\n            <span lcl>Bank Account Details</span>\n          </h3>\n\n          <div class="list account-detail">\n            <label>\n              <div class="textfield-label" lcl>IBAN</div>\n              <input type="text" name="iban" placeholder="" ng-model="wireData.iban" ng-pattern="ibanCheck" ng-disabled="wireData.account || wireData.nationalRoutingNumber" ng-required="!wireData.account && !wireData.nationalRoutingNumber">\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error" ng-show="(wireForm.iban.$invalid && wireForm.iban.hasVisited) || invalidFields.iban">\n              <span class="dark padding-left" lcl>Please enter a valid IBAN.</span></i>\n            </label>\n            <div class="or">\n              <div class="line"></div>\n              <div class="center-div">\n                <div class="center-text">\n                  OR\n                </div>\n              </div>\n            </div>\n            <br>\n            <label>\n              <div class="textfield-label" lcl>Bank Account Number</div>\n              <input type="text" name="account" placeholder="" maxlength="34" ng-model="wireData.account" ng-disabled="wireData.iban" ng-required="!wireData.iban">\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error" ng-show="(wireForm.account.$invalid && wireForm.account.hasVisited) || invalidFields.account">\n              <span class="dark padding-left" lcl>Please enter a valid bank account number.</span></i>\n            </label>\n            <label>\n              <div class="textfield-label" lcl>\n                National Routing Number\n                <div class="question">?\n                  <span id="address-help" class="tooltiptext">\n                    <p><i class="arrow-left"></i></p>Enter your national routing number, which can be the ABA (United States), Sort Code (UK), Transit Number (Canada), or payment routing number etc.\n                  </span>\n                </div>\n              </div>\n              <input type="text" name="nationalRoutingNumber" placeholder="" maxlength="35" ng-model="wireData.nationalRoutingNumber" ng-disabled="wireData.iban" ng-required="!wireData.iban">\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error" ng-show="(wireForm.nationalRoutingNumber.$invalid && wireForm.nationalRoutingNumber.hasVisited) || invalidFields.nationalRoutingNumber">\n              <span class="dark padding-left" lcl>Please enter a valid national routing number.</span></i>\n            </label>\n\n          </div>\n\n          <h3>\n            <span lcl>Additional Info</span>\n          </h3>\n\n          <div class="list account-detail">\n            <label>\n              <div class="textfield-label" lcl>Additional Instructions\n                <div class="question">?\n                  <span id="address-help" class="tooltiptext">\n                    <p><i class="arrow-left2"></i></p>If needed, BitPay can put additional instructions in the remittance info which can be used by the receiving bank for internal routing.\n                  </span>\n                </div>\n              </div>\n              <input type="text" name="additionalInformation" placeholder="" ng-model="wireData.additionalInformation">\n            </label>\n            <label>\n              <div class="textfield-label" lcl>Account Nickname*</div>\n              <input type="text" name="AccountName" placeholder="" ng-model="wireData.label" required>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error" bp-show="wireForm.AccountName.$invalid && wireForm.AccountName.hasVisited"><span class="dark padding-left">Please enter an account nickname</span></i>\n            </label>\n          </div>\n\n          <button class="bp-big-action" ladda="submitting" lcl>Save</button>\n        </div>\n        <button ng-show="selectedBankAccountIndex != undefined && !bankAccounts[selectedBankAccountIndex].isActive" type="button"\n          class="button button-assertive" ng-click="delete(selectedBankAccountIndex)">Delete</button>\n\n      </div>\n    </form>\n  </ion-content>\n</ion-view>'),e.put("components/settlement-settings/add-bitcoin-addr.html",'<ion-view view-title="Add new bitcoin address" bp-back-button-sref="menu.settings.settlement">\n  <ion-content class="add-btc">\n    <alert animation="slide-in-up" show="alert.type" type="alert.type">{{alert.message}}</alert>\n    <form bp-detect-submission class="bp-form" name="btcAddressForm" novalidate ng-submit="saveBtcAddress(btcAddressForm)">\n      <div class="bp-section">\n        <div class="bp-inside">\n          <h3><i class="bp-icon add bp-icon-profile"></i>\n            <span lcl>Address Name</span>\n          </h3>\n          <input type="text" name="label" placeholder="Example: Company Wallet" ng-model="newBtcInfo.label" required>\n          <i class="generic-form-error icon-left assertive ion-android-close bp-error" bp-show="btcAddressForm.label.$invalid && btcAddressForm.label.hasVisited">\n          <span class="dark padding-left" lcl>Please name this address.</span></i>\n        </div>\n      </div>\n      <div class="bp-section">\n        <div class="bp-inside">\n          <h3><i class="bp-icon add bp-icon-gs_btc"></i>\n            <span lcl>Bitcoin Address</span>\n          </h3>\n          <input ng-change="clearMessageAlert()" type="text" name="btcaddress" placeholder="BTC Address" ng-model="newBtcInfo.bitcoinAddress" bp-bitcoin-address required>\n          <i class="generic-form-error icon-left assertive ion-android-close bp-error" bp-show="btcAddressForm.btcaddress.$invalid && btcAddressForm.btcaddress.hasVisited">\n            <span class="dark padding-left" ng-if="btcAddressForm.btcaddress.$error[\'bitcoin-address\']" lcl>Please enter a valid bitcoin address.</span>\n            <span class="dark padding-left" ng-if="!btcAddressForm.btcaddress.$error[\'bitcoin-address\'] && btcAddressForm.btcaddress.$error[\'testnet-bitcoin-address\']" lcl>Please enter a valid testnet bitcoin address. Visit <a href="https://www.bitpay.com/docs/testing" target="_blank">https://www.bitpay.com/docs/testing</a> for more info.</span>\n          </i>\n        </div>\n      </div>\n      <div class="bp-section">\n        <div class="bp-inside">\n          <h3><i class="bp-icon add bp-icon-percentage"></i>\n            <span lcl>Settlement Percentage</span>\n          </h3>\n\n          <p class="settlement-helptext" lcl>What percentage of your daily settlements would you like to keep in bitcoin?</p>\n          <input class="bp-slider" style="float:left;margin-right:10px;" type="range" min="0" max="100" ng-model="d.newBtcPercentage" ng-change="maybePromptForUpgrade()" ng-disabled="d.newBtcPercentageFixed" required>\n          <input class="btc-percentage" type="text" name="btcpercentage" placeholder="%" ng-model="d.newBtcPercentage" ng-disabled="d.newBtcPercentageFixed" ng-pattern="wholePercent" required>\n          <span class="btc-percentage-sign">%</span>\n          <p ng-show="d.newBtcPercentageFixed">To edit this amount, please add a bank account.</p>\n\n          <i ng-show="basicPlan && upgradeRequired" class="generic-form-error icon-left assertive ion-android-close bp-error">\n            <span class="dark padding-left" lcl>Requires \n              <a bp-facade="orgAdmin" ui-sref="menu.planSettings">upgrade to Business plan</a> to settle in {{settlementSettings.payoutCurrency}}\n            </span>\n          </i>\n\n          <i class="generic-form-error icon-left assertive ion-android-close bp-error" bp-show="btcAddressForm.btcpercentage.$invalid && btcAddressForm.btcpercentage.hasVisited">\n          <span class="dark padding-left" lcl>Please enter a valid percentage.</span></i>\n\n          <button class="bp-big-action" ladda="submitting" ng-disabled="basicPlan && upgradeRequired">Save</button>\n        </div>\n      </div>\n    </form>\n  </ion-content>\n</ion-view>\n'),e.put("components/settlement-settings/settlement-settings.html",'<ion-content ng-class="{ \'bp-has-top-toolbar\': isComplete }" class="has-header" bp-back-button-sref="menu.getstarted" bp-back-button-active="!isComplete">\n\n  <alert animation="slide-in-up" show="settlementSettings.pendingSettingsChanges" type="\'error\'" lcl>There are pending\n    changes to your settlement settings. Please confirm these changes by following the instructions in your email.\n  </alert>\n\n  <div class="bp-panel">\n\n    <div class="bp-panel__body settlement-panel-body">\n\n      <div class="bp-panel__body__description settlement-split" ng-if="bankInfo && btcInfo">\n\n        <div class="settlement-split__label">\n          <div class="settlement-split__value">{{settlementSettings.bitcoinPercentage}}</div>\n          <div class="settlement-split__currency" style="background-color: #FFB946">BTC</div>\n        </div>\n\n        <c3chart bindto-id="settlementSplitChart" class="settlement-split__chart" sort-data="null">\n          <chart-size chart-width="200" chart-height="240" />\n          <chart-column column-id="btc"\n                        column-values="{{settlementSettings.bitcoinPercentage}}"\n                        column-type="donut"\n                        column-color="#FFB946" />\n          <chart-column column-id="fiat"\n                        column-values="{{100 - settlementSettings.bitcoinPercentage}}"\n                        column-type="donut"\n                        column-color="#648EFF" />\n          <chart-colors color-pattern="null" />\n          <chart-donut show-label="false" width="20" />\n          <chart-tooltip show-tooltip="false" />\n          <chart-legend show-legend="false" />\n        </c3chart>\n\n        <div class="settlement-split__label">\n          <div class="settlement-split__value">{{100 - settlementSettings.bitcoinPercentage}}</div>\n          <div class="settlement-split__currency" style="background-color: #648EFF">{{settlementSettings.payoutCurrency}}</div>\n        </div>\n\n      </div>\n\n      <div class="bp-panel__body__content settlement-card-container">\n        <div class="settlement-setting">\n          <div class="settlement-setting__title-row">\n            <div ng-if="!bankInfo.wire" class="settlement-setting__title">Bank Account</div>\n            <div ng-if="bankInfo.wire" class="settlement-setting__title">Wire Transfer</div>\n            <a ng-if="bankInfo" class="settlement-setting__edit-btn" ui-sref="menu.settlement.settlementSettingsAddBank">\n              <span>EDIT</span>\n              <i class="bp-padding-left icon ion-chevron-right"></i>\n            </a>\n          </div>\n          <div class="settlement-setting__card" ng-if="bankInfo">\n            <div class="settlement-setting__label-row">\n              <div class="settlement-setting__label">{{bankInfo.label}}</div>\n              <div class="settlement-setting__flag">\n                <img ng-src="img/currencies/{{settlementSettings.payoutCurrency}}.png">\n                <span>{{settlementSettings.payoutCurrency}}</span>\n              </div>\n            </div>\n            <div ng-if="bankInfo.wire && bankInfo.iban" class="settlement-setting__account">{{bankInfo.iban}}</div>\n            <div class="settlement-setting__account">{{bankInfo.account}}</div>\n          </div>\n          <a class="settlement-setting__card  settlement-setting__zerostate" ng-if="!bankInfo" ui-sref="menu.settlement.settlementSettingsAddBank">\n            Add a bank account\n          </a>\n        </div>\n\n        <div class="settlement-setting">\n          <div class="settlement-setting__title-row">\n            <div class="settlement-setting__title">Bitcoin Address</div>\n            <a ng-if="btcInfo" class="settlement-setting__edit-btn" ui-sref="menu.settlement.settlementSettingsAddBitcoin">\n              <span>EDIT</span>\n              <i class="bp-padding-left icon ion-chevron-right"></i>\n            </a>\n          </div>\n          <div class="settlement-setting__card" ng-if="btcInfo">\n            <div class="settlement-setting__label-row">\n              <div class="settlement-setting__label">{{btcInfo.label}}</div>\n              <div class="settlement-setting__flag">\n                <img ng-src="img/currencies/BTC.png">\n                <span>BTC</span>\n              </div>\n            </div>\n            <div class="settlement-setting__account">{{btcInfo.bitcoinAddress}}</div>\n          </div>\n          <a class="settlement-setting__card settlement-setting__zerostate" ng-if="!btcInfo" ui-sref="menu.settlement.settlementSettingsAddBitcoin">\n            Add bitcoin address\n          </a>\n        </div>\n\n      </div>\n\n    </div>\n\n  </div>\n\n</ion-content>'),e.put("components/settlements/details.html",'<ion-view view-title="Settlement Details">\n  <ion-content>\n   <div class="bp-alert" ng-if="serverError">\n      <div class="bp-alert__icon-box bp-alert__icon-box--orange"><i class="icon ion-alert"></i></div>\n      <div class="bp-alert__content">\n        <span lcl>{{serverError}}</span>\n      </div>\n    </div>\n    <div class="bp-panel">\n      <div class="bp-panel__body">\n        <div class="bp-panel__body__content">\n          <a class="bp-big-action" style="margin-bottom: 3rem;" ng-href="{{dataUrl}}" download="{{filename}}">Download As JSON File</a>\n          <pre>{{reconciliationReport | json}}</pre>\n        </div>\n      </div>\n    </div>\n  </ion-content>\n</ion-view>'),e.put("components/setup/setup.html",'<ion-view title="Setup">\n  <ion-content>\n\n      <div class="bp-constrain-narrow getstarted">\n\n        <alert show="needsDocs" type="\'error\'">\n          Your account requires additional verification before you can process payments.<br>\n          <button ui-sref="menu.verification" class="button">\n            Complete verification &rsaquo;\n          </button>\n        </alert>\n\n      <div class="getstarted__banner">\n        <div class="getstarted__banner__heading" lcl>How would you like to accept bitcoin?</div>\n        <div class="getstarted__banner__subheading" lcl>Please choose a product to get started.</div>\n      </div>\n\n      <div class="getstarted__list list list__padded">\n\n\n\n\n\n        <a class="getstarted__list__item item item-thumbnail-left item-text-wrap" ui-sref="menu.dashboard({ page: \'edit-mobile-checkout\' })">\n          <img class="getstarted__list__item__icon" src="img/getstarted/pos.svg">\n          <div class="getstarted__list__item__heading" lcl>Point of Sale &rsaquo;</div>\n          <p class="getstarted__list__item__text" lcl>Accept payments with the iOS, Android, or web app.</p>\n        </a>\n\n        <a class="getstarted__list__item item item-thumbnail-left item-text-wrap" ui-sref="menu.bills">\n          <img class="getstarted__list__item__icon" src="img/getstarted/email-billing.svg">\n          <div class="getstarted__list__item__heading" lcl>Email Billing &rsaquo;</div>\n          <p class="getstarted__list__item__text" lcl>Send clients one-time or recurring bills.</p>\n        </a>\n\n        <a class="getstarted__list__item item item-thumbnail-left item-text-wrap" ui-sref="menu.dashboard({ page: \'bitcoin-for-ecommerce\' })">\n          <img class="getstarted__list__item__icon" src="img/getstarted/integrations-libraries.svg">\n          <div class="getstarted__list__item__heading" lcl>Integrations &amp; Libraries &rsaquo;</div>\n          <p class="getstarted__list__item__text" lcl>Add bitcoin payment options to your website.</p>\n        </a>\n\n\n      </div>\n\n      </div>\n\n\n  </ion-content>\n</ion-view>\n'),e.put("components/signup/signup.html",'<ion-view view-title="New User" hide-nav-bar="true" class="prelogin">\n  <ion-content class="bp-no-header">\n\n    <div class="bp-constrain-signup">\n\n      <div class="prelogin__logo-container" style="padding-bottom: 0">\n        <!-- Logo -->\n        <span ng-if="cobrand && cobrand.logoWhite">\n          <img src={{cobrand.logoWhite}} class="cobrand"><br/>\n        </span>\n\n        <a href="/"><img src="img/bitpay-logo-inverse-cropped.svg" class="prelogin__logo"></a>\n      </div>\n\n      <div class="prelogin__headline" ng-hide="isOnboarding" lcl>Create an Account</div>\n      <div class="prelogin__headline" ng-show="isOnboarding" lcl>Choose a Password</div>\n\n\n      <!-- Server Alerts -->\n      <alert animation="slide-in-up" show="alert.type" type="alert.type">{{alert.message}}</alert>\n      <alert animation="slide-in-up" show="emailExists" lcl>\n        This email address has already been used. Have you signed up already? <a ui-sref="login">Login here</a>\n      </alert>\n      <alert animation="slide-in-up" show="emailDoesNotExist" lcl>\n        This email address has not been onboarded. Did you modify the email address?\n      </alert>\n      <alert animation="slide-in-up" show="passwordStrengthLow" lcl>\n        Please choose a password with at least 8 characters, including at least 1 numeric, 1 uppercase, and 1 lowercase\n        character.\n      </alert>\n      <alert animation="slide-in-up" show="tooManyRequests" lcl>\n        You have tried to sign up too many times in a short period of time. Please contact <a\n          href="mailto:support@bitpay.com">support</a> if you having trouble with our signup process.\n      </alert>\n      <alert animation="slide-in-up" show="invalidSignup" lcl>\n        Invalid sign up data. Please contact <a href="mailto:support@bitpay.com">support</a> if you having trouble with\n        our signup process.\n      </alert>\n      <alert animation="slide-in-up" show="tosAgreeNeeded" lcl>\n        Please agree to the Terms of Use and Privacy Policy to create your account.\n      </alert>\n\n\n      <form bp-detect-submission bp-sharpspring-form="de2f23bc-af25-42b5-b2f1-8f3d5b09ea97" id="signupForm" name="signupForm" class="prelogin__form" novalidate ng-submit="signup(signupForm)">\n        <!-- Organization Name -->\n        <div class="prelogin__fieldset">\n          <label class="signup__label" for="OrganizationName" lcl>Organization Name</label>\n          <input id="OrganizationName" type="text" name="orgName" ng-model="user.orgName"\n                 ng-readonly="isOnboarding && isOrgNameInitialized" class="prelogin__input"\n                 autofocus required>\n\n          <i class="prelogin__validation icon-left ion-android-close"\n             ng-show="signupForm.submissionAttempted && signupForm.orgName.$invalid && signupForm.orgName.hasVisited">\n            <span lcl>Please enter the name of your organization.</span></i>\n        </div>\n\n        <!-- First And Last Name -->\n        <div class="prelogin__fieldset">\n\n          <div class="signup__name">\n            <div>\n              <label class="signup__label" for="FirstName" lcl>First Name</label>\n              <input id="FirstName" type="text" ng-model="user.givenName" class="prelogin__input"\n                     ng-readonly="isOnboarding && isGivenNameInitialized" name="givenName" ng-pattern="nameRegex"\n                     required>\n            </div>\n\n            <div>\n              <label class="signup__label" for="LastName" lcl>Last Name</label>\n              <input id="LastName" type="text" ng-model="user.familyName" class="prelogin__input"\n                     ng-readonly="isOnboarding && isFamilyNameInitialized" name="familyName" ng-pattern="nameRegex"\n                     required>\n            </div>\n\n          </div>\n\n          <i class="prelogin__validation icon-left ion-android-close"\n             ng-show="signupForm.submissionAttempted && ((signupForm.givenName.$invalid && signupForm.givenName.hasVisited) || (signupForm.familyName.$invalid && signupForm.familyName.hasVisited))">\n            <span lcl>Please enter your first and last name in english characters.</span></i>\n\n        </div>\n\n        <!-- Email Address -->\n        <div class="prelogin__fieldset">\n          <label class="signup__label" for="EmailAddress" lcl>Email Address</label>\n          <input id="EmailAddress" type="email" ng-model="user.email" ng-readonly="isOnboarding && isEmailInitialized"\n                 name="email" class="prelogin__input" required>\n\n          <i class="prelogin__validation icon-left ion-android-close"\n             ng-show="signupForm.submissionAttempted &&  signupForm.email.$invalid && signupForm.email.hasVisited">\n            <span lcl>Please enter a working email address.</span></i>\n        </div>\n\n        <!-- Password -->\n        <div class="prelogin__fieldset">\n          <label class="signup__label" for="Password" lcl>Create a Password</label>\n\n          <div class="prelogin__pass">\n\n            <div class="prelogin__pass__inputs">\n            <input ng-if="showPasswordInClearText" type="text" ng-model="user.password" class="prelogin__input"\n                   ng-change="evaluateMeter()" name="password" ng-focus="showPasswordHelptext=true" required>\n\n            <input ng-if="!showPasswordInClearText" type="password" ng-model="user.password" class="prelogin__input"\n                   ng-change="evaluateMeter()" name="password" ng-focus="showPasswordHelptext=true" id="Password" required>\n            </div>\n\n            <button on-touch="showPasswordInClearText = !showPasswordInClearText" type="button"\n                    class="prelogin__pass__toggle">\n              <span ng-hide="showPasswordInClearText" lcl>Show Pass</span>\n              <span ng-show="showPasswordInClearText" lcl>Hide Pass</span>\n            </button>\n          </div>\n\n          <div class="prelogin__validation"\n               ng-show="showPasswordHelptext && !passwordUppercase || showPasswordHelptext && !passwordLowercase || showPasswordHelptext && !passwordNumerals || showPasswordHelptext && !passwordCharacters"\n               lcl>\n            Password must include at least 8 characters: uppercase, lowercase, and numbers.\n          </div>\n\n        </div>\n\n\n        <!-- TOS checkbox -->\n        <div class="signup__tos-checkbox">\n          <input class="checkbox" ng-model="user.tosAgree" id="tosCheckBox" name="tosAgree" type="checkbox"\n                 style="height: 14px; width: 14px;" required="true"/>\n          <span class="signup__tos-label" for="tosCheckBox" lcl>\n            I agree to the\n            <a href="/legal#terms-of-use" target="_blank" style="text-decoration:none;">Terms of Use</a>\n            and\n            <a href="/legal#privacy-policy" target="_blank">Privacy Policy</a>\n          </span>\n        </div>\n\n\n        <div id="captcha"></div>\n\n\n        <!-- Submit Button -->\n\n        <button type="submit" ladda="loginLoading" class="button bp-button prelogin__button" data-style="zoom-in"\n                data-spinner-size="40">\n          <span ng-show="isOnboarding" lcl>Save Password</span>\n          <span ng-hide="isOnboarding" lcl>Create Account</span>\n        </button>\n\n      </form>\n\n\n      <div ng-show="!isOnboarding" style="margin-top: 20px">\n        <span lcl>Already have an Account?</span>\n        <a ui-sref="login" lcl>Login</a>\n      </div>\n\n    </div>\n\n  </ion-content>\n</ion-view>\n\n\n'),e.put("components/signup/thanks.html",'<ion-view view-title="New User" class="landing">\n  <ion-content>\n    <div class="landing-container">\n      <div class="signup">\n        <img src="img/bitpay-logo-inverse.svg">\n        <h1 lcl>Thanks for signing up</h1>\n        <p lcl>Please verify your email address to continue</p>\n      </div>\n    </div>\n  </ion-content>\n</ion-view>'),e.put("components/update-email/update-email.html",'<ion-view view-title="Update Email Address" bp-back-button-sref="menu.getstarted">\n  <ion-content>\n    <div class="list">\n      <alert class="alert--onboarding" show="alert.type" type="alert.type">{{alert.message}}</alert>\n\n      <div ng-show="user.verified" class="bp-section">\n        <div class="bp-inside" lcl>\n          Your email address has already been verified. Please <a href="mailto:support@bitpay.com">contact support</a> for further assistance.\n        </div>\n      </div>\n\n    <div ng-show="!user.verified">\n\n        <div class="bp-section">\n          <div class="bp-inside">\n            <h4 class="ng-binding">{{email}}</h4>\n            <p lcl>We sent an email to this address. If you haven\'t yet received the email, please check your spam folder or <a ng-click="resendEmailVerification()">click here to resend the email.</a></p>\n          </div>\n        </div>\n\n        <div class="bp-section">\n\n\n          <div class="bp-inside bp-form">\n            <p>Would you like to update this email address? We\'ll send you a link to confirm the new address.</p>\n            <form bp-detect-submission name="changeEmailForm" ng-submit="updateEmailAddress(changeEmailForm, newEmailAddress)">\n              <label>\n                <div class="textfield-label" lcl="">New Email Address</div>\n                <input type="email" name="email" placeholder="you@company.com" ng-model="newEmailAddress" required="" class="ng-pristine ng-invalid ng-invalid-required ng-valid-email">\n              </label>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error ng-hide" ng-show="changeEmailForm.email.$invalid && changeEmailForm.email.hasVisited">\n                <span class="dark padding-left" lcl="">Please enter a valid email address.</span></i>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error ng-hide" ng-show="emailExists">\n                <span class="dark padding-left" lcl="">This email address is blocked or in use.</span></i>\n              <i class="generic-form-error icon-left balanced ion-checkmark bp-error ng-hide" ng-show="emailNotChanged">\n                <span class="dark padding-left" lcl="">Please confirm your email address by clicking the link sent to your inbox.</span></i>\n              <div class="padding-top padding-bottom">\n                <button class="bp-big-action" lcl="">Update &amp; Resend</button>\n              </div>\n            </form>\n          </div>\n\n        </div>\n\n      </div>\n    </div>\n\n  </ion-content>\n</ion-view>\n'),e.put("components/user-settings/edit/basic-info.html",'<ion-view view-title="Edit User" bp-back-button-sref="menu.userSettings">\n  <ion-content>\n\n    <div class="bp-alert" ng-show="saveSucceeded">\n      <div class="bp-alert__icon-box bp-alert__icon-box--green"><i class="icon ion-checkmark"></i></div>\n      <div class="bp-alert__content">\n        <span lcl>Your information has been successfully updated.</span>\n      </div>\n    </div>\n\n    <div class="bp-alert" ng-show="unexpectedError">\n      <div class="bp-alert__icon-box bp-alert__icon-box--orange"><i class="icon ion-alert"></i></div>\n      <div class="bp-alert__content">\n        <span lcl>An unexpected error has occurred.</span>\n      </div>\n    </div>\n\n    <form bp-detect-submission name="editBasicInfo" novalidate ng-submit="updateBasicInfo(editBasicInfo)">\n\n      <div class="bp-panel">\n        <div class="bp-panel__body">\n\n          <div class="bp-panel__body__description">\n            <div class="bp-panel__header__name" lcl>Basic Info</div>\n          </div>\n\n          <div class="bp-panel__body__content">\n\n            <label class="bp-panel__field-wrapper">\n              <span class="bp-form__field-label" lcl>First Name</span>\n              <input type="text" class="bp-panel__field-wrapper__input-text" ng-model="user.givenName" ng-required="true">\n            </label>\n            <i class="generic-form-error icon-left assertive ion-android-close bp-error signup--error" bp-val-msg-for="user.givenName">\n              <span class="dark padding-left" lcl>Please enter your first name.</span></i>\n\n            <label class="bp-panel__field-wrapper">\n              <span class="bp-form__field-label" lcl>Last Name</span>\n              <input type="text" class="bp-panel__field-wrapper__input-text" ng-model="user.familyName" ng-required="true">\n            </label>\n            <i class="generic-form-error icon-left assertive ion-android-close bp-error signup--error" bp-val-msg-for="user.familyName">\n              <span class="dark padding-left" lcl>Please enter your last name.</span></i>\n\n            <!-- <label class="bp-panel__field-wrapper">\n              <span class="bp-form__field-label" lcl>Email</span>\n              <input type="text" class="bp-panel__field-wrapper__input-text" ng-model="basicInfo.email" ng-required="true">\n            </label>\n            <i class="generic-form-error icon-left assertive ion-android-close bp-error signup--error" bp-val-msg-for="basicInfo.email">\n              <span class="dark padding-left" lcl>Please enter your email.</span></i> -->\n\n            <label class="bp-panel__field-wrapper">\n              <span class="bp-form__field-label" lcl>Phone Number</span>\n              <input type="tel" class="bp-panel__field-wrapper__input-text" ng-model="user.phone" ng-required="false">\n            </label>\n            <i class="generic-form-error icon-left assertive ion-android-close bp-error signup--error" bp-val-msg-for="user.phone">\n              <span class="dark padding-left" lcl>Please enter your phone number.</span></i>\n\n          </div>\n\n        </div>\n      </div>\n\n      <div class="bp-panel">\n        <div class="bp-panel__body">\n          <div class="bp-panel__body__description">\n            <div class="bp-panel__header__name"></div>\n          </div>\n          <div class="bp-panel__body__content">\n            <button class="bp-big-action" ladda="submitting" lcl>Save</button>\n          </div>\n        </div>\n      </div>\n\n    </form>\n\n  </ion-content>\n</ion-view>\n'),e.put("components/user-settings/edit/security.html",'<ion-view view-title="Edit User Security" bp-back-button-sref="menu.userSettings">\n  <ion-content>\n\n    <div class="bp-alert" ng-show="saveSucceeded">\n      <div class="bp-alert__icon-box bp-alert__icon-box--green"><i class="icon ion-checkmark"></i></div>\n      <div class="bp-alert__content">\n        <span lcl>Your security settings have been successfully updated.</span>\n      </div>\n    </div>\n\n    <div class="bp-alert" ng-show="invalidCode">\n      <div class="bp-alert__icon-box bp-alert__icon-box--orange"><i class="icon ion-alert"></i></div>\n      <div class="bp-alert__content">\n        <span lcl>The authentication code you have entered is invalid. Please ensure you\'ve entered it exactly as it appears in your two factor authentication app.</span>\n      </div>\n    </div>\n\n    <div class="bp-alert" ng-show="rateLimited">\n      <div class="bp-alert__icon-box bp-alert__icon-box--orange"><i class="icon ion-alert"></i></div>\n      <div class="bp-alert__content">\n        <span lcl>You have submitted this form incorrectly too many times so you are now temporarily blocked. Please try again later.</span>\n      </div>\n    </div>\n\n    <div class="bp-alert" ng-show="unexpectedError">\n      <div class="bp-alert__icon-box bp-alert__icon-box--orange"><i class="icon ion-alert"></i></div>\n      <div class="bp-alert__content">\n        <span lcl>An unexpected error has occurred.</span>\n      </div>\n    </div>\n\n    <form bp-detect-submission name="editSecurity" novalidate ng-submit="toggleTwoFactorAuthEnabled(editSecurity)">\n\n      <div class="bp-panel">\n        <div class="bp-panel__body">\n\n          <div class="bp-panel__body__description">\n            <div class="bp-panel__header__name" lcl>Two Factor Security</div>\n            <p>\n              Install a two factor authentication app (such as <a href="https://support.google.com/accounts/answer/1066447" target="_blank" rel="noopener noreferrer">Google Authenticator</a> or <a href="https://www.authy.com/app" target="_blank">Authy</a>), and scan the barcode to the right to enable two factor security.\n              Each time you login, you will be prompted to enter an additional authentication code generated by your two factor authentication app along with your\n              password. This greatly improves the security of your account.\n             </p>\n          </div>\n\n          <div class="bp-panel__body__content">\n\n            <div ng-if="!securitySettings.otpEnabled">\n              <qrcode version="7" data="otpauth://totp/%5Bbitpay%5D%20{{securitySettings.email}}?secret={{securitySettings.otpAuthKey}}" size="200"></qrcode>\n            </div>\n            <div ng-if="securitySettings.otpEnabled" class="bp-green">\n              <i class="icon ion-checkmark-circled"></i>\n              Enabled\n            </div>\n\n            <label class="bp-panel__field-wrapper">\n              <span class="bp-form__field-label" lcl>Code</span>\n              <input type="text" class="bp-panel__field-wrapper__input-text" ng-model="securitySettings.code" ng-required="codeRequired"  ng-disabled="rateLimited" placeholder="Auth Token">\n            </label>\n            <i class="generic-form-error icon-left assertive ion-android-close bp-error signup--error" bp-val-msg-for="securitySettings.code">\n              <span ng-show="securitySettings.otpEnabled == false" class="dark padding-left" lcl>Please enter your 6-digit two factor authentication token.<br/><br/></span>\n              <span ng-hide="securitySettings.otpEnabled == false" class="dark padding-left" lcl>Please enter your 6-digit two factor authentication token or one of your backup codes.<br/><br/></span>\n            </i>\n            <button class="bp-big-action" ladda="submitting" ng-disabled="rateLimited" lcl>\n              <span ng-show="securitySettings.otpEnabled == false">Enable</span>\n              <span ng-hide="securitySettings.otpEnabled == false">Disable</span>\n            </button>\n\n          </div>\n\n        </div>\n      </div>\n\n    </form>\n\n    <form bp-detect-submission name="generateCodes" novalidate ng-submit="generateBackupCodes()">\n\n      <div class="bp-panel" ng-show="securitySettings.otpEnabled">\n        <div class="bp-panel__body">\n\n          <div class="bp-panel__body__description">\n            <div class="bp-panel__header__name" lcl>Backup Two Factor Codes</div>\n            <p>\n              In the event that you lose your phone, or otherwise cannot access your two factor codes, you can use\n              backup codes to sign in. These codes are generated in sets of 10, and you can generate a new set at any time,\n              automatically rendering the old codes inactive. You should store these codes in a safe place.\n            </p>\n            <p class="bp-bold">Please note:</p>\n            <ul style="list-style: circle; list-style-position: inside;">\n              <li class="bp-bold" ng-show="newBackupCodes">These codes are hidden once you leave or refresh this page</li>\n              <li class="bp-bold">Each code can only be used once.</li>\n              <li class="bp-bold">Generating new codes invalidates all previous codes</li>\n            </ul>\n          </div>\n\n          <div class="bp-panel__body__content" ng-show="securitySettings.otpEnabled && !newBackupCodes">\n\n            <label class="bp-panel__field-wrapper">\n              <span class="bp-form__field-label" lcl>Code</span>\n              <input type="text" class="bp-panel__field-wrapper__input-text" ng-model="securitySettings.generateCode" ng-required="generateCodeRequired" placeholder="Auth Token">\n            </label>\n            <i class="generic-form-error icon-left assertive ion-android-close bp-error signup--error" bp-val-msg-for="securitySettings.generateCode">\n              <span class="dark padding-left" lcl>Please enter your 6-digit two factor authentication token or one of your backup codes.<br/><br/></span></i>\n\n            <button class="bp-big-action" ladda="generatingCodes" lcl>\n              Generate Codes\n            </button>\n          </div>\n          <div class="bp-panel__body__content" ng-show="securitySettings.otpEnabled && newBackupCodes">\n            <a id="filePlaceholder" style="display: none;"></a>\n            <div class="bank-account-card card bp-flex-row" style="font-size: 1em;">\n              <span class="bp-lg-column-50 bp-sm-column-90" ng-repeat="code in newBackupCodes" style="text-align: center; font-family: \'Lucida Console\', Monaco, monospace;">{{code}}</span>\n            </div>\n            <button class="bp-big-action" ng-click="downloadCodes()">\n              Download Codes\n            </button>\n          </div>\n      </div>\n\n    </form>\n\n\n    <!-- <div class="bp-panel">\n      <div class="bp-panel__body">\n\n        <div class="bp-panel__body__description">\n          <div class="bp-panel__header__name" lcl>BitAuth IDs</div>\n          <p>BitAuth IDs description for future.</p>\n        </div>\n\n        <div class="bp-panel__body__content">\n          <div class="list">\n              <a class="item" href="#">\n                <h2>Mac OSX - Google Chrome</h2>\n                <p>34no8r3sdf</p>\n              </a>\n              <a class="item" href="#">\n                <h2>Nexus 5 - BitPay app</h2>\n                <p>fn3489fb34</p>\n              </a>\n          </div>\n\n        </div>\n\n      </div>\n    </div> -->\n\n  </ion-content>\n</ion-view>\n'),e.put("components/user-settings/user-settings.html",'<ion-view view-title="User Settings">\n\n  <ion-content class="bp-general">\n\n    <div class="bp-alert" ng-show="alertMessage">\n      <div class="bp-alert__icon-box bp-alert__icon-box--green"><i class="icon ion-checkmark"></i></div>\n      <div class="bp-alert__content">\n        You successfuly updated your password.\n      </div>\n    </div>\n\n    <div class="bp-panel">\n      <div class="bp-panel__header">\n        <div class="bp-panel__header__name" lcl>Basic</div>\n        <a class="bp-panel__header__edit-btn" ui-sref="menu.userSettingsBasicInfo">\n          <span lcl>Edit</span>\n          <i class="bp-padding-left icon ion-chevron-right"></i>\n        </a>\n      </div>\n\n      <div class="bp-panel__body">\n        <div class="bp-panel__body__description"></div>\n\n        <div class="bp-panel__body__content">\n\n          <div class="bp-panel__item">\n            <div class="bp-panel__item__label">Name</div>\n            <div class="bp-panel__item__field">{{user.name}} </div>\n          </div>\n          <div class="bp-panel__item">\n            <div class="bp-panel__item__label">Phone</div>\n            <div class="bp-panel__item__field">{{user.phone || \'None\'}}</div>\n          </div>\n\n          <a class="bp-outline-button--inline bp-margin-top-20" ui-sref="menu.changePassword">\n            <span lcl>Change Password</span>\n            <i class="bp-padding-left icon ion-chevron-right"></i>\n          </a>\n        </div>\n\n      </div>\n\n\n    </div>\n\n    <div class="bp-panel">\n\n      <div class="bp-panel__header">\n        <div class="bp-panel__header__name" lcl>Security</div>\n        <a class="bp-panel__header__edit-btn" ui-sref="menu.userSettingsSecurity">\n          <span lcl>Edit</span>\n          <i class="bp-padding-left icon ion-chevron-right"></i>\n        </a>\n      </div>\n\n      <div class="bp-panel__body">\n        <div class="bp-panel__body__description"></div>\n\n        <div class="bp-panel__body__content">\n          <div class="bp-panel__item">\n            <div class="bp-panel__item__label">Two Factor</div>\n            <div class="bp-panel__item__field">\n              <span ng-show="securitySettings.otpEnabled">Google Authenticator</span>\n              <span ng-show="!securitySettings.otpEnabled">Disabled</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- <div class="bp-panel">\n\n      <div class="bp-panel__header">\n        <div class="bp-panel__header__name" lcl>Notifications</div>\n        <a class="bp-panel__header__edit-btn" ui-sref="menu.profileSettings">\n          <span lcl>Edit</span>\n          <i class="bp-padding-left icon ion-chevron-right"></i>\n        </a>\n      </div>\n\n      <div class="bp-panel__body">\n        <div class="bp-panel__body__description">Change your notification settings here. Get notified whenever the following events happen.</div>\n\n        <div class="bp-panel__body__content">\n          <div class="bp-panel__item">\n            <div class="bp-panel__item__label">Event</div>\n            <div class="bp-panel__item__field">{{planConfig.name}}</div>\n          </div>\n          <div class="bp-panel__item">\n            <div class="bp-panel__item__label">Invoice Created</div>\n            <div class="bp-panel__item__field">{{planConfig.billingDate | date: \'mediumDate\'}}</div>\n          </div>\n          <div class="bp-panel__item">\n            <div class="bp-panel__item__label">Invoice Paid</div>\n            <div class="bp-panel__item__field">{{planConfig.billingDate | date: \'mediumDate\'}}</div>\n          </div>\n          <div class="bp-panel__item">\n            <div class="bp-panel__item__label">Partial Payment</div>\n            <div class="bp-panel__item__field">{{planConfig.billingDate | date: \'mediumDate\'}}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class="bp-panel">\n      <div class="bp-panel__header">\n        <div class="bp-panel__header__name" lcl>Account Activity</div>\n      </div>\n\n      <div class="bp-panel__body">\n        <div class="bp-panel__body__description">\n        </div>\n        <div class="bp-panel__body__content">\n\n          <div class="list">\n              <a class="item" href="#">\n                <h2>Changed User</h2>\n                <p>5:11 PM, Today</p>\n              </a>\n          </div>\n\n          <a class="bp-outline-button--inline bp-margin-top-20" ui-sref="menu.planSettings">\n            <span lcl>View All Recent</span>\n            <i class="bp-padding-left icon ion-chevron-right"></i>\n          </a>\n        </div>\n      </div>\n    </div> -->\n\n  </ion-content>\n\n</ion-view>\n'),e.put("components/users/confirm-remove-modal.html",'<ion-modal-view style="max-height:380px; max-width:680px; margin-left:auto; margin-right:auto;">\n  <ion-header-bar>\n    <div class="buttons">\n      <button class="button" ng-click="modal.hide()"><span class="ion-ios-close-empty"></span></button>\n    </div>\n    <h1 class="title">Confirm Remove User</h1>\n  </ion-header-bar>\n  <ion-content class="center">\n\n  <ion-content class="bp-no-header">\n\n    <div class="bp-constrain-signup">\n\n      <p lcl>Please type the user\'s email address "{{email.text}}" to confirm that you want to remove them.</p>\n\n      <form bp-detect-submission name="confirmRemoveUserForm" novalidate ng-submit="confirmRemoveUser()" class="padding-top" style="max-height:400px; max-width: 500px">\n\n        <div class="prelogin__fieldset">\n          <label class="signup__label" for="newPassword" lcl>User\'s email address</label>\n\n          <div class="prelogin__pass">\n            <div class="prelogin__pass__inputs">\n              <input type="text" class="prelogin__input" name="userEmail" ng-model="confirmedEmail" required>\n            </div>\n          </div>\n\n          <button ng-disabled="confirmedEmail != email.text" type="submit" class="button bp-button button-warning" ladda="loginLoading" lcl>Remove User</button>\n        </div>\n\n      </form>\n\n    </div>\n\n  </ion-content>\n</ion-modal-view>\n'),e.put("components/users/invite-form.html",'<ion-view lcl-attr="title|page title" title="Invite Users" bp-back-button-sref="menu.settings.users">\n\n  <ion-content class="user-form">\n\n    <div class="bp-alert" ng-show="alert.message">\n      <div class="bp-alert__icon-box bp-alert__icon-box--green" ng-show="alert.type == \'success\'"> \n        <i class="icon ion-checkmark"></i>\n      </div>\n\n      <div class="bp-alert__icon-box bp-alert__icon-box--orange" ng-show="alert.type == \'error\'">\n        <i class="icon ion-alert"></i>\n      </div>\n      \n      <div class="bp-alert__content">\n        {{alert.message}}\n      </div>\n    </div>\n\n    <form bp-detect-submission name="userForm" ng-submit="handleSubmit(userForm)" novalidate>\n\n      <div class="bp-panel">\n        <div class="bp-panel__body">\n\n          <div class="bp-panel__body__description">\n            <div class="bp-panel__header__name" lcl>User Information</div>\n            <p>We will send this user an email which they will confirm. Then they will be able to log into your dashboard.</p>\n          </div>\n\n          <div class="bp-panel__body__content">\n            <label class="bp-panel__field-wrapper">\n              <span class="bp-form__field-label" lcl>Email</span>\n              <input type="email" class="bp-panel__field-wrapper__input-text" ng-model="email.text" ng-required=\'true\' ng-disabled="userId">\n            </label>\n            <i class="generic-form-error icon-left assertive ion-android-close bp-error signup--error" bp-val-msg-for="email.text">\n              <span class="dark padding-left" lcl>Please enter a valid email address.</span></i>\n\n            <label class="bp-panel__field-wrapper">\n              <span class="bp-form__field-label" lcl>Full Name</span>\n              <input placeholder=\'(optional)\' type="text" class="bp-panel__field-wrapper__input-text" ng-model="invitation.name" ng-disabled="userId">\n            </label>\n\n          </div>\n\n        </div>\n      </div>\n      <div class="bp-panel">\n        <div class="bp-panel__body">\n\n          <div class="bp-panel__body__description">\n            <div class="bp-panel__header__name" lcl>Privileges</div>\n\n            <p class=\'generic-form-error icon-left assertive ion-android-close bp-error\' ng-show="formSubmitted && facadeCount() == 0">\n              <span class="dark padding-left" lcl>Please pick at least one capability</span>\n            </p>\n\n            <p>You can check to assign privileges to a user. You can check more than one privilege.</p>\n          </div>\n\n          <div class="bp-panel__body__content">\n            <ul class="list">\n              <li class="item item-checkbox">\n                <label class="checkbox">\n                  <input name="facade" ng-model="user.facades[\'orgAdmin\']" type="checkbox" ng-change="onAdminChanged()">\n                </label>\n                <span>Admin</span>\n                <p class="item-complex item-text-wrap ng-binding" lcl>Has full access to all features and settings</p>\n              </li>\n              <li class="item item-checkbox" ng-disabled="user.facades[\'orgAdmin\']">\n                <label class="checkbox">\n                  <input value="on" name="facade" ng-model="user.facades[\'merchantFinance\']" type="checkbox">\n                </label>\n                <span>Accounting</span>\n                <p class="item-complex item-text-wrap ng-binding" lcl>Can download the accounting ledger and initiate payments</p>\n              </li>\n              <li class="item item-checkbox" ng-disabled="user.facades[\'orgAdmin\']">\n                <label class="checkbox">\n                  <input name="facade" ng-model="user.facades[\'merchantIntegration\']" type="checkbox">\n                </label>\n                <span>Integration</span>\n                <p class="item-complex item-text-wrap ng-binding" lcl>Can setup payment tools, manage API keys, and initiate payments</p>\n              </li>\n              <li class="item item-checkbox" ng-disabled="user.facades[\'orgAdmin\']">\n                <label class="checkbox">\n                  <input name="facade" ng-model="user.facades[\'merchantSupport\']" type="checkbox">\n                </label>\n                <span>Support</span>\n                <p class="item-complex item-text-wrap ng-binding" lcl>Can search for payments, issue refunds, and resolve payment exceptions</p>\n              </li>\n            </ul>\n\n            <button class="button bp-button" ladda="submitting" style="float:right;" lcl>Send Invite</button>\n\n          </div>\n        </div>\n      </div>\n\n    </form>\n\n    \n\n  </ion-content>\n</ion-view>\n'),e.put("components/users/update-user-form.html",'<ion-view lcl-attr="title|page title" title="Edit User" bp-back-button-sref="menu.settings.users">\n\n  <ion-nav-buttons side="right">\n    <button class="button nav-right-button red" ng-click="removeUser()" ng-show=\'!editingSelf\'>\n      Remove User\n    </button>\n  </ion-nav-buttons>\n\n  <ion-content class="user-form">\n\n    <div class="bp-alert" ng-show="alert.message">\n      <div class="bp-alert__icon-box bp-alert__icon-box--green" ng-show="alert.type == \'success\'">\n        <i class="icon ion-checkmark"></i>\n      </div>\n\n      <div class="bp-alert__icon-box bp-alert__icon-box--orange" ng-show="alert.type == \'error\'">\n        <i class="icon ion-alert"></i>\n      </div>\n\n      <div class="bp-alert__content">\n        {{alert.message}}\n      </div>\n    </div>\n\n    <form bp-detect-submission name="userForm" ng-submit="handleSubmit(userForm)" novalidate>\n\n      <div class="bp-panel">\n        <div class="bp-panel__body">\n\n          <div class="bp-panel__body__description">\n            <div class="bp-panel__header__name" lcl>User Information</div>\n          </div>\n\n          <div class="bp-panel__body__content">\n            <label class="bp-panel__field-wrapper">\n              <span class="bp-form__field-label" lcl>Email</span>\n              <input type="email" class="bp-panel__field-wrapper__input-text" ng-model="email.text" ng-required=\'true\' ng-disabled="userId">\n            </label>\n            <i class="generic-form-error icon-left assertive ion-android-close bp-error signup--error" bp-val-msg-for="email.text">\n              <span class="dark padding-left" lcl>Please enter a valid email address.</span></i>\n\n            <label class="bp-panel__field-wrapper">\n              <span class="bp-form__field-label" lcl>Full Name</span>\n              <input placeholder=\'(optional)\' type="text" class="bp-panel__field-wrapper__input-text" ng-model="invitation.name" ng-disabled="userId">\n            </label>\n\n          </div>\n\n        </div>\n      </div>\n      <div class="bp-panel">\n        <div class="bp-panel__body">\n\n          <div class="bp-panel__body__description">\n            <div class="bp-panel__header__name" lcl>Privileges</div>\n\n            <p class=\'generic-form-error icon-left assertive ion-android-close bp-error\' ng-show="formSubmitted && facadeCount() == 0">\n              <span class="dark padding-left" lcl>Please pick at least one capability</span>\n            </p>\n\n            <p>You can check to assign privileges to a user. You can check more than one privilege.</p>\n          </div>\n\n          <div class="bp-panel__body__content">\n            <ul class="list">\n              <li class="item item-checkbox">\n                <label class="checkbox">\n                  <input name="facade" ng-model="user.facades[\'orgAdmin\']" type="checkbox" ng-change="onAdminChanged()">\n                </label>\n                <span>Admin</span>\n                <p class="item-complex item-text-wrap ng-binding" lcl>Has full access to all features and settings</p>\n              </li>\n              <li class="item item-checkbox" ng-disabled="user.facades[\'orgAdmin\']">\n                <label class="checkbox">\n                  <input value="on" name="facade" ng-model="user.facades[\'merchantFinance\']" type="checkbox"">\n                </label>\n                <span>Accounting</span>\n                <p class="item-complex item-text-wrap ng-binding" lcl>Can download the accounting ledger and initiate payments</p>\n              </li>\n              <li class="item item-checkbox" ng-disabled="user.facades[\'orgAdmin\']">\n                <label class="checkbox">\n                  <input name="facade" ng-model="user.facades[\'merchantIntegration\']" type="checkbox">\n                </label>\n                <span>Integrator</span>\n                <p class="item-complex item-text-wrap ng-binding" lcl>Can setup payment tools, manage API keys, and initiate payments</p>\n              </li>\n              <li class="item item-checkbox" ng-disabled="user.facades[\'orgAdmin\']">\n                <label class="checkbox">\n                  <input name="facade" ng-model="user.facades[\'merchantSupport\']" type="checkbox">\n                </label>\n                <span>Support</span>\n                <p class="item-complex item-text-wrap ng-binding" lcl>Can search for payments, issue refunds, and resolve payment exceptions</p>\n              </li>\n            </ul>\n\n            <button class="button bp-button" ladda="submitting" style="float:right;" lcl>Save Changes</button>\n\n          </div>\n        </div>\n      </div>\n\n      <div class=\'bp-panel\'></div>\n\n    </form>\n\n  </ion-content>\n</ion-view>\n'),e.put("components/users/users.html",'<ion-content class="bp-has-top-toolbar bp-general">\n\n  <div class="bp-alert" ng-show="alert.message">\n    <div class="bp-alert__icon-box bp-alert__icon-box--green" ng-show="alert.type == \'success\'"> \n      <i class="icon ion-checkmark"></i>\n    </div>\n\n    <div class="bp-alert__icon-box bp-alert__icon-box--orange" ng-show="alert.type == \'error\'">\n      <i class="icon ion-alert"></i>\n    </div>\n    \n    <div class="bp-alert__content">\n      {{alert.message}}\n    </div>\n  </div>\n\n  <div class="list bp-users__user-list bp-padding bp-lg-pad-sides-50 bp-constrain-narrow" ng-show="users.length > 1">\n\n    <a ng-repeat="user in users" ui-sref="menu.users({ id: user.id })" class="item item-icon-left item-icon-right bp-item bp-reset bp-flex-row bp-bottom-border-only">\n      <i class="icon">\n        <gravatar class="bp-user-menu__user__icon" user-email="user.email" size="24"></gravatar>\n      </i>\n      {{ user.name || user.email }}\n      <small class="bp-users__pending-label" ng-hide="user.verified">(Pending)</small>\n      <span class="bp-users__role-badges">\n\n        <span ng-show="user.facades.indexOf(\'orgAdmin\') != -1">\n          <span class="bp-badge bp-badge-info" bp-role-badge mobile-abbreviation="Ad">Admin</span>\n        </span>\n\n        <span class="bp-badge-list" ng-hide="user.facades.indexOf(\'orgAdmin\') != -1">\n          <span class="bp-badge bp-badge-success" ng-if="user.facades.indexOf(\'merchantFinance\') != -1" bp-role-badge mobile-abbreviation="Ac">Accounting</span>\n          <span class="bp-badge bp-badge-warning" ng-if="user.facades.indexOf(\'merchantSupport\') != -1" bp-role-badge>Support</span>\n          <span class="bp-badge bp-badge-danger" ng-if="user.facades.indexOf(\'merchantIntegration\') != -1" bp-role-badge mobile-abbreviation="In">Integration</span>\n        </span>\n\n      </span>\n      <i class="icon icon-right ion-ios-arrow-right bp-users__arrow"></i>\n    </a>\n\n    <div class="padding-top">\n      <a class="button bp-button bp-users__invite-button" ui-sref="menu.invite" lcl>Invite User</a>\n    </div>\n  </div>\n\n  <div class="bp-container">\n    <div class="bp-section" ng-show="users.length == 1">\n      <div class="bp-inside">\n        <h4 lcl>You are the only user</h4>\n        <h1><i class="icon ion-person-add"><span class="badge badge-assertive icon-badge"></span></i></h1>\n        <div>\n          <p class="settlement-helptext" lcl>You are <a ui-sref="menu.users({ id: users[0].id })">the only user</a> and have full administrative capabilities. Invite more users to your organization.</p>\n          <a class="button bp-button" ui-sref="menu.invite" lcl>Invite User</a>\n        </div>\n      </div>\n    </div>\n\n  </div>\n\n</ion-content>\n'),e.put("components/verification/verification.html",'<ion-view view-title="Approved Volume" class="verif" bp-back-button-sref="menu.settings.general">\n  <ion-content>\n    <p class="heading-paragraph" lcl>In order to raise your daily processing limits, we require additional information to verify your identity and your business. You can apply to raise your approved sales volume at any time.</p>\n    <alert class="center-content" show="alert.message" type="alert.type">{{alert.message}}</alert>\n    <ul class="list">\n\n      <li class="item" ng-hide="user.approvedTier > 0 || user.requiredTier > 0">\n        <h2>Basic &ndash; Up to a $100 daily, $500 annually</h2>\n\n        <button disabled class="bp-big-action button" ng-show="user.appliedTier === 0 && user.approvedTier < 0" lcl>Pending</button>\n        <button ng-show="user.approvedTier == 0" class="bp-big-action button button-balanced" style="cursor:default">\n          <i class="icon ion-checkmark-circled"></i> verified\n        </button>\n      </li>\n\n      <li class="item" ng-hide="user.approvedTier > 1 || user.requiredTier > 1">\n        <h2 lcl>Tier 1 &ndash; Up to $1,000 daily, $10,000 annually</h2>\n        <a ng-show="user.approvedTier < 1" class="bp-big-action" ui-sref="menu.verification1">Apply</a>\n\n        <button ng-show="user.approvedTier == 1" class="bp-big-action button button-balanced" style="cursor:default">\n          <i class="icon ion-checkmark-circled"></i> verified\n        </button>\n      </li>\n\n      <li class="item" ng-hide="user.approvedTier > 2 || user.requiredTier > 2">\n        <h2 lcl>Tier 2 &ndash; Up to $10,000 daily, $500,000 annually <i ng-show="user.planId < 3" class="ion ion-asterisk upgrade-hint"></i></h2>\n        <a ng-show="user.approvedTier < 2" class="bp-big-action" ui-sref="menu.verification2">Apply</a>\n\n        <button ng-show="user.approvedTier == 2" class="bp-big-action button button-balanced" style="cursor:default">\n          <i class="icon ion-checkmark-circled"></i> verified\n        </button>\n      </li>\n\n      <li class="item" ng-hide="user.approvedTier > 3">\n        <h2 lcl>Tier 3 &ndash; Up to $100,000 daily, $5,000,000 annually <i ng-show="user.planId < 3" class="ion ion-asterisk upgrade-hint"></i></h2>\n        <a ng-show="user.approvedTier < 3" ng-disabled="user.appliedTier === 3" class="bp-big-action" ui-sref="menu.verification3">Apply</a>\n\n        <button ng-show="user.approvedTier === 3" class="bp-big-action button button-balanced" style="cursor:default">\n          <i class="icon ion-checkmark-circled"></i> verified\n        </button>\n      </li>\n\n      <li class="item item-text-wrap">\n        <p ng-show="user.planId < 3" style="margin-bottom: 25px;">\n          <i class="ion ion-asterisk upgrade-hint" style="margin-left: 0;"></i> Requires upgrade to <a ui-sref="menu.planSettings">Business Plan</a>\n        </p>\n        <p>To process more than $100,000/day, please contact\n          <a href="mailto:compliance@bitpay.com">compliance@bitpay.com</a>.\n        </p>\n      </li>\n    </ul>\n\n  </ion-content>\n</ion-view>\n'),e.put("components/verification/verification-0.html",'<ion-view view-title="Basic Verification" class="verif-0" bp-back-button-sref="{{backButtonSref}}">\n  <ion-content>\n    <div class="bp-section" ng-show="!user.merchantReverify">\n      <div class="bp-inside">\n        <p>Basic verification will allow you to process real payments of up to $100 daily and $500 annually.</p>\n        <p>We\'ll send you a confirmation email within a few minutes of submitting your verification.</p>\n      </div>\n    </div>\n\n    <alert show="alert.message" type="alert.type">{{alert.message}}</alert>\n\n    <form bp-detect-submission name="businessInfo" novalidate ng-submit="verifyBusinessInfo(businessInfo)" class="bp-form">\n      <div class="bp-section">\n        <div class="bp-inside">\n          <div class="row responsive-md">\n            <label>\n              <div class="textfield-label" lcl>Legal Name of Business</div>\n              <input type="text" name="legalBusinessName" placeholder="" ng-model="verificationData.legalBusinessName" ng-pattern="dba" required>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error" bp-show="businessInfo.legalBusinessName.$invalid && businessInfo.legalBusinessName.hasVisited"><span class="dark padding-left" lcl>What name are you Doing Business As?</span></i>\n            </label>\n          </div>\n\n          <div class="row responsive-md">\n\n            <div>\n              <div class="textfield-label" lcl>Physical Business Address</div>\n\n              <div class="address-container">\n                <input name="address" google-autocomplete="autofillAddress(data)" type="text" placeholder="Street Address" ng-model="verificationData.merchantAddress1" ng-pattern="patternAddress" autocomplete=\'off\' required/>\n                <input name="address2" type="text" placeholder="bldg, dept, or unit #" ng-model="verificationData.merchantAddress2" ng-pattern="patternAddress"/>\n              </div>\n\n              <div class="address-container">\n                <input name="city" type="text" placeholder="City" ng-model="verificationData.merchantCity" ng-pattern="patternAddress" required/>\n                <input ng-if="verificationData.merchantCountry !== \'United States\'" name="state" type="text" placeholder="State/Province/Region" ng-model="verificationData.merchantState" ng-pattern="patternAddress" required/>\n                <div class="bp-dropdown bp-dropdown--narrow" ng-if="verificationData.merchantCountry === \'United States\'">\n                  <select name="state" ng-model="verificationData.merchantState" required>\n                    <option value="" selected disabled hidden>State</option>\n                    <option value="{{state.abbreviation}}" ng-repeat="state in states">{{state.name}}</option>\n                  </select>\n                </div>\n                <input name="postal_code" type="text" placeholder="ZIP/Postal Code" ng-model="verificationData.merchantZip" ng-pattern="patternAddress" required/>\n              </div>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error" bp-show="(businessInfo.address.$invalid && businessInfo.address.hasVisited) || (businessInfo.city.$invalid && businessInfo.city.hasVisited) || (businessInfo.state.$invalid && businessInfo.state.hasVisited) || (businessInfo.postal_code.$invalid && businessInfo.postal_code.hasVisited)"><span class="dark padding-left" lcl>Please enter a valid address.</span></i>\n\n            </div>\n          </div>\n\n          <div class="row responsive-md">\n\n            <label class="textfield">\n              <div class="textfield-label" lcl>Country</div>\n              <input type="text" name="country" bp-country-input lcl-attr="placeholder" placeholder="Begin typing..." ng-model="verificationData.merchantCountry" typeahead="country.name as country.name for country in countries | typeaheadFilter:$viewValue" autocomplete=\'off\' required/>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error" bp-show="businessInfo.country.$invalid && businessInfo.country.hasVisited"><span class="dark padding-left" lcl>In what country are you based?</span></i>\n            </label>\n\n            <label>\n              <div class="textfield-label" lcl>Industry</div>\n              <input type="text" name="industry" bp-industry-input lcl-attr="placeholder" placeholder="Begin typing..." ng-model="verificationData.merchantIndustry" typeahead="industry.name as industry.name for industry in industries | typeaheadFilter:$viewValue" autocomplete=\'off\' required/>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error" bp-show="businessInfo.industry.$invalid && businessInfo.industry.hasVisited"><span class="dark padding-left" lcl>In what industry do you operate?</span></i>\n            </label>\n\n          </div>\n          <p>Please ensure that your website or business profile is online and publicly accessible before submitting your verification.</p>\n          <div class="row responsive-md">\n\n            <label>\n              <div class="textfield-label" lcl>Website or Business Profile</div>\n              <input type="text" ng-pattern="urlPattern" placeholder="Web address" name="website" ng-model="verificationData.merchantWebsite" required/>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error" bp-show="businessInfo.website.$invalid && businessInfo.website.hasVisited"><span class="dark padding-left" lcl>Please enter a valid URL.</span></i>\n            </label>\n            <label>\n              <div class="textfield-label" lcl>Phone Number</div>\n              <input type="text" ng-pattern="/^[^a-zA-Z]+$/" name="merchantPhone" placeholder="" ng-model="verificationData.merchantPhone" required>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error" bp-show="businessInfo.merchantPhone.$invalid && businessInfo.merchantPhone.hasVisited"><span class="dark padding-left" lcl>Please enter a valid contact phone number.</span></i>\n            </label>\n\n          </div>\n\n          <div class="row responsive-md">\n\n            <div>\n              <div class="textfield-label" lcl>Beneficial Owner</div>\n\n              <p lcl>Who owns this business? Please provide the full, legal name of the beneficial owner.</p>\n\n              <div class="address-container">\n                <input type="text" name="OwnerFirstName" placeholder="First Name (Given Name)" ng-model="verificationData.owners[0].firstName" ng-pattern="onlyLetters" required/>\n                <input type="text" name="OwnerLastName" placeholder="Last Name (Family Name)" ng-model="verificationData.owners[0].lastName" ng-pattern="onlyLetters" required/>\n              </div>\n              <div><p>What is the beneficial owner\'s date of birth?</p></div>\n              <bp-dob-picker dob="verificationData.owners[0].dateOfBirth"></bp-dob-picker>\n              <i class="generic-form-error icon-left assertive ion-android-close bp-error" bp-show="(businessInfo.OwnerFirstName.$invalid && businessInfo.OwnerFirstName.hasVisited) || (businessInfo.OwnerLastName.$invalid && businessInfo.OwnerLastName.hasVisited)">\n                <span class="dark padding-left" lcl>Please enter the first (given), last (family) name, and date of birth of the beneficial owner of your business. Only english characters are allowed.</span></i>\n            </div>\n            <div>\n\n            </div>\n\n          </div>\n\n          <p lcl>Please ensure the above information is correct as you will not be able to make changes to this information later.</p>\n\n          <div class="row responsive-md">\n            <button ng-class="{\'bp-invalid-submit\': businessInfo.submissionAttempted }" ladda="submitting" class="bp-big-action" lcl>Verify</button>\n            <div class="padding-left"><p class="padding-left padding-top bold" ng-show="businessInfo.submissionAttempted">Please correct the issues above.</p></div>\n          </div>\n          </ion-item>\n        </div>\n      </div>\n\n    </form>\n\n  </ion-content>\n\n</ion-view>\n'),e.put("components/verification/verification-1.html",'<ion-view view-title="Approved Volume" bp-back-button-sref="menu.verification">\n\n  <ion-content>\n    <alert animation="slide-in-up" show="tierUpgradePending" type="\'error\'" lcl>There is a pending\n      tier upgrade request.\n    </alert>\n    <alert animation="slide-in-up" show="coinplianceError" type="\'error\'" lcl>There was an issue with your upgrade request, please contact support.\n    </alert>\n    <div class="bp-section">\n      <div class="bp-inside">\n        <h3 lcl>Up to $1,000 daily, $10,000 annually</h3>\n        <h4 lcl>Tier 1</h4>\n        <p lcl>On average, verification takes 2-4 business days - we\'ll notify you via email upon approval.</p>\n        <div class="card" style="margin-left: 0">\n          <div class="item item-divider item-text-wrap" lcl>Please ensure you have the following</div>\n          <div class="item item-text-wrap">\n            <ul class="verif-bullet-list">\n              <li><span lcl>Live website with your products/services available for purchase.</span></li>\n              <li><span lcl>A valid government issued Business Tax ID number (United States, Netherlands, Germany).</span></li>\n              <li><span lcl>Incorporation/Organization documents or business registration documents.</span></li>\n            </ul>\n          </div>\n        </div>\n        <button class="bp-big-action" ng-hide="tierData" ng-click="applyTier1()" lcl>Apply</button>\n      </div>\n    </div>\n  </ion-content>\n</ion-view>\n'),e.put("components/verification/verification-2.html",'<ion-view view-title="Approved Volume" bp-back-button-sref="menu.verification">\n\n  <ion-content>\n    <div class="bp-alert" ng-show="user.planId < 3">\n      <div class="bp-alert__icon-box bp-alert__icon-box--orange"><i class="icon ion-alert"></i></div>\n      <div class="bp-alert__content">\n        <span lcl>To apply for Tier 2, you must upgrade to the <a ng-click="updgradePlanToApply()">Business Plan</a>.</span>\n      </div>\n    </div>\n\n    <alert animation="slide-in-up" show="tierUpgradePending" type="\'error\'" lcl>There is a pending\n      tier upgrade request.\n    </alert>\n    <alert animation="slide-in-up" show="coinplianceError" type="\'error\'" lcl>There was an issue with your upgrade request, please contact support.\n    </alert>\n    <div class="bp-section">\n      <div class="bp-inside">\n        <h3 lcl>Up to $10,000 daily, $500,000 annually</h3>\n        <h4 lcl>Tier 2</h4>\n        <p lcl>On average, verification takes 2-4 business days - we\'ll notify you via email upon approval.</p>\n        <alert class="center-content" show="alert.type" type="alert.type">{{alert.message}}</alert>\n        <div class="card" style="margin-left: 0">\n          <div class="item item-divider item-text-wrap">\n            <p lcl>The following is required</p>\n          </div>\n          <div class="item item-text-wrap">\n            <ul class="verif-bullet-list">\n              <li><span lcl>Live website with your products/services available for purchase.</span><i ng-show="user.approvedTier > 0" class="icon balanced ion-checkmark-circled"></i></li>\n              <li><span lcl>A valid government issued Business Tax ID number (United States, Netherlands, Germany).</span><i ng-show="user.approvedTier > 0" class="icon balanced ion-checkmark-circled"></i></li>\n              <li><span lcl>Incorporation/Organization documents or business registration documents.</span><i ng-show="user.approvedTier > 0" class="icon balanced ion-checkmark-circled"></i></li>\n              <li lcl>Principal/director/owner(s) photo identification.</li>\n              <li lcl>Proof of current physical business address.</li>\n            </ul>\n          </div>\n        </div>\n        <button class="bp-big-action" ng-hide="tierData || user.planId > 1" ng-click="updgradePlanToApply()" lcl>Upgrade Plan to Apply</button>\n        <button class="bp-big-action" ng-hide="tierData || user.planId < 3" ng-click="applyTier2()" lcl>Apply</button>\n      </div>\n    </div>\n\n  </ion-content>\n\n</ion-view>\n'),e.put("components/verification/verification-3.html",'<ion-view view-title="Approved Volume" bp-back-button-sref="menu.verification">\n\n  <ion-content>\n    <div class="bp-alert" ng-show="user.planId < 3">\n      <div class="bp-alert__icon-box bp-alert__icon-box--orange"><i class="icon ion-alert"></i></div>\n      <div class="bp-alert__content">\n        <span lcl>To apply for Tier 3, you must upgrade to the <a ng-click="updgradePlanToApply()">Business Plan</a>.</span>\n      </div>\n    </div>\n    <alert animation="slide-in-up" show="tierUpgradePending" type="\'error\'" lcl>There is a pending\n      tier upgrade request.\n    </alert>\n    <alert animation="slide-in-up" show="coinplianceError" type="\'error\'" lcl>There was an issue with your upgrade request, please contact support.\n    </alert>\n    <div class="bp-section">\n      <div class="bp-inside">\n        <h3 lcl>Up to $100,000 daily, $5,000,000 annually</h3>\n        <h4 lcl>Tier 3</h4>\n        <p>On average, verification takes 2-4 business days - we\'ll notify you via email upon approval.</p>\n        <alert class="center-content" show="alert.type" type="alert.type">{{alert.message}}</alert>\n        <div class="card" style="margin-left: 0">\n          <div class="item item-divider item-text-wrap">\n            <p lcl>The following is required</p>\n          </div>\n          <div class="item item-text-wrap">\n            <ul class="verif-bullet-list">\n              <li><span lcl>Live website with your products/services available for purchase.</span><i ng-show="user.approvedTier > 0" class="icon balanced ion-checkmark-circled"></i></li>\n              <li><span lcl>A valid government issued Business Tax ID number (United States, Netherlands, Germany).</span><i ng-show="user.approvedTier > 0" class="icon balanced ion-checkmark-circled"></i></li>\n              <li><span lcl>Incorporation/Organization documents or business registration documents.</span><i ng-show="user.approvedTier > 0" class="icon balanced ion-checkmark-circled"></i></li>\n              <li><span lcl>Principal/director/owner(s) photo Identification.</span><i ng-show="user.approvedTier > 1" class="icon balanced ion-checkmark-circled"></i></li>\n              <li><span lcl>Proof of current business address.</span><i ng-show="user.approvedTier > 1" class="icon balanced ion-checkmark-circled"></i></li>\n              <li><span lcl>Three months of business bank statements or a letter of good standing from the bank.</span></li>\n            </ul>\n          </div>\n        </div>\n        <button class="bp-big-action" ng-hide="tierData || user.planId > 1" ng-click="updgradePlanToApply()" lcl>Upgrade Plan to Apply</button>\n        <button class="bp-big-action" ng-hide="tierData || user.planId < 3" ng-click="applyTier3()" lcl>Apply</button>\n      </div>\n    </div>\n  </ion-content>\n</ion-view>\n'),e.put("components/verify-email/verify-email.html",'<ion-view view-title="Verify Email" class="signup" hide-nav-bar="true">\n  <ion-content>\n    <div class="signup__container">\n      <div class="signup__header">\n        <img src="img/bitpay-logo.svg">\n        <h1 lcl>Email Verification</h1>\n        <div ng-show="!response">\n          <div class="landing loading">\n            <div class="center-content loading-icon">\n              <i class="icon jumbo-icon ion-loading-c"></i>\n            </div>\n          </div>\n        </div>\n        <div ng-show="response">\n          <p>\n            <i ng-show="success" class="icon ion-checkmark-circled"></i>\n            <i ng-hide="success" class="icon ion-close-circled"></i> {{message}}\n          </p>\n          <div class="center-content">\n            <a class="bp-big-action button button-block button-stable" ui-sref="menu.getstarted">Go to your Dashboard</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </ion-content>\n</ion-view>'),e.put("directives/alert/alert.html",'<div class="alert alert-{{type}}" ng-show="show">\n  <span ng-transclude></span>\n</div>'),e.put("directives/bp-dob-picker/bp-dob-picker.html",'<div class="bp-dob-picker">\n  <div class="bp-dropdown bp-dropdown--narrow">\n    <select ng-model="month" style="width: 100%;" ng-class="{\'invalid\': ((!month && month !== 0) || month < 0) && dobVisited, \'has-visited\': dobVisited}" ng-change="changed();" ng-blur="monthVisited = true;visited();">\n      <option disabled value="-1">Month</option>\n      <optgroup label="--"></optgroup>\n      <option value="0">January</option>\n      <option value="1">February</option>\n      <option value="2">March</option>\n      <option value="3">April</option>\n      <option value="4">May</option>\n      <option value="5">June</option>\n      <option value="6">July</option>\n      <option value="7">August</option>\n      <option value="8">September</option>\n      <option value="9">October</option>\n      <option value="10">November</option>\n      <option value="11">December</option>\n    </select>\n  </div>\n  <input size="5" maxlength="2" type="tel" max="31" min="1" class="bp-dob-picker__free-input bp-dob-picker__day-input" placeholder="Day" ng-model="day" ng-change="changed()" ng-blur="dayVisited = true;visited();" ng-class="{\'ng-invalid\': (error === 2 || !day) && dobVisited}" >\n  <input size="10" maxlength="4" type="tel" max="2015" min="1900" class="bp-dob-picker__free-input bp-dob-picker__year-input" placeholder="Year" ng-model="year" ng-change="changed()" ng-blur="yearVisited = true;visited();" ng-class="{\'ng-invalid\': (error === 0 || error === 9001 || !year) && dobVisited}" >\n</div>\n'),e.put("directives/bp-panel/bp-panel.html",'<div class="bp-constrain" ng-transclude>\n</div>\n'),e.put("directives/bp-profile/bp-profile.html",'<article class="card merchcard">\n  <div class="row">\n    <div class="col col-75 merchcard__orgnname">\n      <h1>{{profile.orgName}}</h1>\n    </div>\n    <div class="col col-25 merchcard__website">\n      <p>{{profile.website}}</p>\n    </div>\n  </div>\n\n  <div class="row">\n    <div class="col col-25">\n      <img class="thumb" ng-src="{{profile.imageUrl}}" />\n    </div>\n\n    <div class="col col-75">\n\n\n      <div class="merchcard__description">\n        <p>{{profile.description}}</p>\n      </div>\n    </div>\n  </div>\n\n\n</article>'),e.put("directives/bp-settlement-date/bp-settlement-date.html",'<span ng-show="dateIsToday" lcl>Today</span>\n<span ng-show="dateIsTomorrow" lcl>Tomorrow</span>\n<span ng-hide="dateIsToday || dateIsTomorrow">{{date | date:\'shortDate\'}}</span>\n'),e.put("directives/bp-typeahead/bp-typeahead-match.html",'<a tabindex="-1" ng-bind-html="match.label | typeaheadHighlight:query"></a>'),e.put("directives/bp-typeahead/bp-typeahead-popup.html",'<ul class="dropdown-menu" ng-if="isOpen()" ng-style="{top: position.top+\'px\', left: position.left+\'px\'}" style="display: block;" role="listbox" aria-hidden="{{!isOpen()}}">\n  <li ng-repeat="match in matches track by $index" ng-class="{active: isActive($index) }" ng-mouseenter="selectActive($index)" on-touch="selectMatch($index)" role="option" id="{{match.id}}">\n    <typeahead-match index="$index" match="match" query="query" template-url="templateUrl"></typeahead-match>\n  </li>\n</ul>'),e.put("index.d74e666f.html",'<!DOCTYPE html>\n<html ng-csp lang="en-US">\n\n<head>\n  <base href="/dashboard/">\n  <meta charset="utf-8">\n  <!-- Remove Later -->\n  <meta http-equiv="cache-control" content="no-cache">\n  <meta name="viewport" content="initial-scale=1, maximum-scale=1, user-scalable=no, width=device-width">\n  <title>BitPay Dashboard</title>\n\n  <!-- build:css app.aaf9a218.css -->\n  <link href="app.aaf9a218.css" rel="stylesheet">\n  <!-- endbuild -->\n\n  <link href="lib/angular-datepicker/css/angular-datepicker.393de8c9.css" rel="stylesheet">\n  <link href="lib/angular-loading-bar/css/loading-bar.4312d83e.css" rel="stylesheet">\n  <link href="lib/prism/prism.c0346ec8.css" rel="stylesheet">\n  <link href="lib/ng-tags-input/ng-tags-input.e3977cf3.css" rel="stylesheet">\n\n\n  <noscript>\n    <!-- noscript tags are executed when the user does not have javascript enabled -->\n    <style type="text/css">\n        .bp-ion-nav-view{display:none;}\n        .noscriptmsg{\n          font-size: 30px;\n          line-height: 40px;\n          padding: 30px;\n        }\n    </style>\n\n    <p class="noscriptmsg">\n      You don\'t have javascript enabled. Enable javascript to view the Bitpay Dashboard.\n    </p>\n  </noscript>\n\n  <!-- load outdated browser detection before all other js -->\n  <script src="lib/modernizr/modernizr-flexbox-custombuild.min.5f4abf36.js"></script>\n  <script src="lib/prism/prism.min.d2bc236f.js"></script>\n\n  <!-- build:jsLibNoMinify lib.a69e2080.js -->\n  <script src="lib/ionic/release/js/ionic.bundle.min.js"></script>\n  <script src="lib/sha256.js"></script>\n  <script src="lib/validateBitcoinAddress.min.js"></script>\n  <script src="lib/angular-md5/angular-md5.min.js"></script>\n  <script src="lib/swfstore.min.js"></script>\n  <script src="lib/google.recaptcha_ajax.js"></script>\n  <script src="lib/d3/d3.min.js"></script>\n  <script src="lib/c3/c3.min.js"></script>\n  <script src="lib/c3-angular/c3-angular.min.js"></script>\n  <script src="lib/address-format/dist/address-format.min.js"></script>\n  <!-- endbuild -->\n\n  <!-- build:jsLib lib2.a82821b4.js -->\n  <!--3rd party -->\n  <script src="lib/angular-datepicker/js/angular-datepicker.js"></script>\n  <script src="lib/angular-loading-bar/js/loading-bar.js"></script>\n  <script src="lib/angular-ui-mask/angular-ui-mask.js"></script>\n\n  <script src="lib/ladda/js/spin.js"></script>\n  <script src="lib/ladda/js/ladda.js"></script>\n  <script src="lib/angular-ladda/src/angular-ladda.js"></script>\n\n  <script src="lib/crypto/sha1.js"></script>\n  <script src="lib/crypto/pbkdf2.js"></script>\n\n  <script src="lib/moment/moment.js"></script>\n  <script src="lib/qrcode.js"></script>\n  <script src="lib/angular-utf8-base64.js"></script>\n  <script src="lib/ng-iban/dist/ng-iban.js"></script>\n  <script src="lib/ng-tags-input/ng-tags-input.js"></script>\n  <!-- endbuild -->\n\n  <!-- build:js1 app.d62cf617.js -->\n  <!-- your app\'s js -->\n  <script src="index.js"></script>\n  <script src="app-config.js"></script>\n\n  <script src="app.d62cf617.js"></script>\n\n  <script src="app-controller.js"></script>\n  <script src="components/menu/menu-controller.js"></script>\n  <script src="components/menu/ion-content.js"></script>\n  <script src="components/overview/overview-controller.js"></script>\n  <script src="components/signup/signup-controller.js"></script>\n  <script src="components/signup/onboard-user-controller.js"></script>\n  <script src="components/getstarted/getstarted-controller.js"></script>\n  <script src="components/setup/setup-controller.js"></script>\n  <script src="components/setup/setup-link-directive.js"></script>\n  <script src="components/login/login-controller.js"></script>\n  <script src="components/login/two-factor-controller.js"></script>\n  <script src="components/password/forgot-controller.js"></script>\n  <script src="components/password/reset-controller.js"></script>\n  <script src="components/password/change-controller.js"></script>\n  <script src="components/password/cancel-reset-controller.js"></script>\n  <script src="components/password/reset-load-controller.js"></script>\n  <script src="components/accept-invite/accept-invite-controller.js"></script>\n  <script src="components/accept-invite/accept-invite-load-controller.js"></script>\n  <script src="components/landing/landing-controller.js"></script>\n  <script src="components/verification/verification-controller.js"></script>\n  <script src="components/verification/verification-0-controller.js"></script>\n  <script src="components/verification/verification-1-controller.js"></script>\n  <script src="components/verification/verification-2-controller.js"></script>\n  <script src="components/verification/verification-3-controller.js"></script>\n  <script src="components/verify-email/onboard-user-verify-controller.js"></script>\n  <script src="components/verify-email/verify-email-controller.js"></script>\n  <script src="components/update-email/update-email-controller.js"></script>\n  <script src="components/remove-account/remove-account-controller.js"></script>\n  <script src="components/settlement-settings/settlement-settings-controller.js"></script>\n  <script src="components/settlement-settings/add-bank-acct-controller.js"></script>\n  <script src="components/settlement-settings/add-bitcoin-addr-controller.js"></script>\n  <script src="components/process-settlement-settings-changes/process-settlement-settings-changes-controller.js"></script>\n  <script src="components/dashboard/dashboard-controller.js"></script>\n  <script src="components/bills/bills.js"></script>\n  <script src="components/bills/details.js"></script>\n  <script src="components/payments/payments.js"></script>\n  <script src="components/payments/details.js"></script>\n  <script src="components/payments/refund.js"></script>\n  <script src="components/payments/refund-confirm.js"></script>\n  <script src="components/payments/adjustment-confirm.js"></script>\n  <script src="components/payments/resolve-exception.js"></script>\n  <script src="components/payments/bp-pd-price.js"></script>\n  <script src="components/payments/insufficient-balance-help-modal.js"></script>\n  <script src="components/payment-buttons/payment-buttons.js"></script>\n  <script src="components/settlements/details.js"></script>\n  <script src="components/settings/edit/plan.js"></script>\n  <script src="components/settings/edit/plan/confirm.js"></script>\n  <script src="components/settings/edit/profile.js"></script>\n  <script src="components/settings/edit/order.js"></script>\n  <script src="components/settings/edit/exceptions.js"></script>\n  <script src="components/settings/edit/currencies.js"></script>\n  <script src="components/settings/general.js"></script>\n  <script src="components/users/user-list-controller.js"></script>\n  <script src="components/users/user-controller.js"></script>\n  <script src="components/user-settings/edit/basic-info.js"></script>\n  <script src="components/user-settings/user-settings.js"></script>\n  <script src="components/user-settings/edit/security.js"></script>\n  <script src="services/segmentio-service.js"></script>\n  <script src="services/analytics-service.js"></script>\n  <script src="services/dashboard-api-service.js"></script>\n  <script src="services/session-manager.js"></script>\n  <script src="services/evaluate-meter.js"></script>\n  <script src="services/referral-tracker.js"></script>\n  <script src="services/user-data-service.js"></script>\n  <script src="services/currency-code-service.js"></script>\n  <script src="services/countries-data-service.js"></script>\n  <script src="services/industries-data-service.js"></script>\n  <script src="services/currencies-data-service.js"></script>\n  <script src="services/settlement-data-service.js"></script>\n  <script src="services/settlement-date-service.js"></script>\n  <script src="services/bill-service.js"></script>\n  <script src="services/users-data-service.js"></script>\n  <script src="services/bp-localization.js"></script>\n  <script src="services/bp-facade-service.js"></script>\n  <script src="services/tier-application.js"></script>\n  <script src="services/bitpay-api-service.js"></script>\n  <script src="services/google-maps-service.js"></script>\n  <script src="services/invoices-data-service.js"></script>\n  <script src="services/state-messenger-service.js"></script>\n  <script src="services/tooltip.js"></script>\n  <script src="services/password-service.js"></script>\n  <script src="services/plan-upgrade-service.js"></script>\n  <script src="services/bp-history.js"></script>\n  <script src="services/bp-intercom.js"></script>\n  <script src="directives/lcl/lcl.js"></script>\n  <script src="directives/lcl/lcl-attr.js"></script>\n  <script src="directives/bp-auto-focus/bp-auto-focus.js"></script>\n  <script src="directives/bp-profile/bp-profile.js"></script>\n  <script src="directives/bp-bitcoin-address/bp-bitcoin-address.js"></script>\n  <script src="directives/bp-detect-submission/bp-detect-submission.js"></script>\n  <script src="directives/bp-typeahead/bp-typeahead.js"></script>\n  <script src="directives/bp-typeahead/bp-typeahead-filter.js"></script>\n  <script src="directives/bp-show/bp-show.js"></script>\n  <script src="directives/bp-back-button-sref/bp-back-button-sref.js"></script>\n  <script src="directives/alert/alert.js"></script>\n  <script src="directives/gravatar/gravatar.js"></script>\n  <script src="directives/old-dashboard-frame/old-dashboard-frame.js"></script>\n  <script src="directives/google-autocomplete/google-autocomplete.js"></script>\n  <script src="directives/bp-country-input/bp-country-input.js"></script>\n  <script src="directives/bp-industry-input/bp-industry-input.js"></script>\n  <script src="directives/bp-onblur-validation/bp-onblur-validation.js"></script>\n  <script src="directives/bp-radio/bp-radio.js"></script>\n  <script src="directives/bp-facades/bp-facades.js"></script>\n  <script src="directives/bp-panel/bp-panel.js"></script>\n  <script src="directives/bp-moment/bp-moment.js"></script>\n  <script src="directives/qrcode/qrcode.js"></script>\n  <script src="directives/show-aside-when/show-aside-when.js"></script>\n  <script src="directives/bp-focus/bp-focus.js"></script>\n  <script src="directives/bp-prism/bp-prism.js"></script>\n  <script src="directives/bp-click-outside/bp-click-outside.js"></script>\n  <script src="directives/bp-datepicker-mobile-align/bp-datepicker-mobile-align.js"></script>\n  <script src="directives/bp-role-badge/bp-role-badge.js"></script>\n  <script src="directives/bp-append-info/bp-append-info.js"></script>\n  <script src="directives/bp-lazy-load/bp-lazy-load.js"></script>\n  <script src="directives/bp-dob-picker/bp-dob-picker.js"></script>\n  <script src="directives/bp-resolve-routing-number/bp-resolve-routing-number.js"></script>\n  <script src="directives/bp-settlement-date/bp-settlement-date.js"></script>\n  <script src="directives/bp-sharpspring-form/bp-sharpspring-form.js"></script>\n  <script src="filters/amount.js"></script>\n  <script src="filters/currency.js"></script>\n  <script src="filters/date.js"></script>\n  <script src="filters/toArray.js"></script>\n\n  <!-- inject:js -->\n  <!-- endinject -->\n\n  <!-- endbuild -->\n</head>\n<!-- TODO: web version should user platform-ios styles -->\n\n<body ng-controller="AppCtrl">\n  <ion-nav-view class="bp-ion-nav-view"></ion-nav-view>\n</body>\n\n\n<bp-lazy-load load-when="{{analyticsSafeToLoad}}" src="lib/analytics/intercom.edef5433.e04eec12.js" on-load="bootstrapAnalyticsIntercom"></bp-lazy-load>\n<bp-lazy-load load-when="{{analyticsSafeToLoad}}" src="lib/analytics/google-analytics.7507b3f1.js" on-load="bootstrapAnalyticsGA"></bp-lazy-load>\n<bp-lazy-load load-when="{{analyticsSafeToLoad}}" href="https://fonts.googleapis.com/css?family=Roboto:500,400,400italic,700italic,300,700,500italic,300italic" rel="stylesheet" type="text/css"></bp-lazy-load>\n<bp-lazy-load load-when="{{analyticsSafeToLoad}}" href="https://fonts.googleapis.com/css?family=Roboto+Condensed:400,300,700" rel="stylesheet" type="text/css"></bp-lazy-load>\n<bp-lazy-load load-when="{{analyticsSafeToLoad}}" src="https://www.google.com/recaptcha/api.js?render=explicit&onload=onRecaptchaLoad"></bp-lazy-load>\n\n</html>\n')
}]);
//# sourceMappingURL=app.js.27827ae2.map